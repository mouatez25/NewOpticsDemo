<Page x:Class="NewOptics.Atelier.ListeMonture"
      xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
   
              xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
                xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
     xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
      xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
          xmlns:dxwuin="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/navigation"
             xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" 
      >
    <Grid>
        <Grid.RowDefinitions>

            <RowDefinition Height="80px" />

            <RowDefinition  />
            <RowDefinition Height="40px"  />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" HorizontalAlignment="Left" >
            <Label Content="liste Des commandes montures" FontFamily="Tahoma" FontSize="20" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </DockPanel>
        <DockPanel  Margin="350,0,0,0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" DockPanel.Dock="Right" HorizontalAlignment="Left">
            <DockPanel.Background>
                <ImageBrush/>
            </DockPanel.Background>
            <ScrollViewer IsTabStop="True" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                <StackPanel Orientation="Horizontal" >
                    <DockPanel  Margin="0,6,6,4" ScrollViewer.PanningMode="HorizontalOnly" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" HorizontalAlignment="Left" Grid.ColumnSpan="2" Grid.Column="1">
                        <Button x:Name="btnFilter" Click="btnFilter_Click" HorizontalAlignment="Right" DockPanel.Dock="Right"  Content="" FontFamily="Times New Roman" FontSize="12" ToolTip="Filtrer" Width="20" Margin="5,0,0,0" BorderBrush="{x:Null}" Height="20" MinHeight="20" MinWidth="20">
                            <Button.Background>
                                <ImageBrush ImageSource="/NewOptics;component/Images/acept-verifier-corriger-vert-ok-oui-icone-9668-128.png"/>
                            </Button.Background>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>

                        </Button>
                        <RadioButton x:Name="ParDateCommande" IsChecked="True" GroupName="DateFiltre" Content="Par date commande" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,15,0,0" FontFamily="Tahoma"/>
                        <RadioButton x:Name="ParDateLivraison" GroupName="DateFiltre" Content="Par date Livraison" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="-130,20,0,0" FontFamily="Tahoma"/>

                        <DatePicker x:Name="DateSaisieFin" VerticalAlignment="Center" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0,0,10,0" HorizontalAlignment="Right" DockPanel.Dock="Right" BorderBrush="#FF2D3F5D" MinWidth="130" MaxWidth="130" />
                        <TextBlock  Text="au:" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="0,0,10,0" FontFamily="Tahoma" DockPanel.Dock="Right" HorizontalAlignment="Right" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                        <DatePicker x:Name="DateSaisieDébut" VerticalAlignment="Center" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0,0,10,0" HorizontalAlignment="Right" DockPanel.Dock="Right" BorderBrush="#FF2D3F5D" MinWidth="130" MaxWidth="130" />
                        <TextBlock  Text="Du:" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="10,0" FontFamily="Tahoma" DockPanel.Dock="Right" HorizontalAlignment="Right" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />

                    </DockPanel>
                    <Button x:Name="btnNew" FontFamily="Tahoma" Click="btnNew_Click" Content="" FontSize="12" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Nouveau" MinWidth="20" MinHeight="20" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="25" Height="25" Margin="20,0,0,0" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Style.BasedOn>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                        <Setter Property="Padding" Value="5,6"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Grid>
                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">

                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                        </Trigger>
                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Style.BasedOn>
                            </Style>
                        </Button.Style>
                        <Button.Background>
                            <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624077_add_user.ico"/>
                        </Button.Background>
                    </Button>

                    <Button x:Name="btnEdit" Click="btnEdit_Click" Margin="20,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" ToolTip="Modifier" MinWidth="20" MinHeight="20" Width="25" Height="25" VerticalContentAlignment="Center">
                        <Button.Background>
                            <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624391_edit_user.ico"/>
                        </Button.Background>
                        <Button.BorderBrush>
                            <ImageBrush/>
                        </Button.BorderBrush>

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Style.BasedOn>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                        <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                        <Setter Property="Padding" Value="5,6"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Grid>
                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">

                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                        </Trigger>
                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Style.BasedOn>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </ScrollViewer>
        </DockPanel>
        <DataGrid x:Name="PatientDataGrid" AutoGenerateColumns="False" IsReadOnly="True" SelectionMode="Single"  Grid.Row="1" ItemsSource="{Binding}" Margin="0"   FontFamily="Tahoma"   MouseRightButtonUp="PatientDataGrid_MouseRightButtonUp" MouseDoubleClick="PatientDataGrid_MouseDoubleClick"  AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" Background="White"   >
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Lower"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="MinHeight" Value="25"/>
                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="10,4,4,7"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="BorderThickness" Value="0,0,0,3"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                    <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                    <Custom:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                    <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                    <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="SortDirection" Value="{x:Null}"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                    </MultiTrigger>
                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                        <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                    </Trigger>
                                    <Trigger Property="DisplayIndex" Value="0">
                                        <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                            <Setter Property="FontSize" Value="20"></Setter>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="#FB2D3F5D"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.Columns>

                 


                <DataGridTextColumn Header="Date Commande"
					Binding="{Binding Date,StringFormat={}\{0:dd/MM/yyyy\}}"  Width="Auto"  MinWidth="50"  />
                <DataGridTextColumn Header="Date Livraison"
					Binding="{Binding Livraison,StringFormat={}\{0:dd/MM/yyyy\}}"  Width="Auto"   MinWidth="50" />
                <DataGridTextColumn Header="Client"
					Binding="{Binding RaisonClient}" Visibility="Collapsed"  Width="Auto"   MinWidth="50" />
                <DataGridTextColumn  Width="Auto" Header="Client" >
                    <DataGridTextColumn.Binding>
                        <MultiBinding StringFormat="{}{0}  {1}">
                            <Binding Path="IdClient" />
                            <Binding Path="RaisonClient" />
                        </MultiBinding>
                    </DataGridTextColumn.Binding>

                </DataGridTextColumn>




                <DataGridTextColumn Header="Montant Total"
					Binding="{Binding MontantTotal}" Width="Auto"  MinWidth="50" />
                <DataGridTextColumn Header="Remise"
					Binding="{Binding Remise}" Width="Auto"  MinWidth="50"  />
                <DataGridTextColumn Header="Encaissé"
					Binding="{Binding Encaissé}" Width="Auto"  MinWidth="50"  />
                <DataGridTextColumn Header="Reste"
					Binding="{Binding Reste}" Width="Auto"  MinWidth="50"  />

                <DataGridTextColumn Header="En Montage"  IsReadOnly="True"
					Binding="{Binding EnMontage}" Width="Auto"  MinWidth="50"  />
                <DataGridTextColumn Header="Montée" IsReadOnly="True"
					Binding="{Binding Monte}" Width="Auto"  MinWidth="50"  />
                <DataGridTextColumn Header="Délivrée"  IsReadOnly="True"
					Binding="{Binding Délivre}" Width="Auto"  MinWidth="50"  />
                <DataGridTextColumn Header="N°Commande"  IsReadOnly="True"
					Binding="{Binding NCommande}" Width="Auto"  MinWidth="50"  />
                <DataGridTextColumn Header="UserName"  IsReadOnly="True"
					Binding="{Binding UserName}" Width="Auto"  MinWidth="50"  />
            </DataGrid.Columns>
        </DataGrid>





        <DockPanel x:Name="Footer" Grid.Row="2">
            <Grid>
                <Grid.RowDefinitions>

                    <RowDefinition Height="1*" />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>

                </Grid.ColumnDefinitions>
                <TextBlock x:Name="label" Text="Trouver Client :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="10,12,0,10" RenderTransformOrigin="4.417,5.766" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                <TextBox x:Name="txtRecherche" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="150,0,0,0" Width="150"   Foreground="#FF343434" TextChanged="txtRecherche_TextChanged"  />
                <CheckBox x:Name="checkeffe" Content="Commande montée" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="550,0,0,0" Checked="checkeffe_Checked" Unchecked="checkeffe_Unchecked" FontFamily="Tahoma" FontWeight="Bold" />
                <CheckBox x:Name="checkRéceptionée" Content="Commande délivrée" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="700,0,0,0" Checked="checkRéceptionée_Checked" Unchecked="checkRéceptionée_Unchecked" FontWeight="Bold" FontFamily="Tahoma"  />
                <CheckBox x:Name="checkEnMontage" Content="Commande En Montage" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="350,0,0,0" FontWeight="Bold" FontFamily="Tahoma" Unchecked="checkEnMontage_Unchecked" Checked="checkEnMontage_Checked"  />

            </Grid>
        </DockPanel>
    </Grid>

</Page>
