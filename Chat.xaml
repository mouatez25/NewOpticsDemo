<Window xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
    x:Class="NewOptics.Chat"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"


    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
           Title="Discussion instantanée"   Height="650" Width="1150" ResizeMode="CanResize"  Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"   WindowStyle="ThreeDBorderWindow"  Icon="/NewOptics;component/Dent6.ico" WindowStartupLocation="CenterScreen"  BorderThickness="0"  BorderBrush="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" ShowInTaskbar="True"  >

    <Grid>


        <TextBlock FontFamily="Tahoma" FontSize="18" Foreground="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="25,0,0,0" FontWeight="Bold" Width="300" Height="60" >
            <TextBlock.Background>
                <ImageBrush ImageSource="Images/medicalogitech.png"/>
            </TextBlock.Background>
        </TextBlock>
        <Label x:Name="LBMESSAGETOUTLEMONDE" Foreground="Red" Content="message pour tout les utilisateurs" HorizontalAlignment="Center" FontFamily="Tahoma" VerticalAlignment="Top" Margin="40,5,0,0" FontWeight="Bold" />
        <Button HorizontalAlignment="Center" IsEnabled="False" VerticalAlignment="Top" Margin="0,5,200,0" Width="25" Background="Red" />
        <Label x:Name="LBMESSdAGETOUTLEMONDE" Foreground="#FF2DF900" Content="message privé" HorizontalAlignment="Center" FontFamily="Century Gothic" VerticalAlignment="Top" Margin="0,35,80,0" FontWeight="Bold" />

        <Button HorizontalAlignment="Center" IsEnabled="False" VerticalAlignment="Top" Margin="0,35,200,0" Width="25" Background="#FF115F00" />

        <Polyline x:Name="loginPolyLine"  StrokeThickness="2" Stroke="White" Points="140,90 140,300 700,300 700,90 140,90" Margin="-9,42,116,165" />


        <Border x:Name="windowBorderDatagridEtatDent" BorderThickness="3" CornerRadius="20" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" Grid.Column="1" Margin="10,62,170,85">

            <ListBox x:Name="chatListBoxMsgs" Margin="5" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderThickness="1" BorderBrush="{x:Null}" FontFamily="Tahoma" FontSize="16" Foreground="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" FontWeight="Bold" />
        </Border>
        <ListBox   x:Name="chatListBoxNames"   HorizontalAlignment="Right" Margin="0,62,10,84" Width="139"   BorderThickness="1" BorderBrush="#FF2D3F5D" FontFamily="Tahoma" FontWeight="Bold" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" SelectionChanged="chatListBoxNames_SelectionChanged"  />
        <CheckBox x:Name="chatCheckBoxWhisper" Height="15" HorizontalAlignment="Right" Margin="0,37,10,0" VerticalAlignment="Top" Width="120" FontSize="12" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontFamily="Arial" FontWeight="Bold">Mode Privé
        </CheckBox>
        <CheckBox x:Name="chatCheckBoxSonore" IsChecked="True" Height="15" HorizontalAlignment="Right" Margin="0,25,10,60" VerticalAlignment="Bottom" FontSize="12" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontFamily="Arial" FontWeight="Bold" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}">activer notification sonore
        </CheckBox>
        <Border x:Name="windowBorderDatagridMessage" BorderThickness="3" CornerRadius="20" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" Grid.Column="1" Margin="10,0,170,5" VerticalAlignment="Bottom">

            <TextBox x:Name="chatTxtBoxType" Height="39" Margin="5" VerticalAlignment="Bottom" KeyDown="chatTxtBoxType_KeyDown" KeyUp="chatTxtBoxType_KeyUp" Background="{x:Null}" BorderBrush="{x:Null}" FontFamily="Tahoma" FontSize="16" >
            </TextBox>
        </Border>
        <Button x:Name="chatButtonSend" Click="chatButtonSend_Click" Height="39" Margin="0,0,80,9" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="70" FontSize="14" FontFamily="Tahoma" Content="" BorderBrush="{x:Null}" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" ToolTip="Envoyer">
            <Button.Background>
                <ImageBrush ImageSource="Images/acept-verifier-corriger-vert-ok-oui-icone-9668-128.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.BasedOn>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>

                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">

                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>

                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Button.Style>

        </Button>
        <Button x:Name="chatButtonDisconnect"  Click="chatButtonDisconnect_Click" Height="39" HorizontalAlignment="Right" Margin="0,0,10,9"  VerticalAlignment="Bottom" Width="60" FontFamily="Tahoma" FontSize="14" Content="" BorderBrush="{x:Null}" ToolTip="Effacer">
            <Button.Background>
                <ImageBrush ImageSource="Images/fermer-croix-supprimer-erreurs-sortie-icone-4368-128.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.BasedOn>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>

                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">

                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>

                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Button.Style>

        </Button>
        <Image x:Name="chatCurrentImage" HorizontalAlignment="Left" Margin="10,0,0,0" Stretch="Fill" Width="60" Height="70" VerticalAlignment="Top" />
        <Label x:Name="chatLabelCurrentUName" HorizontalAlignment="Right" Margin="0,4,10,0" VerticalAlignment="Top"  Foreground="#FF2D3F5D" Content="UserSession" FontFamily="Cooper Black" FontSize="16"/>
        <Label x:Name="chatLabelCurrentStatus" Height="23" Margin="87,37,0,0" VerticalAlignment="Top" Foreground="Green" HorizontalAlignment="Left" Width="85" FontFamily="Cooper Black" FontSize="20"></Label>
        <Label x:Name="chatLabelWritingMsg" Height="30" Margin="10,0,167,55" VerticalAlignment="Bottom" Foreground="#FF00FFE8" FontFamily="Tahoma" FontWeight="Bold"></Label>
        <Button x:Name="chatButtonSendFile" Click="chatButtonSendFile_Click" Height="50" Margin="0,10,260,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="80" FontFamily="Arial" Content="" ToolTip="Envoyez Fichier" BorderBrush="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="Images/sendfile.ico"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.BasedOn>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>

                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">

                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>

                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Button.Style>


        </Button>
        <Label x:Name="chatLabelSendFileStatus" Margin="0,0,250,65" VerticalAlignment="Bottom" Background="{x:Null}" Foreground="Red" HorizontalAlignment="Right" FontWeight="Bold" FontFamily="Tahoma"/>
        <Button x:Name="chatButtonOpenReceived" Click="chatButtonOpenReceived_Click" Height="50" Margin="0,10,170,0" VerticalAlignment="Top" FontFamily="Arial" Content="" ToolTip="Ouvrir fichier reçu" Width="80" BorderBrush="{x:Null}" HorizontalAlignment="Right">
            <Button.Background>
                <ImageBrush ImageSource="Images/receivefile.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.BasedOn>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>

                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">

                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>

                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Button.Style>



        </Button>



    </Grid>


</Window>
