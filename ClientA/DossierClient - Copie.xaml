<dx:DXWindow x:Class="NewOptics.ClientA.DossierClient"
               xmlns:local="clr-namespace:NewOptics.ClientA"
                   	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
       xmlns:dxco="http://schemas.devexpress.com/winfx/2008/xaml/controls" 
             xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"  
    xmlns:dxpg="http://schemas.devexpress.com/winfx/2008/xaml/pivotgrid" 
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"  
               dx:ThemeManager.ThemeName="LightGray"
             	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
  xmlns:chartingToolkit="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
        xmlns:rtf="clr-namespace:GestionClinique.RTFEditor"
    xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
       
                        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
               xmlns:System="clr-namespace:System;assembly=mscorlib"
                 xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
 
   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
   mc:Ignorable="d"
        Title="DossierClient"  ResizeMode="CanResize"  Background="{x:Null}" ShowIcon="True" ShowTitle="True"  WindowStyle="ThreeDBorderWindow"  Icon="/NewOptics;component/Dent6.ico" WindowStartupLocation="CenterScreen"  BorderThickness="0"  BorderBrush="#FFA020F0" ShowInTaskbar="True" Width="1150"  >
    <Window.Resources>
        <Style x:Key="PulseButton" TargetType="{x:Type Button}">
            <Style.BasedOn>
                <Style TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border>
                                                <Rectangle SnapsToDevicePixels="True" Stroke="#FF000000" StrokeDashArray="1 2" StrokeThickness="1" Margin="4,4,4,4"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <SolidColorBrush/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="3,3,3,3"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="0,0,1,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="OnMouseEnter1">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.3"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.3"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.4"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Border RenderTransformOrigin="0.5,0.5" x:Name="border" Width="Auto" Height="Auto" BorderBrush="{x:Null}" BorderThickness="5,5,5,5" CornerRadius="4,4,4,4" Background="{x:Null}">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                    <ContentPresenter Width="Auto" Height="Auto" RenderTransformOrigin="0.403,0.5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="border">
                                        <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                                    <Trigger Property="IsKeyboardFocused" Value="True"/>
                                    <Trigger Property="Button.IsDefaulted" Value="True"/>
                                    <Trigger Property="IsPressed" Value="True"/>
                                    <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.BasedOn>
        </Style>
        <Label x:Key="DefaultDXDialogContent"></Label>
        <Rectangle x:Key="content"  Width="100" Height="100" Margin="20" Fill="Red"/>
        <ControlTemplate TargetType="{x:Type dxc:DXDialog}" x:Key="template3" >
            <Grid x:Name="Root_Grid" Height="250" Width="350" Margin="0,0,0,0" VerticalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <AdornerDecorator ClipToBounds="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ActualWindowTemplate}" 
              Height="250" Width="350"
                x:Name="PART_RootContentPresenter">
                            <ContentPresenter.Content>
                                <Grid>
                                    <Border x:Name="windowBorderDatdsfdsaDSFDSgridVisiteApayedsdsr" BorderThickness="3" CornerRadius="20" Grid.Column="1" Background="#FF6E6E6E" Grid.RowSpan="4" BorderBrush="{x:Null}" Margin="10,0">

                                        <Grid x:Name="GridRecouf" Grid.RowSpan="4" Grid.Column="1" Margin="10">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="75*" />
                                                <RowDefinition Height="75*" />
                                                <RowDefinition Height="75*"  />
                                                <RowDefinition Height="75*"  />

                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>


                                            </Grid.ColumnDefinitions>


                                            <Label x:Name="fds" Content="Nouveau document" BorderThickness="1" FontSize="16" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}" FontWeight="Bold" Background="{x:Null}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Margin="0" Height="50" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.ColumnSpan="2" TextOptions.TextFormattingMode="Display" HorizontalAlignment="Center" />

                                            <RadioButton x:Name="chFactureNew"  GroupName="UserType" Grid.Row="1"  HorizontalAlignment="Left" FontFamily="Tahoma" FontSize="14" FontWeight="Bold" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"  Content="Facture" Checked="chFactureNew_Checked"  />
                                            <RadioButton x:Name="chFactureAvoirNew" GroupName="UserType"  Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Facture d'avoir" Checked="chFactureAvoirNew_Checked" />
                                            <RadioButton x:Name="chBonLivraisonNew" IsChecked="False" GroupName="UserType"  Grid.Row="2" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Bon Livraison" VerticalAlignment="Top" Checked="chBonLivraisonNew_Checked" />
                                            <RadioButton x:Name="chBonLivraisonAvoirNew" GroupName="UserType"  Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Bon d'avoir" VerticalAlignment="Top" Checked="chBonLivraisonAvoirNew_Checked" />
                                            <RadioButton x:Name="chProformaNew" GroupName="UserType"  Grid.Row="2" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Proforma" VerticalAlignment="Bottom" Checked="chProformaNew_Checked" />
                                            <RadioButton x:Name="chFactureProvisoirNew" GroupName="UserType"  Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Facture provisoir" VerticalAlignment="Bottom" Checked="chFactureProvisoirNew_Checked" />



                                            <Button x:Name="ConfirmerDocument" Content="CONFIRMER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Click="ConfirmerDocument_Click" Grid.ColumnSpan="2" MinWidth="260" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontFamily="Tahoma" >
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                                <Setter Property="MinHeight" Value="25"/>
                                                                <Setter Property="FontWeight" Value="Bold"/>

                                                                <Setter Property="Padding" Value="5,6"/>
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Grid>
                                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                                </Trigger>

                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Style.BasedOn>
                                                    </Style>
                                                </Button.Style>
                                            </Button>


                                        </Grid>
                                    </Border>

                                </Grid>

                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </AdornerDecorator>
                </Border>
            </Grid>
        </ControlTemplate>
        <ControlTemplate TargetType="{x:Type dxc:DXDialog}" x:Key="template4" >
            <Grid x:Name="Root_Grid" Height="250" Width="350" Margin="0,0,0,0" VerticalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <AdornerDecorator ClipToBounds="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ActualWindowTemplate}" 
              Height="250" Width="350"
                x:Name="PART_RootContentPresenter">
                            <ContentPresenter.Content>
                                <Grid>
                                    <Border x:Name="windowBorderDatdsfdsaDSFDSgridVisiteApayedsdsr" BorderThickness="3" CornerRadius="20" Grid.Column="1" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Grid.RowSpan="4" BorderBrush="{x:Null}" Margin="10,0">

                                        <Grid x:Name="GridRecouf" Grid.RowSpan="4" Grid.Column="1" Margin="10">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="75*" />
                                                <RowDefinition Height="75*" />
                                                <RowDefinition Height="75*"  />
                                                <RowDefinition Height="75*"  />

                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>



                                            </Grid.ColumnDefinitions>


                                            <Label x:Name="fds" Content="Nouveau document" BorderThickness="1" FontSize="16" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" FontWeight="Bold" Background="{x:Null}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Margin="20,2" Height="50" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.ColumnSpan="2" TextOptions.TextFormattingMode="Display" HorizontalAlignment="Stretch" VerticalAlignment="Center" />

                                            <RadioButton x:Name="chFactureNew"  GroupName="UserType" Grid.Row="1"  HorizontalAlignment="Left" FontFamily="Tahoma" FontSize="14" FontWeight="Bold" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"  Content="Facture" Checked="chFactureNew_Checked" Margin="50,0,0,0"  />
                                            <RadioButton x:Name="chBonLivraisonNew" IsChecked="False" GroupName="UserType"  Grid.Row="2" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="50,0,0,0" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Bon Livraison" VerticalAlignment="Top" Checked="chBonLivraisonNew_Checked" />
                                            <RadioButton x:Name="chProformaNew" GroupName="UserType"  Grid.Row="2" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="50,0,0,0" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Proforma" VerticalAlignment="Bottom" Checked="chProformaNew_Checked" />



                                            <Button x:Name="ConfirmerDocument1" Content="CONFIRMER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Grid.ColumnSpan="2" MinWidth="260" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontFamily="Tahoma" Click="ConfirmerDocument1_Click" >
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                                <Setter Property="MinHeight" Value="25"/>
                                                                <Setter Property="FontWeight" Value="Bold"/>

                                                                <Setter Property="Padding" Value="5,6"/>
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Grid>
                                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                                </Trigger>

                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Style.BasedOn>
                                                    </Style>
                                                </Button.Style>
                                            </Button>


                                        </Grid>
                                    </Border>

                                </Grid>

                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </AdornerDecorator>
                </Border>
            </Grid>
        </ControlTemplate>
        <ControlTemplate TargetType="{x:Type dxc:DXDialog}" x:Key="template5" >
            <Grid x:Name="Root_Grid" Height="200" Width="350" Margin="0,0,0,0" VerticalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                    <AdornerDecorator ClipToBounds="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ActualWindowTemplate}" 
              Height="200" Width="350"
                x:Name="PART_RootContentPresenter">
                            <ContentPresenter.Content>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <RadioButton FontFamily="Tahoma"  GroupName="1" Margin="20,0,0,0" Content="Fiche atelier" HorizontalAlignment="Left" Checked="RadioButton_Checked" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                    <RadioButton FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Reçu de paiement" HorizontalAlignment="Left" Grid.Row="1" Checked="RadioButton_Checked_1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />

                                    <RadioButton FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Fiche atelier + reçu de paiement" HorizontalAlignment="Left" Grid.Row="2" Checked="RadioButton_Checked_2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                    <RadioButton FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Fiche atelier en double" HorizontalAlignment="Left" Grid.Row="3" Checked="RadioButton_Checked_3" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                    <dxe:CheckEdit x:Name="chimpression" Content="Visualiser" Grid.Row="4" Checked="chimpression_Checked" Unchecked="chimpression_Unchecked" VerticalAlignment="Center" HorizontalAlignment="Center" />

                                    <Button x:Name="btnCreerImpression" Content="" Grid.Row="5" HorizontalAlignment="Center" VerticalAlignment="Center" Width="30"  Foreground="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" FontFamily="Times New Roman" FontSize="16" Grid.Column="1" Margin="0" ToolTip="Valider" Height="30" BorderBrush="{x:Null}" Click="btnCreerImpression_Click">
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Images/acept-verifier-corriger-vert-ok-oui-icone-9668-128.png"/>
                                        </Button.Background>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>

                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </AdornerDecorator>
                </Border>
            </Grid>
        </ControlTemplate>
        <ControlTemplate TargetType="{x:Type dxc:DXDialog}" x:Key="template6" >
            <Grid x:Name="Root_Grid" Height="200" Width="350" Margin="0,0,0,0" VerticalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                    <AdornerDecorator ClipToBounds="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ActualWindowTemplate}" 
              Height="200" Width="350"
                x:Name="PART_RootContentPresenter">
                            <ContentPresenter.Content>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <RadioButton x:Name="Ficheatelier" FontFamily="Tahoma"  GroupName="1" Margin="20,0,0,0" Content="Fiche atelier" HorizontalAlignment="Left" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" Checked="Ficheatelier_Checked" />
                                    <RadioButton x:Name="Reçu" FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Reçu de paiement" HorizontalAlignment="Left" Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" Checked="Reçu_Checked" />

                                    <RadioButton x:Name="atelierreçu" FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Fiche atelier + reçu de paiement" HorizontalAlignment="Left" Grid.Row="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" Checked="atelierreçu_Checked" />
                                    <RadioButton x:Name="_double" FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Fiche atelier en double" HorizontalAlignment="Left" Grid.Row="3" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" Checked="_double_Checked" />
                                    <dxe:CheckEdit x:Name="chimpression" Content="Visualiser" Grid.Row="4" Unchecked="chimpression_Unchecked_1" VerticalAlignment="Center" HorizontalAlignment="Center" Checked="chimpression_Checked_1" />

                                    <Button x:Name="btnCreerImpression" Content="" Grid.Row="5" HorizontalAlignment="Center" VerticalAlignment="Center" Width="30"  Foreground="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" FontFamily="Times New Roman" FontSize="16" Grid.Column="1" Margin="0" ToolTip="Valider" Height="30" BorderBrush="{x:Null}" Click="btnCreerImpression_Click_1">
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Images/acept-verifier-corriger-vert-ok-oui-icone-9668-128.png"/>
                                        </Button.Background>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>

                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </AdornerDecorator>
                </Border>
            </Grid>
        </ControlTemplate>
        <ControlTemplate TargetType="{x:Type dxc:DXDialog}" x:Key="template7" >
            <Grid x:Name="Root_Grid" Height="150" Width="350" Margin="0,0,0,0" VerticalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                    <AdornerDecorator ClipToBounds="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ActualWindowTemplate}" 
              Height="150" Width="350"
                x:Name="PART_RootContentPresenter">
                            <ContentPresenter.Content>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition    />

                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <RadioButton x:Name="facturea4" FontFamily="Tahoma"  GroupName="1" Margin="20,0,0,0" Content="Document de vente(A4)" HorizontalAlignment="Left" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" Checked="facturea4_Checked" />
                                    <RadioButton x:Name="facturea5" FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Modèle Document de vente simple (1/2 feuille) " HorizontalAlignment="Left" Grid.Row="1"  Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" Checked="facturea5_Checked" />


                                    <dxe:CheckEdit x:Name="chimpression" Content="Visualiser" Grid.Row="2"   VerticalAlignment="Center" HorizontalAlignment="Center" Checked="chimpression_Checked_2" Unchecked="chimpression_Unchecked_2" />

                                    <Button x:Name="btnCreerImpressionDocument" Content="" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" Width="30"  Foreground="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" FontFamily="Times New Roman" FontSize="16" Grid.Column="1" Margin="0" ToolTip="Valider" Height="30" BorderBrush="{x:Null}" Click="btnCreerImpressionDocument_Click" >
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Images/acept-verifier-corriger-vert-ok-oui-icone-9668-128.png"/>
                                        </Button.Background>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>

                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </AdornerDecorator>
                </Border>
            </Grid>
        </ControlTemplate>

        <ResourceDictionary x:Key="6">
            <ResourceDictionary.MergedDictionaries >
                <ResourceDictionary  Source="/NewOptics;component/ressources/Brushes.xaml" />
                <ResourceDictionary   Source="/NewOptics;component/ressources/ExpanderStyles.xaml" />
                <ResourceDictionary   Source="/NewOptics;component/ressources/StoryBoards.xaml" />
                <ResourceDictionary   Source="/NewOptics;component/ressources/RoundBorderPanelStyle.xaml" />
                <ResourceDictionary   Source="/NewOptics;component/ressources/PulseButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <dxc:DXTabControl x:Name="Détail" BorderThickness="0" Grid.ColumnSpan="3" Margin="10,0" FontFamily="Tahoma" >
            <dxc:DXTabItem x:Name="tsdffgent"  FontSize="14" FontFamily="Tahoma" Header="Facturation" Margin="0" Controls:TabControlHelper.IsUnderlined="True">

                <Grid x:Name="GridPricipale" Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Grid x:Name="WindowBorderFacture" Visibility="Collapsed" Grid.Column="1" Grid.RowSpan="4" Background="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.7*" />
                            <RowDefinition   />
                            <RowDefinition  />
                            <RowDefinition   />
                            <RowDefinition   />
                            <RowDefinition  />
                            <RowDefinition   />
                            <RowDefinition   />
                            <RowDefinition   />
                            <RowDefinition Height="30px"   />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>

                        </Grid.ColumnDefinitions>

                        <Border x:Name="windowBorderDatdsfdsaDSFDSgridVisiteApayedsdsr" BorderThickness="3" CornerRadius="20" Grid.Column="1" Grid.RowSpan="3" Margin="0" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">

                            <Grid x:Name="GridRecouf" Grid.RowSpan="4" Grid.Column="1" Margin="10">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="120*" />
                                    <RowDefinition Height="75*" />
                                    <RowDefinition Height="75*"  />
                                    <RowDefinition Height="75*"  />
                                    <RowDefinition Height="75*"  />

                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition />

                                </Grid.ColumnDefinitions>


                                <Label x:Name="NomDocumentLabel" Content="" BorderThickness="1" FontSize="24" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" FontWeight="Bold" Background="{x:Null}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Margin="0,0,20,0" Height="50" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.ColumnSpan="2" TextOptions.TextFormattingMode="Display" />

                                <RadioButton x:Name="chFacture" IsEnabled="False" GroupName="UserType" Grid.Row="0" Grid.Column="2"  HorizontalAlignment="Left" FontFamily="Tahoma" FontSize="14" FontWeight="Bold" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Background="{x:Null}"  Content="Facture" VerticalAlignment="Bottom"  />
                                <RadioButton x:Name="chFactureAvoir" IsEnabled="False" GroupName="UserType"  Grid.Row="0" Grid.Column="3" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Content="Facture d'avoir" VerticalAlignment="Bottom" />
                                <RadioButton x:Name="chBonLivraison" IsEnabled="False" GroupName="UserType"  Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Content="Bon Livraison" VerticalAlignment="Top" />
                                <RadioButton x:Name="chBonLivraisonAvoir" IsEnabled="False" GroupName="UserType"  Grid.Row="1" Grid.Column="3" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Content="Bon d'avoir" VerticalAlignment="Top" />
                                <RadioButton x:Name="chProforma" IsEnabled="False" GroupName="UserType"  Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Content="Proforma" VerticalAlignment="Bottom" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                <RadioButton x:Name="chFactureProvisoir" IsEnabled="False" GroupName="UserType"  Grid.Row="1" Grid.Column="3" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Content="Facture provisoir" VerticalAlignment="Bottom" />

                                <TextBlock Text="Date facture :"  FontFamily="Tahoma" FontSize="16" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" />
                                <DatePicker x:Name="txtDateOper" IsEnabled="False"  SelectedDate="{Binding date,StringFormat={}\{0:dd/MM/yyyy\}}"  Margin="0"   FontFamily="Tahoma" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="1" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MinWidth="120" BorderBrush="#FB2D3F5D" SelectedDateChanged="txtDateOper_SelectedDateChanged"/>

                                <TextBlock Text="N° facture/Bon :"  FontFamily="Tahoma" FontSize="16" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                                <TextBox x:Name="txtnfact" IsEnabled="False" HorizontalContentAlignment="Center"  Text="{Binding nfact, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Row="2" VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" FontSize="14" Foreground="#FFA020F0" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MinWidth="100" BorderBrush="#FB2D3F5D" Margin="0,0,30,0" SelectionBrush="#FB2D3F5D" />
                                <TextBlock Text="Echéance en jrs:"  FontFamily="Tahoma" FontSize="16" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="3" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                                <TextBox x:Name="txteche" HorizontalContentAlignment="Center"  Text="{Binding echeance, Mode=TwoWay, NotifyOnValidationError=true,ValidatesOnDataErrors=True, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Row="3" VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" FontSize="14" Foreground="#FFA020F0" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Left" KeyDown="txteche_KeyDown" MinWidth="100" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" Margin="0,0,30,0"  />
                                <TextBlock Text="Versement:"  FontFamily="Tahoma" FontSize="16" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="3" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Column="2" />
                                <TextBox x:Name="txtnVersement" HorizontalContentAlignment="Center"  Text="{Binding versement, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" FontFamily="Tahoma" Grid.Row="3" VerticalAlignment="Center" Grid.Column="3" FontWeight="Bold" FontSize="14" Foreground="#FFA020F0" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MinWidth="100" BorderBrush="#FB2D3F5D"  Margin="0,0,10,0" SelectionBrush="#FB2D3F5D" KeyDown="txtnVersement_KeyDown" />
                                <TextBlock Text="Mode paiem :"  FontFamily="Tahoma" FontSize="16" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Column="2" />
                                <ComboBox x:Name="Modep" VerticalAlignment="Center" SelectedValuePath="Content" SelectedValue="{Binding modep, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="4" Grid.Row="2" MinWidth="100" MinHeight="26" Margin="0,0,10,0" Foreground="#FB2D3F5D" FontFamily="Tahoma" BorderBrush="#FB2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" >
                                    <ComboBoxItem Content="A TERME" FontSize="14" IsSelected="True"/>
                                    <ComboBoxItem Content="CHEQUE" FontSize="14" />
                                    <ComboBoxItem Content="VIREMENT" FontSize="14" />
                                    <ComboBoxItem Content="ESPECES" FontSize="14" />

                                </ComboBox>
                                <TextBlock Text="Bon de commande:"  FontFamily="Tahoma" FontSize="16" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="4" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                                <TextBox x:Name="txtBon" HorizontalContentAlignment="Center"  Text="{Binding bcom, Mode=TwoWay, NotifyOnValidationError=true,ValidatesOnDataErrors=True, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Row="4" VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" FontSize="14" Foreground="#FFA020F0" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Left" MinWidth="100" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" Margin="0,0,30,0"  />
                                <TextBlock x:Name="Bénéfice" Visibility="Collapsed" Text="le bénéfice s'éléve à :" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Tahoma" FontSize="16" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Grid.Row="4" Grid.ColumnSpan="2" Grid.Column="2" FontWeight="Bold" />
                                <TextBlock x:Name="Bénéficemont" Visibility="Collapsed" Text="1900" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontFamily="Tahoma" FontSize="16" Foreground="Red" Grid.Row="4" Grid.ColumnSpan="2" Margin="10,0,0,0" FontWeight="Bold" Grid.Column="3" />
                                <Separator Grid.Row="2" Grid.ColumnSpan="4" VerticalAlignment="Bottom" Height="5" Background="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />


                            </Grid>
                        </Border>
                        <DataGrid x:Name="ReceptDatagrid"  CanUserAddRows="False" CanUserDeleteRows="True" CanUserSortColumns="True" IsReadOnly="False" SelectionMode="Single" IsTextSearchCaseSensitive="True" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" HeadersVisibility="All" AutoGenerateColumns="False" Margin="10,0" FontWeight="Bold" FontSize="16" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" GridLinesVisibility="Horizontal" FontFamily="Tahoma" Grid.Row="3" Grid.ColumnSpan="4" Grid.RowSpan="5" CurrentCellChanged="ReceptDatagrid_CurrentCellChanged" SelectedCellsChanged="ReceptDatagrid_SelectedCellsChanged" Grid.Column="1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" CellEditEnding="ReceptDatagrid_CellEditEnding" >
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                    <Setter Property="FontWeight" Value="Thin"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="Padding" Value="10,4,4,7"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                    <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                    <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                    <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="Width" Value="8"/>
                                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                    <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="Width" Value="8"/>
                                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                            <Condition Property="SortDirection" Value="{x:Null}"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="SortDirection" Value="Ascending">
                                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                    </Trigger>
                                                    <Trigger Property="SortDirection" Value="Descending">
                                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                        <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                    </Trigger>
                                                    <Trigger Property="DisplayIndex" Value="0">
                                                        <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                            <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                            <Setter Property="FontWeight" Value="Bold"></Setter>
                                            <Setter Property="FontSize" Value="20"></Setter>
                                            <Setter Property="Background" Value="#CC119EDA" />
                                            <Setter Property="Foreground" Value="White"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.Columns>

                                <DataGridTextColumn Header="code"
             Binding="{Binding codeprod}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma" FontSize="14" Foreground="#FF451571" />
                                <DataGridTextColumn Header="design"
             Binding="{Binding design}" Width="Auto" CanUserSort="True" IsReadOnly="False" FontFamily="Tahoma"  MinWidth="200" FontSize="14" Foreground="#FF451571" />
                                <DataGridTextColumn Header="Prix"  
             Binding="{Binding privente, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" IsReadOnly="True" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" FontSize="14" Foreground="#FFFF008B" />
                                <DataGridTextColumn Header="Quantite" IsReadOnly="False"
             Binding="{Binding quantite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" FontSize="14" Foreground="#FFFF008B" />
                                <DataGridTextColumn Header="tva" IsReadOnly="False"
             Binding="{Binding tva, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"    MinWidth="50" FontSize="14" Foreground="#FFFF008B" />

                                <DataGridTextColumn Header="total" IsReadOnly="True"
             Binding="{Binding Total, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"    MinWidth="50" FontSize="14" Foreground="#FFFF008B" />

                                <DataGridTextColumn Header="Péremption" IsReadOnly="True"
					Binding="{Binding perempt,StringFormat={}\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"   MinWidth="50" FontSize="14" Foreground="#FF451571" />
                                <DataGridTextColumn Header="lot" IsReadOnly="True"
             Binding="{Binding lot, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" FontSize="14" Foreground="#FF451571" />
                                <DataGridTextColumn Header="N° serie" IsReadOnly="False"
             Binding="{Binding serialnumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="120" FontSize="14" Foreground="#FF451571" />


                            </DataGrid.Columns>
                        </DataGrid>

                        <Border x:Name="windowBorderDataDSFDSgridVisiteApayedsdsr" BorderThickness="3" CornerRadius="20" Grid.Column="1" Grid.Row="8" Margin="0" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                            <Grid x:Name="GridTotal" Grid.RowSpan="4" Margin="0"  Grid.Column="1" Grid.Row="7">
                                <Grid.RowDefinitions>

                                    <RowDefinition   />
                                    <RowDefinition  />
                                    <RowDefinition  />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>









                                <TextBlock Text="Ristourne:"  FontFamily="Tahoma" FontSize="14" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />
                                <TextBox x:Name="txtRemise" HorizontalContentAlignment="Center"  Text="{Binding remise, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" FontFamily="Tahoma" VerticalAlignment="Center" Grid.Column="3" FontWeight="Bold" Foreground="Red" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Left" KeyDown="txtRemise_KeyDown" TextChanged="txtRemise_TextChanged" MinWidth="120" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" MinHeight="24"  />
                                <TextBlock Text="Timbre fiscal:"  FontFamily="Tahoma" FontSize="14" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" FontWeight="Bold" />
                                <TextBox x:Name="txtTimbre" IsEnabled="False" HorizontalContentAlignment="Center"  Text="{Binding timbre, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" FontFamily="Tahoma" VerticalAlignment="Center" Grid.Column="3" FontWeight="Bold" Foreground="Red" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Left" KeyDown="txtRemise_KeyDown"  MinWidth="120" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" Grid.Row="1" MinHeight="24"  />
                                <TextBlock Text="Net:" FontFamily="Tahoma" FontSize="14" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="2" Grid.Column="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />
                                <TextBox x:Name="txtNet" IsEnabled="False" HorizontalContentAlignment="Center"   Text="{Binding net, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" FontFamily="Tahoma" Grid.Row="2" VerticalAlignment="Center" Grid.Column="3" FontWeight="Bold" Foreground="Red" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Left" Margin="0" MinWidth="120" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" MinHeight="24"  />

                                <TextBlock Text="Total en TTC:"  FontFamily="Tahoma" FontSize="14" Margin="10,0,0,10" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />
                                <TextBox x:Name="txtTTC" IsEnabled="False" HorizontalContentAlignment="Center"  FontFamily="Tahoma" Grid.Row="2" VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" Foreground="Red" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="0,0,30,10" MinWidth="100" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" MinHeight="24"  />
                                <TextBlock Text="Montant en H.T:"  FontFamily="Tahoma" FontSize="14" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />
                                <TextBox x:Name="txtht" HorizontalContentAlignment="Center"  IsEnabled="False"  Text="{Binding ht, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" FontFamily="Tahoma" VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" Foreground="Red" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MinWidth="100" BorderBrush="#FB2D3F5D" Margin="0,0,30,0" SelectionBrush="#FB2D3F5D" MinHeight="24"  />
                                <TextBlock Text="Total TVA:"  FontFamily="Tahoma" FontSize="14" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" FontWeight="Bold" />
                                <TextBox x:Name="txttva" HorizontalContentAlignment="Center"  IsEnabled="False" Text="{Binding tva, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" FontFamily="Tahoma" Grid.Row="1" VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" Foreground="Red" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MinWidth="100" BorderBrush="#FB2D3F5D" Margin="0,0,30,0" SelectionBrush="#FB2D3F5D" MinHeight="24"  />
                            </Grid>

                        </Border>
                        <Grid Grid.ColumnSpan="1" Background="#FF451571" Grid.Row="9" Margin="10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="CONFIRMERVENTE" Content="CONFIRMER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Click="CONFIRMERVENTE_Click" FontSize="16" Grid.ColumnSpan="2" MinWidth="260" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="annulerVENTE" Grid.ColumnSpan="2" Content="ANNULER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FFFF9388" Grid.Column="2" BorderBrush="{x:Null}" Click="annulerVENTE_Click" MinWidth="250" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Grid>
                    <GridSplitter x:Name="gridspl" Visibility="Collapsed" Background="#FB2D3F5D" Grid.RowSpan="9" Grid.Column="1" HorizontalAlignment="Left" MinHeight="5" Width="5" />
                    <Grid x:Name="RéglemdfentGfsdfsrid" Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.7*" />
                            <RowDefinition   />
                            <RowDefinition  />
                            <RowDefinition   />
                            <RowDefinition   />
                            <RowDefinition  />
                            <RowDefinition   />
                            <RowDefinition   />
                            <RowDefinition   />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>

                        </Grid.ColumnDefinitions>
                        <DockPanel  Margin="10,0,0,0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                            <Button x:Name="btnNouvelleFacture" Content="" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" ToolTip="Nouvelle Facture" MinWidth="30" MinHeight="30" BorderBrush="{x:Null}" Click="btnNouvelleFacture_Click" Width="30" Height="30" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624077_add_user.ico"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="btnModifierFacture" Content="" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" ToolTip="Modifier Facture" MinWidth="30" MinHeight="30" BorderBrush="{x:Null}" Click="btnModifierFacture_Click" Width="30" Height="30" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624391_edit_user.ico"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="btnImprimmerFacture" Content="" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" ToolTip="Imprimer Facture" MinWidth="35" MinHeight="35" BorderBrush="{x:Null}" Click="btnImprimmerFacture_Click" Width="30" Height="30" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                                </Button.Background>
                            </Button>


                        </DockPanel>
                        <dxg:GridControl x:Name="ListeDesDocuments"   Grid.Row="1"  ItemsSource="{Binding}" Margin="0" Grid.ColumnSpan="2" Grid.RowSpan="8" FontFamily="Tahoma"   BorderBrush="{x:Null}" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" SelectionMode="Row" ClipboardCopyMode="None" AllowInitiallyFocusedRow="True" AllowLiveDataShaping="True" ImplyNullLikeEmptyStringWhenFiltering="True" ShowAllTableValuesInFilterPopup="True" MouseDoubleClick="ListeDesDocuments_MouseDoubleClick" MouseRightButtonUp="ListeDesDocuments_MouseRightButtonUp"   >
                            <dxg:GridControl.View>
                                <dxg:TableView AllowEditing="False" AllowGrouping="False" AllowColumnMoving="False" AllowSorting="False" AllowFixedGroups="False" ShowGroupPanel="False" ShowCriteriaInAutoFilterRow="True"/>
                            </dxg:GridControl.View>



                            <dxg:GridControl.Columns>

                                <dxg:GridColumn Header="Dates"
					Binding="{Binding dates, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" MinWidth="50"/>
                                <dxg:GridColumn Header="Date"
					Binding="{Binding date, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto"  MinWidth="50" />
                                <dxg:GridColumn Header="N° Facture"
					Binding="{Binding nfact}" Width="Auto" MinWidth="50" />

                                <dxg:GridColumn Header="net"
					Binding="{Binding net}" Width="Auto"  MinWidth="50"  />
                                <dxg:GridColumn Header="Reste"
					Binding="{Binding reste}" Width="Auto"  MinWidth="50"   />
                                <dxg:GridColumn Header="Ht"
					Binding="{Binding ht}" Width="Auto"  MinWidth="50" />
                                <dxg:GridColumn Header="Tva"
					Binding="{Binding tva}" Width="Auto" MinWidth="50" />
                                <dxg:GridColumn Header="Remise"
					Binding="{Binding remise}" Width="Auto"  MinWidth="50"/>
                                <dxg:GridColumn Header="modep"
					Binding="{Binding modep}" Width="Auto"  MinWidth="50"  />
                                <dxg:GridColumn Header="oper"
					Binding="{Binding oper}" Width="Auto"  MinWidth="50"  />
                                <dxg:GridColumn Header="timbre"
					Binding="{Binding timbre}" Width="Auto" MinWidth="50" />
                                <dxg:GridColumn Header="Versement"
					Binding="{Binding versement}" Width="Auto" MinWidth="50"  />

                                <dxg:GridColumn Header="bcom"
					Binding="{Binding bcom}" Width="Auto"  MinWidth="50"  />
                                <dxg:GridColumn Header="heure"
					Binding="{Binding heure}" Width="Auto"  MinWidth="50" />

                                <dxg:GridColumn Header="Code client"
					Binding="{Binding codeclient}" Width="Auto"  MinWidth="50" />
                                <dxg:GridColumn Header="Raison"
					Binding="{Binding raison}" Width="Auto"  MinWidth="50"  />
                                <dxg:GridColumn Header="soldé"
					Binding="{Binding soldé}" Width="Auto"  MinWidth="50" />
                                <dxg:GridColumn Header="cle"
					Binding="{Binding cle}" Width="Auto"  MinWidth="50" />
                                <dxg:GridColumn Header="Date échéance"
					Binding="{Binding datecheance, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" MinWidth="50" />
                                <dxg:GridColumn Header="echeance"
					Binding="{Binding echeance}" Width="Auto" MinWidth="50"  />
                                <dxg:GridColumn Header="Lentille"
					Binding="{Binding Lentille}" Width="Auto" MinWidth="50"  />
                                <dxg:GridColumn Header="Monture"
					Binding="{Binding Monture}" Width="Auto" MinWidth="50"  />
                                <dxg:GridColumn Header="cleDossier"
					Binding="{Binding cleDossier}" Width="Auto" MinWidth="50"  />
                            </dxg:GridControl.Columns>
                        </dxg:GridControl>

                        <GridSplitter x:Name="girdspi1" Visibility="Collapsed" Background="#FB2D3F5D" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" ResizeDirection="Rows" Grid.Row="3" MinHeight="5" />
                        <Grid x:Name="NomenclatureDatagrid" Visibility="Collapsed" Grid.Row="4" Grid.RowSpan="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="37*"/>
                                <ColumnDefinition Width="513*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition   />
                                <RowDefinition Height="40" />

                            </Grid.RowDefinitions>

                            <dxe:ComboBoxEdit x:Name="CompteComboBox" DisplayMember="Content"  MinWidth="150" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FB2D3F5D" BorderBrush="#FB2D3F5D" Margin="430,0,10,0"  HorizontalAlignment="Left" Grid.Column="1" EditValueChanged="CompteComboBox_EditValueChanged" PopupClosed="CompteComboBox_PopupClosed" Grid.Row="2" >
                                <dxe:ComboBoxEditItem Content="Prixa" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{x:Null}" Foreground="#FF003366"/>
                                <dxe:ComboBoxEditItem Content="Prixb" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF003366" />
                                <dxe:ComboBoxEditItem Content="Prixc" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF003366" />
                            </dxe:ComboBoxEdit>
                            <dxe:CheckEdit x:Name="chstockdisponible" IsChecked="False" Content="Afficher stock disponible" ToolTip="Afficher stock disponible" Margin="10,0,0,0" Checked="chstockdisponible_Checked" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontFamily="Tahoma" Unchecked="chstockdisponible_Unchecked" Foreground="#FB2D3F5D" Grid.ColumnSpan="2" />

                            <dxe:CheckEdit x:Name="chcout" Visibility="Collapsed" IsChecked="False" Content="garder une seule fiche par produit " ToolTip="coût moyen pondéré(Déstockage Fifo)" Margin="210,0,0,0" Checked="chcout_Checked" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontFamily="Tahoma" Unchecked="chcout_Unchecked" Foreground="#FB2D3F5D" Grid.ColumnSpan="2" />
                            <Button x:Name="BtnReception" Margin="210,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" ToolTip="Nouvelle commande" MinWidth="35" MinHeight="35" Width="35" Height="35" Click="BtnReception_Click" Grid.ColumnSpan="2">
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/shopping-basket.png" Stretch="UniformToFill"/>
                                </Button.Background>

                                <Button.BorderBrush>
                                    <ImageBrush/>
                                </Button.BorderBrush>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="BtnService" Margin="250,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" ToolTip="Service" MinWidth="25" MinHeight="25" Width="25" Height="25" Click="BtnService_Click" Grid.ColumnSpan="2">
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624077_add_user.ico" Stretch="UniformToFill"/>
                                </Button.Background>

                                <Button.BorderBrush>
                                    <ImageBrush/>
                                </Button.BorderBrush>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <dxe:CheckEdit x:Name="chcodebare" IsChecked="False" Content="Code à barres" Foreground="#FB2D3F5D" VerticalAlignment="Center" Checked="chcodebare_Checked" Unchecked="chcodebare_Unchecked" Grid.ColumnSpan="2" HorizontalAlignment="Right" Margin="0,0,130,0" FontWeight="Bold" />

                            <TextBox x:Name="txtbarrecode" BorderThickness="1" Text="123456789" FontFamily="C39HrP24DhTt" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="36" Grid.Column="3" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" MaxLength="13" TextChanged="txtbarrecode_TextChanged" GotFocus="txtbarrecode_GotFocus" LostFocus="txtbarrecode_LostFocus_1" Margin="0"/>

                            <DataGrid x:Name="NomenclatureProduit" AutoGenerateColumns="False" GridLinesVisibility="Horizontal" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1" Margin="5,5,5,0" FontWeight="Normal" FontSize="14"  MouseDoubleClick="NomenclatureProduit_MouseDoubleClick" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="2">


                                <DataGrid.ColumnHeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="10,4,4,7"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                        <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                        <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="SortDirection" Value="{x:Null}"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="SortDirection" Value="Ascending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                        </Trigger>
                                                        <Trigger Property="SortDirection" Value="Descending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                            <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                        </Trigger>
                                                        <Trigger Property="DisplayIndex" Value="0">
                                                            <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGrid.ColumnHeaderStyle>
                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                                <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                                <Setter Property="FontWeight" Value="Bold"></Setter>
                                                <Setter Property="FontSize" Value="20"></Setter>
                                                <Setter Property="Background" Value="#CC119EDA" />
                                                <Setter Property="Foreground" Value="White"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.CellStyle>
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn IsReadOnly="True" MinWidth="100"  >

                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock   FontSize="16" FontFamily="Tahoma">
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="{} {0} {1}">
                                                            <Binding Path="Id" />
                                                            <Binding Path="design" />

                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </DataTemplate>

                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTextColumn Header="Prix vente" IsReadOnly="True"
             Binding="{Binding privente, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto"  MinWidth="30" />
                                    <DataGridTextColumn Header="Quantite" IsReadOnly="True"
             Binding="{Binding quantite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto"  MinWidth="30" />
                                    <DataGridTextColumn Header="achat"  IsReadOnly="True"
             Binding="{Binding previent, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}"  Width="Auto"  MinWidth="30"  />
                                    <DataGridTextColumn Header="Péremption" IsReadOnly="True"
					Binding="{Binding perempt,StringFormat={}\{0:dd/MM/yyyy\}}" Width="Auto"   MinWidth="50"  />

                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu >
                                        <MenuItem  Height="35" Width="270" Click="MenuItem_Click">
                                            <MenuItem.Header>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition Width="0.5*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock x:Name="textBlock1" Text="Détail image produit" VerticalAlignment="Center"/>
                                                </Grid>
                                            </MenuItem.Header>
                                            <MenuItem.Icon>
                                                <Image Source="/NewOptics;component/Images/multimedia-photo-icon-31.png"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>

                            </DataGrid>
                            <TextBlock x:Name="lhhabel" Text="Trouver :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="10,12,0,11" FontFamily="Tahoma" Grid.Row="2" Foreground="#FB2D3F5D" Grid.ColumnSpan="2" />
                            <TextBox x:Name="txtRecherche" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="43,7,0,7" Width="150" TextChanged="txtRecherche_TextChanged" FontFamily="Tahoma" Grid.Row="2" SelectionBrush="#FB2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Column="1" BorderBrush="#FB2D3F5D" />
                            <ComboBox x:Name="FamilleCombo" ToolTip="appuyer sur la touche droite de la souris pour défiltrer" MinWidth="10" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Width="150" SelectionChanged="FamilleCombo_SelectionChanged" MouseRightButtonUp="FournisseurCombo_MouseRightButtonUp" Grid.Row="2" Margin="270,0,0,0" BorderBrush="#FB2D3F5D" Grid.Column="1" >
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">

                                            <TextBlock Text="{Binding FamilleProduit1}" Foreground="#FF185900" FontWeight="Bold" FontSize="14" FontFamily="Times New Roman"  />

                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <TextBlock x:Name="lhdfdfhabel" Text="Famille :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="200,0,0,0" FontFamily="Tahoma" Foreground="#FB2D3F5D" Grid.Row="2" Grid.Column="1" />

                        </Grid>
                    </Grid>
                </Grid>
            </dxc:DXTabItem>

            <dxc:DXTabItem x:Name="tsdfsdfgent"  FontSize="14" FontFamily="Tahoma" Header="Montures" Margin="0">
                <Grid >
                    <Grid.RowDefinitions>

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="0.50*" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="70"   />
                            <RowDefinition />
                            <RowDefinition  />

                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />

                        </Grid.ColumnDefinitions>
                        <DockPanel Margin="10,0,0,0" HorizontalAlignment="Center">
                            <Button x:Name="btnNew" FontFamily="Tahoma" Click="btnNew_Click" Content="" FontSize="12" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Nouveau" MinWidth="35" MinHeight="35" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624077_add_user.ico"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="btnSupp" FontFamily="Tahoma" Margin="10,0,0,0" Click="btnSupp_Click" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Supprimer" MinWidth="35" MinHeight="35" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624817_delete.ico"/>
                                </Button.Background>

                            </Button>
                            <Button x:Name="btnEdit" Click="btnEdit_Click" Margin="10,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Modifier" MinWidth="35" MinHeight="35" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624391_edit_user.ico"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="btnImprimer" Margin="10,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Click="btnImprimer_Click" ToolTip="Imprimer" MinWidth="40" MinHeight="40" Grid.Column="3" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                                </Button.Background>

                            </Button>
                        </DockPanel>

                        <Border x:Name="BorderMonture" BorderThickness="3" CornerRadius="20" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" Grid.RowSpan="8" BorderBrush="#FB2D3F5D" Margin="0,0,10,0">

                            <DataGrid x:Name="MontureDatagrid" SelectionMode="Single" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}"  ScrollViewer.VerticalScrollBarVisibility="Auto" GridLinesVisibility="Horizontal"  Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="5" IsReadOnly="True" IsTextSearchCaseSensitive="True" BorderThickness="1" Grid.RowSpan="6" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HeadersVisibility="All" FontSize="12" BorderBrush="{x:Null}" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"  Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MouseDoubleClick="MontureDatagrid_MouseDoubleClick" MouseRightButtonUp="MontureDatagrid_MouseRightButtonUp">
                                <DataGrid.ColumnHeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="10,4,4,7"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                        <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                        <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="SortDirection" Value="{x:Null}"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="SortDirection" Value="Ascending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                        </Trigger>
                                                        <Trigger Property="SortDirection" Value="Descending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                            <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                        </Trigger>
                                                        <Trigger Property="DisplayIndex" Value="0">
                                                            <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGrid.ColumnHeaderStyle>

                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                                <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                                <Setter Property="FontWeight" Value="Bold"></Setter>
                                                <Setter Property="FontSize" Value="20"></Setter>
                                                <Setter Property="Background" Value="#CC119EDA" />
                                                <Setter Property="Foreground" Value="White"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.CellStyle>

                                <DataGrid.Columns>

                                    <DataGridTextColumn Header="Date"
					Binding="{Binding Date, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                    <DataGridTemplateColumn  Width="Auto" Header="Statut">

                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Label>
                                                    <Label.Style>
                                                        <Style TargetType="Label">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=StatutVente}" Value="True">
                                                                    <Setter Property="Content" Value="Vente validée" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=StatutVente}" Value="False">
                                                                    <Setter Property="Content" Value="Devis" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Label.Style>
                                                </Label>

                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>


                                    <DataGridTextColumn Header="Date de livraison"
					Binding="{Binding Livraison, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                    <DataGridTemplateColumn  Width="Auto" Header="Délivré">

                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Label>
                                                    <Label.Style>
                                                        <Style TargetType="Label">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=Délivre}" Value="True">
                                                                    <Setter Property="Content" Value="Monture Délivrée" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=Délivre}" Value="False">
                                                                    <Setter Property="Content" Value="Non Délivrée" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Label.Style>
                                                </Label>

                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="NCommande"
             Binding="{Binding NCommande}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="100" FontSize="22" Foreground="#FF451571" />
                                    <DataGridTextColumn Header="Cle"
             Binding="{Binding Cle}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="100" FontSize="22" Foreground="#FF451571" />

                                </DataGrid.Columns>
                            </DataGrid>
                        </Border>

                    </Grid>
                    <Grid Grid.Column="0" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" x:Name="GridMonture" IsEnabled="False">
                        <Grid.RowDefinitions>
                            <RowDefinition    />
                            <RowDefinition Height="1.5*" />
                            <RowDefinition  />
                            <RowDefinition  />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition/>
                            <ColumnDefinition />
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.ColumnSpan="4">
                            <Grid.RowDefinitions>
                                <RowDefinition    />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Label x:Name="lbl" Content="Docteur :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="2" />
                            <Label x:Name="lbl1" Content="Observation :" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="2" />
                            <Label x:Name="lbla" Content="Date :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Row="1" />
                            <Label x:Name="Doc" Content="N° Commande :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />

                            <DatePicker x:Name="DateCréation" SelectedDate="{Binding Date,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" BorderBrush="#FF2D3F5D" Grid.Row="1" />
                            <DatePicker x:Name="DatePrescription" SelectedDate="{Binding Prescription,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="5" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" BorderBrush="#FF2D3F5D" />
                            <DatePicker x:Name="DateLivraison" SelectedDate="{Binding Livraison,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="5" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" Grid.Row="1" BorderBrush="#FF2D3F5D" />
                            <TextBox x:Name="txtObserv" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding Observ, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Row="1" Grid.Column="3" Foreground="Black" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="0,5,0,0" MinWidth="70" Grid.RowSpan="2" />
                            <TextBox x:Name="txtDocteur" Text="{Binding Docteur, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="0" MinWidth="70" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <Label x:Name="lbl2" Content="Livraison :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="4" Grid.Row="1" />
                            <Label  Content="Prescription :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="4" />
                            <CheckBox x:Name="chkEnMontage" IsChecked="{Binding EnMontage, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" FontSize="14" HorizontalAlignment="Left" Margin="0" Content="En montage" Grid.ColumnSpan="2" Grid.Column="4" Grid.Row="2" />
                            <CheckBox x:Name="chkMonté" IsChecked="{Binding Monte, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Content="Monté" FontFamily="Tahoma" FontSize="14" Grid.Row="2" HorizontalAlignment="Left" Margin="0" Grid.ColumnSpan="2" Grid.Column="5" />
                            <CheckBox x:Name="chkDélivré" IsChecked="{Binding Délivre, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Content="Délivré" FontFamily="Tahoma" FontSize="14" Grid.Row="3" HorizontalAlignment="Center" Margin="0" Grid.Column="4" Grid.ColumnSpan="2" VerticalAlignment="Center" />
                            <dxc:SimpleButton x:Name="btnvente" IsEnabled="False" Grid.Row="2" VerticalAlignment="Center" Grid.RowSpan="2" MinWidth="50" MinHeight="50" Margin="0" Content="Vente" Click="btnvente_Click" HorizontalAlignment="Center" />
                            <Label  Content="STATUT :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" FontWeight="Bold" Grid.Column="1" Grid.Row="2" Grid.RowSpan="2" />
                            <Label x:Name="TxtStatutGlobal"  Content="Vente validée" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="1" Grid.Row="2" Grid.RowSpan="2" Background="#FF88FF98" Grid.ColumnSpan="2" Margin="50,0,0,0" />
                            <dxe:BarCodeEdit AutoModule="True"   ShowText="False"  EditValue="{Binding NCommande, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="1" >
                                <dxe:BarCodeEdit.StyleSettings>
                                    <dxe:EAN13StyleSettings/>
                                </dxe:BarCodeEdit.StyleSettings>
                            </dxe:BarCodeEdit>
                        </Grid>
                        <Grid Grid.ColumnSpan="2" Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}">
                            <Grid.RowDefinitions>
                                <RowDefinition    />
                                <RowDefinition    />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                                <RowDefinition Height="1.5*"  />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="OD" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" />
                            <TextBlock x:Name="ODLOIN" Text="Loin" VerticalAlignment="Center" Grid.Row="2" HorizontalAlignment="Center" />
                            <TextBlock x:Name="ODITERM" Text="Interm." VerticalAlignment="Center" Grid.Row="3" HorizontalAlignment="Center" />
                            <TextBlock x:Name="ODPRES" Text="Près" VerticalAlignment="Center" Grid.Row="4" HorizontalAlignment="Center" />
                            <TextBlock Text="Ecarts" ToolTip="écarts pulpillaires" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Right" />
                            <TextBlock Text="Sphère" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" />
                            <TextBlock Text="Cylindre" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1" />
                            <TextBlock Text="Axe" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1" />
                            <TextBlock Text="Add." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="1" />
                            <TextBlock Text="Prisme" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="1" />
                            <TextBlock Text="Base" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="6" Grid.Row="1" />
                            <TextBox x:Name="txtLoinSphereDroite" FontFamily="Tahoma" Text="{Binding LoinSphereDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Foreground="#FFFF008B" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinCylindreDroite" FontFamily="Tahoma" Text="{Binding LoinCylindreDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinAxeDroite" FontFamily="Tahoma" Text="{Binding LoinAxeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinAddDroite" FontFamily="Tahoma" Text="{Binding LoinAddDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" TextChanged="txtLoinAddDroite_TextChanged" />
                            <TextBox x:Name="txtLoinPrismeDroite" FontFamily="Tahoma" Text="{Binding LoinPrismeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinBaseDroite" FontFamily="Tahoma" Text="{Binding LoinBaseDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <TextBox x:Name="txtIntermSphereDroite" FontFamily="Tahoma" Text="{Binding IntermSphereDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermCylindreDroite" FontFamily="Tahoma" Text="{Binding IntermCylindreDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermAxeDroite" FontFamily="Tahoma" Text="{Binding IntermAxeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermAddDroite" FontFamily="Tahoma" Text="{Binding IntermAddDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermPrismeDroite" FontFamily="Tahoma" Text="{Binding IntermPrismeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermBaseDroite" FontFamily="Tahoma" Text="{Binding IntermBaseDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <TextBox x:Name="txtPresSphereDroite" FontFamily="Tahoma" Text="{Binding PresSphereDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresCylindreDroite" FontFamily="Tahoma" Text="{Binding PresCylindreDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresAxeDroite" FontFamily="Tahoma" Text="{Binding PresAxeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresAddDroite" Visibility="Collapsed" FontFamily="Tahoma" Text="{Binding PresAddDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresPrismeDroite" FontFamily="Tahoma" Text="{Binding PresPrismeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresBaseDroite" FontFamily="Tahoma" Text="{Binding PresBaseDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="26" />

                            <TextBox x:Name="txtEcartsDroite1" ToolTip="écarts pulpillaires" FontFamily="Tahoma" Text="{Binding EcartsDroite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBox x:Name="txtEcartsDroite2" ToolTip="écarts pulpillaires" FontFamily="Tahoma" Text="{Binding EcartsDroite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBlock Text="Ht" ToolTip="écarts de la Hauteur" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Left" Grid.Column="3" Margin="5,0,0,0" />
                            <TextBox x:Name="txtHtDoite1" ToolTip="écarts de la Hauteur" FontFamily="Tahoma" Text="{Binding HtDoite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="20,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBox x:Name="txtHtDoite2" ToolTip="écarts de la Hauteur" FontFamily="Tahoma" Text="{Binding HtDoite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="5,2,20,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBlock Text="Dctr." ToolTip="valeurs de décentrement" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Center" Grid.Column="4" Margin="5,0,0,0" Grid.ColumnSpan="2" />
                            <Button x:Name="txtDroiteFleshHaut" Visibility="Collapsed" ToolTip="valeur décentrement" FontFamily="Tahoma"  Grid.Row="5" Grid.Column="5"  Margin="20,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" MinHeight="0" Width="15" Height="15" HorizontalAlignment="Left" Click="txtDroiteFleshHaut_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshhaut.png"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="DroiteFleshBas" Visibility="Visible" ToolTip="valeur décentrement" FontFamily="Tahoma" Grid.Row="5" Grid.Column="5"  Margin="20,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="15" Height="15" MinHeight="0" HorizontalAlignment="Left" Click="DroiteFleshBas_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshbas.png"/>
                                </Button.Background>
                            </Button>
                            <TextBox x:Name="txtDroiteValeurHautBas" ToolTip="valeur décentrement" FontFamily="Tahoma" Text="{Binding DroiteValeurHautBas, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="35,2,0,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MinWidth="18" MaxHeight="25" MaxWidth="25" Width="25" Height="25" Grid.ColumnSpan="2" HorizontalAlignment="Left" />
                            <Button x:Name="txtDroiteFleshDroite" Visibility="Collapsed" ToolTip="valeur décentrement" FontFamily="Tahoma"  Grid.Row="5" Grid.Column="6"  Margin="-10,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" MinHeight="0" Width="15" Height="15" HorizontalAlignment="Center" Click="txtDroiteFleshDroite_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshdroite.png"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="txtDroiteFleshGauche" Visibility="Visible" ToolTip="valeur décentrement" FontFamily="Tahoma" Grid.Row="5" Grid.Column="6"  Margin="-10,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="15" Height="15" MinHeight="0" HorizontalAlignment="Center" Click="txtDroiteFleshGauche_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshgauche.png"/>
                                </Button.Background>
                            </Button>
                            <TextBox x:Name="txtDroiteValeurGaucheDroite" ToolTip="valeur décentrement" FontFamily="Tahoma" Text="{Binding DroiteValeurGaucheDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="0,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" HorizontalAlignment="Right" MinWidth="18" MaxHeight="25" MaxWidth="25" Width="25" Height="25" />
                            <Button x:Name="btnformule" Grid.Column="7" HorizontalAlignment="Center" VerticalAlignment="Center" Content="+/-" Click="btnformule_Click" BorderBrush="#FFFFD7BC" ToolTip="Transposer" />
                            <Button x:Name="btnVision" ToolTip="Changer le type de vision" HorizontalAlignment="Center" VerticalAlignment="Center" Content="+/-" BorderBrush="#FFFFD7BC"  Click="btnVision_Click" >
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleche-circulaire.png"/>
                                </Button.Background>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>

                            </Button>


                        </Grid>
                        <Grid Grid.ColumnSpan="2" Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition    />
                                <RowDefinition    />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                                <RowDefinition Height="1.5*"  />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="OG" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" />
                            <TextBlock x:Name="OGLOIN" Text="Loin" VerticalAlignment="Center" Grid.Row="2" HorizontalAlignment="Center" />
                            <TextBlock x:Name="OGINTERM" Text="Interm." VerticalAlignment="Center" Grid.Row="3" HorizontalAlignment="Center" />
                            <TextBlock x:Name="OGPRES" Text="Près" VerticalAlignment="Center" Grid.Row="4" HorizontalAlignment="Center" />
                            <TextBlock Text="Ecarts" ToolTip="écarts pulpillaires" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Right" />
                            <TextBlock Text="Sphère" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" />
                            <TextBlock Text="Cylindre" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1" />
                            <TextBlock Text="Axe" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1" />
                            <TextBlock Text="Add." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="1" />
                            <TextBlock Text="Prisme" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="1" />
                            <TextBlock Text="Base" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="6" Grid.Row="1" />
                            <TextBox x:Name="txtLoinSphereGauche" FontFamily="Tahoma" Text="{Binding LoinSphereGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Foreground="#FFFF008B" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinCylindreGauche" FontFamily="Tahoma" Text="{Binding LoinCylindreGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinAxeGauche" FontFamily="Tahoma" Text="{Binding LoinAxeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinAddGauche" FontFamily="Tahoma" Text="{Binding LoinAddGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" TextChanged="txtLoinAddGauche_TextChanged" />
                            <TextBox x:Name="txtLoinPrismeGauche" FontFamily="Tahoma" Text="{Binding LoinPrismeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinBaseGauche" FontFamily="Tahoma" Text="{Binding LoinBaseGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <TextBox x:Name="txtIntermSphereGauche" FontFamily="Tahoma" Text="{Binding IntermSphereGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermCylindreGauche" FontFamily="Tahoma" Text="{Binding IntermCylindreGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermAxeGauche" FontFamily="Tahoma" Text="{Binding IntermAxeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermAddGauche" FontFamily="Tahoma" Text="{Binding IntermAddGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermPrismeGauche" FontFamily="Tahoma" Text="{Binding IntermPrismeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermBaseGauche" FontFamily="Tahoma" Text="{Binding IntermBaseGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <TextBox x:Name="txtPresSphereGauche" FontFamily="Tahoma" Text="{Binding PresSphereGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresCylindreGauche" FontFamily="Tahoma" Text="{Binding PresCylindreGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresAxeGauche" FontFamily="Tahoma" Text="{Binding PresAxeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresAddGauche" Visibility="Collapsed" FontFamily="Tahoma" Text="{Binding PresAddGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresPrismeGauche" FontFamily="Tahoma" Text="{Binding PresPrismeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresBaseGauche" FontFamily="Tahoma" Text="{Binding PresBaseGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="26" />

                            <TextBox x:Name="txtEcartsGauche1" ToolTip="écarts pulpillaires" FontFamily="Tahoma" Text="{Binding EcartsGauche1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBox x:Name="txtEcartsGauche2" ToolTip="écarts pulpillaires" FontFamily="Tahoma" Text="{Binding EcartsGauche2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBlock Text="Ht" ToolTip="écarts de la Hauteur" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Left" Grid.Column="3" Margin="5,0,0,0" />
                            <TextBox x:Name="txtHtGauche1" ToolTip="écarts de la Hauteur" FontFamily="Tahoma" Text="{Binding HtGauche1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="20,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBox x:Name="txtHtGauche2" ToolTip="écarts de la Hauteur" FontFamily="Tahoma" Text="{Binding HtGauche2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="5,2,20,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBlock Text="Dctr." ToolTip="valeurs de décentrement" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Center" Grid.Column="4" Margin="5,0,0,0" Grid.ColumnSpan="2" />
                            <Button x:Name="txtGaucheFleshHaut" Visibility="Collapsed" ToolTip="valeur décentrement" FontFamily="Tahoma"  Grid.Row="5" Grid.Column="5"  Margin="20,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" MinHeight="0" Width="15" Height="15" HorizontalAlignment="Left" Click="txtGaucheFleshHaut_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshhaut.png"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="txtGaucheFleshBas" Visibility="Visible" ToolTip="valeur décentrement" FontFamily="Tahoma" Grid.Row="5" Grid.Column="5"  Margin="20,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="15" Height="15" MinHeight="0" HorizontalAlignment="Left" Click="GaucheFleshBas_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshbas.png"/>
                                </Button.Background>
                            </Button>
                            <TextBox x:Name="txtGaucheValeurHautBas" ToolTip="valeur décentrement" FontFamily="Tahoma" Text="{Binding GaucheValeurHautBas, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="35,2,0,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MinWidth="18" MaxHeight="25" MaxWidth="25" Width="25" Height="25" Grid.ColumnSpan="2" HorizontalAlignment="Left" />
                            <Button x:Name="txtGaucheFleshDroite" Visibility="Collapsed" ToolTip="valeur décentrement" FontFamily="Tahoma"  Grid.Row="5" Grid.Column="6"  Margin="-10,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" MinHeight="0" Width="15" Height="15" HorizontalAlignment="Center" Click="txtGaucheFleshDroite_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshdroite.png"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="txtGaucheFleshGauche" Visibility="Visible" ToolTip="valeur décentrement" FontFamily="Tahoma" Grid.Row="5" Grid.Column="6"  Margin="-10,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="15" Height="15" MinHeight="0" HorizontalAlignment="Center" Click="txtGaucheFleshGauche_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshgauche.png"/>
                                </Button.Background>
                            </Button>
                            <TextBox x:Name="txtGaucheValeurGaucheDroite" ToolTip="valeur décentrement" FontFamily="Tahoma" Text="{Binding GaucheValeurGaucheDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="0,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" HorizontalAlignment="Right" MinWidth="18" MaxHeight="25" MaxWidth="25" Width="25" Height="25" />
                        </Grid>

                        <Grid Grid.Row="2" Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Grid.RowSpan="2" Grid.ColumnSpan="4">
                            <Grid.RowDefinitions>
                                <RowDefinition    />
                                <RowDefinition    />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="MontureLoinLabel"  Text="LOIN" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,0,0"/>
                            <TextBlock x:Name="MonturePresLabel"  Text="PRES" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="2" Margin="20,0,0,0"/>
                            <TextBlock  Text="Accessoires" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="4" Grid.ColumnSpan="2" Margin="20,0,0,0"/>
                            <TextBlock  Text="Verres" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1"/>
                            <TextBlock  Text="Monture" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1"/>
                            <TextBlock  Text="Verres" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="2"/>
                            <TextBlock  Text="Monture" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="3"/>
                            <Button x:Name="DroiteEtatVerreLoin" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="1" HorizontalAlignment="Right" />
                            <Button x:Name="DroiteEtatMontureLoin" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="1" />
                            <Button x:Name="DroiteEtatVerrePres"  Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="2" />
                            <Button x:Name="DroiteEtatMonturePres"  Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="3" />
                            <Button x:Name="DroiteEtatAccessoires1Pres" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="4" />
                            <Button x:Name="DroiteEtatAccessoires2Pres" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="5" />
                            <TextBox x:Name="txtDroitPrixVerreLoin" IsEnabled="False" ToolTip="Prix de vente" Text="{Binding DroitPrixVerreLoin, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="4" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" TextChanged="txtDroitPrixVerreLoin_TextChanged" />
                            <TextBox x:Name="txtDroiteVerreLoinDesignation"  IsEnabled="True"  ToolTip="Double cliquer pour sélectionner un produit"  Text="{Binding DroiteVerreLoinDesignation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="70" Grid.ColumnSpan="2" MinHeight="25" MaxHeight="25" MouseDoubleClick="txtDroiteVerreLoinDesignation_MouseDoubleClick" />
                            <Button x:Name="GaucheStatutLoinVerre" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="4" HorizontalAlignment="Right" />
                            <TextBox x:Name="txtGauchePrixVerreLoin" IsEnabled="False" ToolTip="Prix de vente"  Text="{Binding GauchePrixVerreLoin, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="7" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" TextChanged="txtGauchePrixVerreLoin_TextChanged" />
                            <TextBox x:Name="txtGaucheVerreLoinDesignation" ToolTip="Double cliquer pour sélectionner un produit" IsEnabled="True" Text="{Binding GaucheVerreLoinDesignation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="5" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="70" Grid.ColumnSpan="2" MinHeight="25" MaxHeight="25" MouseDoubleClick="txtGaucheVerreLoinDesignation_MouseDoubleClick" />
                            <TextBox x:Name="txtPrixTotalLoin" ToolTip="Prix de vente" IsEnabled="False" FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" TextChanged="txtPrixTotalLoin_TextChanged" />

                            <TextBox x:Name="txtPrixMontureLoin" IsEnabled="False" ToolTip="Prix de vente" Text="{Binding PrixMontureLoin, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="1" TextChanged="txtPrixMontureLoin_TextChanged" />
                            <TextBox x:Name="txtMontureDesignationLoin" ToolTip="Double cliquer pour sélectionner une monture" IsEnabled="True" Text="{Binding MontureDesignationLoin, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="200" Grid.ColumnSpan="3" MinHeight="25" MaxHeight="25" Grid.Row="1" MouseDoubleClick="txtMontureDesignationLoin_MouseDoubleClick" />
                            <ComboBox x:Name="ModeVenteLoin" IsEditable="True" SelectedValue="{Binding ModeVenteLoin, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" MinWidth="10" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="#FF2D3F5D" Margin="5,0,0,0" Grid.Column="5" Grid.Row="1" MinHeight="25" MaxHeight="25" Grid.ColumnSpan="3" >
                                <ComboBoxItem Content="Vente" FontSize="14"/>
                                <ComboBoxItem Content="Vente + Gar." FontSize="14" />
                                <ComboBoxItem Content="Offre Co." FontSize="14" />
                                <ComboBoxItem Content="Mont. Client" FontSize="14" />
                                <ComboBoxItem Content="Réparation" FontSize="14" />
                                <ComboBoxItem Content="Echange" FontSize="14" />
                                <ComboBoxItem Content="Sous Garant" FontSize="14" />

                            </ComboBox>
                            <TextBox x:Name="txtDroiteVerrePresDesignation"  IsEnabled="True"  ToolTip="Double cliquer pour sélectionner un produit"  Text="{Binding DroiteVerrePresDesignation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="70" Grid.ColumnSpan="2" MinHeight="25" MaxHeight="25" Grid.Row="2" MouseDoubleClick="txtDroiteVerrePresDesignation_MouseDoubleClick" />
                            <TextBox x:Name="txtDroitPrixVerrePres" IsEnabled="False" ToolTip="Prix de vente" Text="{Binding DroitPrixVerrePres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="4" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="2" TextChanged="txtDroitPrixVerrePres_TextChanged" />
                            <Button x:Name="GaucheStatutPresVerre" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="4" HorizontalAlignment="Right" Grid.Row="2" />
                            <TextBox x:Name="txtGaucheVerrePresDesignation" ToolTip="Double cliquer pour sélectionner un produit" IsEnabled="True" Text="{Binding GaucheVerrePresDesignation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="5" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="70" Grid.ColumnSpan="2" MinHeight="25" MaxHeight="25" Grid.Row="2" MouseDoubleClick="txtGaucheVerrePresDesignation_MouseDoubleClick" Height="25" />
                            <TextBox x:Name="txtGauchePrixVerrePres" IsEnabled="False" ToolTip="Prix de vente"  Text="{Binding GauchePrixVerrePres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="7" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="2" TextChanged="txtGauchePrixVerrePres_TextChanged" />
                            <TextBox x:Name="txtPrixTotalPres" ToolTip="Prix de vente" IsEnabled="False"  FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="2" TextChanged="txtPrixTotalPres_TextChanged" />
                            <TextBox x:Name="txtMontureDesignationPres" ToolTip="Double cliquer pour sélectionner une monture" IsEnabled="True" Text="{Binding MontureDesignationPres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="200" Grid.ColumnSpan="3" MinHeight="25" MaxHeight="25" Grid.Row="3" MouseDoubleClick="txtMontureDesignationPres_MouseDoubleClick" />
                            <ComboBox x:Name="ModeVentePres" IsEditable="True" SelectedValue="{Binding ModeVentePres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" MinWidth="10" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="#FF2D3F5D" Margin="5,0,0,0" Grid.Column="5" Grid.Row="3" MinHeight="25" MaxHeight="25" Grid.ColumnSpan="3" >
                                <ComboBoxItem Content="Vente" FontSize="14"/>
                                <ComboBoxItem Content="Vente + Gar." FontSize="14" />
                                <ComboBoxItem Content="Offre Co." FontSize="14" />
                                <ComboBoxItem Content="Mont. Client" FontSize="14" />
                                <ComboBoxItem Content="Réparation" FontSize="14" />
                                <ComboBoxItem Content="Echange" FontSize="14" />
                                <ComboBoxItem Content="Sous Garant" FontSize="14" />

                            </ComboBox>
                            <TextBox x:Name="txtPrixMonturePres" IsEnabled="False" ToolTip="Prix de vente" Text="{Binding PrixMonturePres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="3" TextChanged="txtPrixMonturePres_TextChanged" />

                            <TextBox x:Name="txtAccessoires1" ToolTip="Double cliquer pour sélectionner un produit" IsEnabled="True" Text="{Binding Accessoires1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="200" Grid.ColumnSpan="3" MinHeight="25" MaxHeight="25" Grid.Row="4" MouseDoubleClick="txtAccessoires1_MouseDoubleClick" />
                            <TextBox x:Name="txtAccessoires2" ToolTip="Double cliquer pour sélectionner un produit" IsEnabled="True" Text="{Binding Accessoires2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="200" Grid.ColumnSpan="3" MinHeight="25" MaxHeight="25" Grid.Row="5" MouseDoubleClick="txtAccessoires2_MouseDoubleClick" />
                            <TextBox x:Name="txtAccessoiresPrix1" IsEnabled="False" ToolTip="Prix de vente"  Text="{Binding AccessoiresPrix1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="7" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="4" HorizontalAlignment="Left" TextChanged="txtAccessoiresPrix1_TextChanged" />
                            <TextBox x:Name="txtAccessoiresQuantite1" ToolTip="Quantite"  Text="{Binding AccessoiresQuantite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="5" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,25,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="4" Grid.ColumnSpan="2" TextChanged="txtAccessoiresQuantite1_TextChanged" />
                            <TextBlock Text="x" Grid.Row="4" Grid.Column="5" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                            <TextBlock Text="=" Grid.Row="4" Grid.Column="6" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                            <TextBox x:Name="txtAccessoiresPrix2" ToolTip="Prix de vente" IsEnabled="False"  Text="{Binding AccessoiresPrix2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="7" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="5" HorizontalAlignment="Left" TextChanged="txtAccessoiresPrix2_TextChanged" />
                            <TextBox x:Name="txtAccessoiresQuantite2" ToolTip="Quantite"  Text="{Binding AccessoiresQuantite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="5" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,25,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="5" Grid.ColumnSpan="2" TextChanged="txtAccessoiresQuantite2_TextChanged" />
                            <TextBlock Text="x" Grid.Row="5" Grid.Column="5" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                            <TextBlock Text="=" Grid.Row="5" Grid.Column="6" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                            <TextBox x:Name="txtPrixTotalAcc1"  IsEnabled="False"  FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="4" TextChanged="txtPrixTotalAcc1_TextChanged" />
                            <TextBox x:Name="txtPrixTotalAcc2"  IsEnabled="False" FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="5" TextChanged="txtPrixTotalAcc2_TextChanged" />

                            <TextBlock Text="TOTAL" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Row="6" Grid.Column="7"/>
                            <TextBlock Text="Encaissé" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Row="6" Grid.Column="5"/>
                            <TextBox x:Name="txtMontantTotalENC" ToolTip="Versement" IsEnabled="False" Text="{Binding Encaissé, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="6" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="6" />
                            <TextBlock Text="Remise" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Row="6" Grid.Column="3"/>
                            <TextBox x:Name="txtRemiseMonture" ToolTip="Remise" IsEnabled="True" Text="{Binding Remise, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="4" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="6" TextChanged="txtRemiseMonture_TextChanged" />

                            <TextBox x:Name="txtMontantTotal" ToolTip="Prix total" IsEnabled="False" Text="{Binding  MontantTotal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="6" />

                            <Button x:Name="ValiderMonture" Grid.ColumnSpan="5" Content="Valider" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Grid.Row="7" Margin="0,0,40,0" Click="ValiderMonture_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="AnnulerMonture" Grid.ColumnSpan="5" Content="Échap = ANNULER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FFFF9388" Grid.Column="4" BorderBrush="{x:Null}" Grid.Row="7" Margin="40,0,0,0" Click="AnnulerMonture_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>



                        </Grid>
                    </Grid>
                </Grid>
            </dxc:DXTabItem>
            <dxc:DXTabItem x:Name="tsdfsdfgendsft"  FontSize="14" FontFamily="Tahoma" Header="Lentilles" Margin="0">
                <Grid >
                    <Grid.RowDefinitions>

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="0.50*" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="70"   />
                            <RowDefinition />
                            <RowDefinition  />

                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />

                        </Grid.ColumnDefinitions>
                        <DockPanel Margin="10,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Button x:Name="btnNewLentille" FontFamily="Tahoma"  Content="" FontSize="12" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Nouveau" MinWidth="35" MinHeight="35" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Click="btnNewLentille_Click" BorderBrush="{x:Null}" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624077_add_user.ico"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="btnSuppLentille" FontFamily="Tahoma" Margin="10,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Supprimer" MinWidth="35" MinHeight="35" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Click="btnSuppLentille_Click" FontSize="12" BorderBrush="{x:Null}" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624817_delete.ico"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="btnEditLentille"  Margin="10,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Modifier" MinWidth="35" MinHeight="35" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Click="btnEditLentille_Click" FontSize="12" BorderBrush="{x:Null}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624391_edit_user.ico"/>
                                </Button.Background>

                            </Button>
                            <Button x:Name="btnImprimerLentille" Margin="10,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"  ToolTip="Imprimer" MinWidth="40" MinHeight="40" Grid.Column="3" VerticalAlignment="Center" VerticalContentAlignment="Center" Click="btnImprimerLentille_Click" FontSize="12" BorderBrush="{x:Null}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                                </Button.Background>
                            </Button>
                        </DockPanel>

                        <Border x:Name="BorderLentille" BorderThickness="3" CornerRadius="20" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" Grid.RowSpan="8" BorderBrush="#FB2D3F5D" Margin="0,0,10,0">

                            <DataGrid x:Name="LentilleDatagrid" SelectionMode="Single" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}"  ScrollViewer.VerticalScrollBarVisibility="Auto" GridLinesVisibility="Horizontal"  Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="5" IsReadOnly="True" IsTextSearchCaseSensitive="True" BorderThickness="1" Grid.RowSpan="6" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HeadersVisibility="All" FontSize="12" BorderBrush="{x:Null}" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"  Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MouseDoubleClick="LentilleDatagrid_MouseDoubleClick" MouseRightButtonUp="LentilleDatagrid_MouseRightButtonUp">
                                <DataGrid.ColumnHeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="10,4,4,7"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                        <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                        <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="SortDirection" Value="{x:Null}"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="SortDirection" Value="Ascending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                        </Trigger>
                                                        <Trigger Property="SortDirection" Value="Descending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                            <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                        </Trigger>
                                                        <Trigger Property="DisplayIndex" Value="0">
                                                            <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGrid.ColumnHeaderStyle>

                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                                <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                                <Setter Property="FontWeight" Value="Bold"></Setter>
                                                <Setter Property="FontSize" Value="20"></Setter>
                                                <Setter Property="Background" Value="#CC119EDA" />
                                                <Setter Property="Foreground" Value="White"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.CellStyle>

                                <DataGrid.Columns>

                                    <DataGridTextColumn Header="Date"
					Binding="{Binding Date, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                    <DataGridTemplateColumn  Width="Auto" Header="Statut">

                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Label>
                                                    <Label.Style>
                                                        <Style TargetType="Label">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=StatutVente}" Value="True">
                                                                    <Setter Property="Content" Value="Vente validée" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=StatutVente}" Value="False">
                                                                    <Setter Property="Content" Value="Devis" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Label.Style>
                                                </Label>

                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>


                                    <DataGridTextColumn Header="Date de livraison"
					Binding="{Binding Livraison, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                    <DataGridTemplateColumn  Width="Auto" Header="Délivré">

                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Label>
                                                    <Label.Style>
                                                        <Style TargetType="Label">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=Délivre}" Value="True">
                                                                    <Setter Property="Content" Value="Monture Délivrée" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=Délivre}" Value="False">
                                                                    <Setter Property="Content" Value="Non Délivrée" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Label.Style>
                                                </Label>

                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="NCommande"
             Binding="{Binding Ncommande}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="100" FontSize="22" Foreground="#FF451571" />
                                    <DataGridTextColumn Header="Cle"
             Binding="{Binding Cle}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="100" FontSize="22" Foreground="#FF451571" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </Border>


                    </Grid>
                    <Grid Grid.Column="0" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" x:Name="GridLentille" IsEnabled="False">
                        <Grid.RowDefinitions>
                            <RowDefinition    />
                            <RowDefinition Height="1.5*" />
                            <RowDefinition  />
                            <RowDefinition  />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition/>
                            <ColumnDefinition />
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.ColumnSpan="4">
                            <Grid.RowDefinitions>
                                <RowDefinition    />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Label x:Name="lbfld" Content="N° Commande :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />

                            <Label x:Name="lbld" Content="Docteur :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="2" />
                            <Label x:Name="lbla1" Content="Observation :" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="2" />
                            <Label x:Name="lblad" Content="Date :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Row="1" />
                            <DatePicker x:Name="DateCréationLentille" SelectedDate="{Binding Date,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" BorderBrush="#FF2D3F5D" Grid.Row="1" />
                            <DatePicker x:Name="DatePrescriptionLentille" SelectedDate="{Binding Prescription,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="5" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" BorderBrush="#FF2D3F5D" />
                            <DatePicker x:Name="DateLivraisonLentille" SelectedDate="{Binding Livraison,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="5" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" Grid.Row="1" BorderBrush="#FF2D3F5D" />
                            <TextBox x:Name="txtObservLentille" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding Observ, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Row="1" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="0,5,0,0" MinWidth="70" Grid.RowSpan="3" />
                            <TextBox x:Name="txtDocteurLentille" Text="{Binding Docteur, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="0" MinWidth="70" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <Label x:Name="lblLentille" Content="Livraison :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="4" Grid.Row="1" />
                            <Label  Content="Prescription :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="4" />

                            <CheckBox x:Name="chkDélivréLentille" IsChecked="{Binding Délivre, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Content="Délivré" FontFamily="Tahoma" FontSize="14" Grid.Row="3" HorizontalAlignment="Center" Margin="0" Grid.Column="4" Grid.ColumnSpan="2" VerticalAlignment="Center" />
                            <dxc:SimpleButton x:Name="btnventeLentille" IsEnabled="False" Grid.Row="2" VerticalAlignment="Center" Grid.RowSpan="2" MinWidth="50" MinHeight="50" Margin="50,0,0,0" Content="Vente" Click="btnventeLentille_Click" />
                            <Label  Content="STATUT :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" FontWeight="Bold" Grid.Column="1" Grid.Row="2" Grid.RowSpan="2" />
                            <Label x:Name="TxtStatutGlobalLentille"  Content="Vente validée" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="1" Grid.Row="2" Background="#FF88FF98" Grid.ColumnSpan="2" Margin="50,0,0,0" Grid.RowSpan="2" />
                            <dxe:BarCodeEdit AutoModule="True"   ShowText="False"  EditValue="{Binding NCommande, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="1" >
                                <dxe:BarCodeEdit.StyleSettings>
                                    <dxe:EAN13StyleSettings/>
                                </dxe:BarCodeEdit.StyleSettings>
                            </dxe:BarCodeEdit>
                        </Grid>
                        <Grid Grid.ColumnSpan="2" Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}">
                            <Grid.RowDefinitions>
                                <RowDefinition    />
                                <RowDefinition    />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                                <RowDefinition Height="1.5*"  />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition/>

                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="OD" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" />
                            <TextBlock x:Name="ODAncien" Text="Ancien RX" VerticalAlignment="Center" Grid.Row="2" HorizontalAlignment="Center" />
                            <TextBlock x:Name="ODNouv" Text="Nouv. RX" VerticalAlignment="Center" Grid.Row="3" HorizontalAlignment="Center" />
                            <TextBlock x:Name="ODLentille" Text="Lentille" VerticalAlignment="Center" Grid.Row="4" HorizontalAlignment="Center" />
                            <TextBlock Text="Mouvem." ToolTip="" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Right" Grid.Column="1" />
                            <TextBlock Text="Centrage." ToolTip="" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Center" Grid.Column="4" />

                            <TextBlock Text="Sphère" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" />
                            <TextBlock Text="Cylindre" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1" />
                            <TextBlock Text="Axe" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1" />
                            <TextBlock Text="Add." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="1" />
                            <TextBlock Text="Ac. vis." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="1" />
                            <TextBox x:Name="txtAncienSphereDroite" FontFamily="Tahoma" Text="{Binding AncienSphereDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Foreground="#FFFF008B" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtAncienCylindreDroite" FontFamily="Tahoma" Text="{Binding AncienCylindreDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtAncienAxeDroite" FontFamily="Tahoma" Text="{Binding AncienAxeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtAncienAddDroite" FontFamily="Tahoma" Text="{Binding AncienAddDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtAncienAc" FontFamily="Tahoma" Text="{Binding AncienAcDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <TextBox x:Name="txtNouvSphereDroite" FontFamily="Tahoma" Text="{Binding NouvSphereDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtNouvCylindreDroite" FontFamily="Tahoma" Text="{Binding NouvCylindreDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtNouvAxeDroite" FontFamily="Tahoma" Text="{Binding NouvAxeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtNouvAddDroite" FontFamily="Tahoma" Text="{Binding NouvAddDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtNouvAc" FontFamily="Tahoma" Text="{Binding NouvAcDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <TextBox x:Name="txtLentilleSphereDroite" FontFamily="Tahoma" Text="{Binding LentilleSphereDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLentilleCylindreDroite" FontFamily="Tahoma" Text="{Binding LentilleCylindreDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />


                            <TextBox x:Name="txtLentilleAxeDroite" FontFamily="Tahoma" Text="{Binding LentilleAxeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLentilleAddDroite" FontFamily="Tahoma" Text="{Binding LentilleAddDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLentilleAc" FontFamily="Tahoma" Text="{Binding LentilleAcDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLentilleMouvementDroite" FontFamily="Tahoma" Text="{Binding MouvementDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" />
                            <TextBox x:Name="txtLentilleCentrageDroite" FontFamily="Tahoma" Text="{Binding CentrageDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" />
                            <Button x:Name="btnTransposerLentille" Grid.Column="7" HorizontalAlignment="Center" VerticalAlignment="Center" Content="+/-" BorderBrush="#FFFFD7BC" ToolTip="Transposer" Click="btnTransposerLentille_Click" />



                        </Grid>

                        <Grid Grid.ColumnSpan="2" Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition    />
                                <RowDefinition    />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                                <RowDefinition Height="1.5*"  />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition/>

                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="OG" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" />
                            <TextBlock x:Name="ODAncienGauche" Text="Ancien RX" VerticalAlignment="Center" Grid.Row="2" HorizontalAlignment="Center" />
                            <TextBlock x:Name="ODNouvGauche" Text="Nouv. RX" VerticalAlignment="Center" Grid.Row="3" HorizontalAlignment="Center" />
                            <TextBlock x:Name="ODLentilleGauche" Text="Lentille" VerticalAlignment="Center" Grid.Row="4" HorizontalAlignment="Center" />
                            <TextBlock Text="Mouvem." ToolTip="" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Right" Grid.Column="1" />
                            <TextBlock Text="Centrage." ToolTip="" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Center" Grid.Column="4" />

                            <TextBlock Text="Sphère" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" />
                            <TextBlock Text="Cylindre" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1" />
                            <TextBlock Text="Axe" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1" />
                            <TextBlock Text="Add." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="1" />
                            <TextBlock Text="Ac. vis." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="1" />
                            <TextBox x:Name="txtAncienSphereGauche" FontFamily="Tahoma" Text="{Binding AncienSphereGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Foreground="#FFFF008B" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtAncienCylindreGauche" FontFamily="Tahoma" Text="{Binding AncienCylindreGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtAncienAxeGauche" FontFamily="Tahoma" Text="{Binding AncienAxeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtAncienAddGauche" FontFamily="Tahoma" Text="{Binding AncienAddGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtAncienAcGauche" FontFamily="Tahoma" Text="{Binding AncienAcGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <TextBox x:Name="txtNouvSphereGauche" FontFamily="Tahoma" Text="{Binding NouvSphereGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtNouvCylindreGauche" FontFamily="Tahoma" Text="{Binding NouvCylindreGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtNouvAxeGauche" FontFamily="Tahoma" Text="{Binding NouvAxeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtNouvAddGauche" FontFamily="Tahoma" Text="{Binding NouvAddGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtNouvAcGauche" FontFamily="Tahoma" Text="{Binding NouvAcGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <TextBox x:Name="txtLentilleSphereGauche" FontFamily="Tahoma" Text="{Binding LentilleSphereGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLentilleCylindreGauche" FontFamily="Tahoma" Text="{Binding LentilleCylindreGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />


                            <TextBox x:Name="txtLentilleAxeGauche" FontFamily="Tahoma" Text="{Binding LentilleAxeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLentilleAddGauche" FontFamily="Tahoma" Text="{Binding LentilleAddGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLentilleAcGauche" FontFamily="Tahoma" Text="{Binding LentilleAcGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLentilleMouvementGauche" FontFamily="Tahoma" Text="{Binding MouvementGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" />
                            <TextBox x:Name="txtLentilleCentrageGauche" FontFamily="Tahoma" Text="{Binding CentrageGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" />



                        </Grid>
                        <Grid Grid.Row="2" Background="DimGray" Grid.RowSpan="2" Grid.ColumnSpan="4">
                            <Grid.RowDefinitions>
                                <RowDefinition    />
                                <RowDefinition    />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />

                            </Grid.ColumnDefinitions>
                            <Grid Grid.Row="0" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Grid.ColumnSpan="10">
                                <Grid.RowDefinitions>
                                    <RowDefinition    />

                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition />

                                </Grid.ColumnDefinitions>
                                <TextBlock   Text="Kératométrie" FontFamily="Tahoma" Foreground="#FFFF008B" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Grid.ColumnSpan="2"/>
                                <TextBlock  Text="H" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,0,0" Grid.Column="1"/>

                                <TextBox x:Name="txtKeratometrieDroiteH" FontFamily="Tahoma" Text="{Binding KeratometrieDroiteH, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="5,0,0,0" MaxWidth="40" MinWidth="40" Grid.Column="1" HorizontalAlignment="Center" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" TextChanged="txtKeratometrieDroiteH_TextChanged" />
                                <TextBlock  Text="V" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Column="2"/>

                                <TextBox x:Name="txtKeratometrieDroiteV" FontFamily="Tahoma" Text="{Binding KeratometrieDroiteV, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" TextChanged="txtKeratometrieDroiteV_TextChanged" />
                                <TextBlock  Text="Axe" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Column="3"/>
                                <TextBox x:Name="txtKeratometrieDroiteAxe" FontFamily="Tahoma" Text="{Binding KeratometrieDroiteAxe, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />

                                <TextBlock  Text="K.moy." FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,0,0" Grid.Column="4"/>
                                <TextBox x:Name="txtKeratometrieDroitemoy" FontFamily="Tahoma" Text="{Binding KeratometrieDroitemoy, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="25,0,0,0" MinWidth="40" MaxWidth="40" FontWeight="Bold" HorizontalAlignment="Center" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />

                                <TextBlock  Text="H" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="6"/>

                                <TextBox x:Name="txtKeratometrieGaucheH" FontFamily="Tahoma" Text="{Binding KeratometrieGaucheH, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="10,0,0,0" MaxWidth="40" MinWidth="40" Grid.Column="6" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" TextChanged="txtKeratometrieGaucheH_TextChanged" />
                                <TextBlock  Text="V" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="7"/>

                                <TextBox x:Name="txtKeratometrieGaucheV" FontFamily="Tahoma" Text="{Binding KeratometrieGaucheV, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="7" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="10,0,0,0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" TextChanged="txtKeratometrieGaucheV_TextChanged" />
                                <TextBlock  Text="Axe" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="8"/>
                                <TextBox x:Name="txtKeratometrieGaucheAxe" FontFamily="Tahoma" Text="{Binding KeratometrieGaucheAxe, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="8" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="25,0,0,0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                <TextBlock  Text="K.moy." FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="9"/>
                                <TextBox x:Name="txtKeratometrieGauchemoy" FontFamily="Tahoma" Text="{Binding KeratometrieGauchemoy, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="9" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" Grid.ColumnSpan="2" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />

                                <dxc:SimpleButton x:Name="btnDiopmm" Grid.Column="10" HorizontalAlignment="Right" VerticalAlignment="Center" Content="D/m-" BorderBrush="#FFFFD7BC" ToolTip="Conversion Dioptrie/mm" MaxWidth="50" MaxHeight="20" FontFamily="Tahoma" Padding="2" Click="btnDiopmm_Click" Background="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Margin="0,0,10,0" />
                            </Grid>
                            <TextBlock   Text="Lentille" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Grid.ColumnSpan="2" Grid.Row="1"/>

                            <TextBlock  Text="Diamétre" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="2" Margin="10,0,0,0" Grid.ColumnSpan="2"/>
                            <TextBox x:Name="txtDiamétreOD"  Text="{Binding DiametreOD, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="1" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0" MinHeight="25" MaxHeight="25" Grid.Row="2"  />

                            <TextBlock  Text="Rayon" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2" Margin="0" Grid.Column="2"/>
                            <TextBox x:Name="txtRayonOD"  Text="{Binding RayonOD, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="0" MinHeight="25" MaxHeight="25" Grid.Row="2"  />
                            <TextBlock  Text="Diamétre" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="2" Margin="10,0,0,0" Grid.ColumnSpan="2" Grid.Column="5"/>
                            <TextBlock  Text="Rayon" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2" Margin="0" Grid.Column="7"/>
                            <TextBox x:Name="txtDiametreOG"  Text="{Binding DiametreOG, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="6" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinHeight="25" MaxHeight="25" Grid.Row="2"  />
                            <TextBox x:Name="txtRayonOG" Text="{Binding RayonOG, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="8" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0" MinHeight="25" MaxHeight="25" Grid.Row="2"  />
                            <TextBlock  Text="Type de lentille" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1" Margin="0" Grid.Column="1" Grid.ColumnSpan="3"/>
                            <TextBox x:Name="txtTypeOD"  Text="{Binding TypeOD, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="7" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="20,0,5,0" MinHeight="25" MaxHeight="25" Grid.Row="1" Grid.ColumnSpan="2"  />

                            <TextBlock  Text="Type de lentille" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1" Margin="0" Grid.Column="5" Grid.ColumnSpan="3"/>
                            <TextBox x:Name="txtTypeOG"  Text="{Binding TypeOG, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="20,0,5,0" MinHeight="25" MaxHeight="25" Grid.Row="1" Grid.ColumnSpan="2"  />




                            <TextBlock   Text="Accesoires" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Grid.ColumnSpan="2" Grid.Row="5"/>

                            <TextBox x:Name="txtDroitPrixLentille" IsEnabled="False" ToolTip="Prix de vente" Text="{Binding DroitPrixLentille, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="3" TextChanged="txtDroitPrixLentille_TextChanged" />
                            <TextBlock   Text="OD" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Grid.Row="1" Grid.Column="1"/>

                            <TextBox x:Name="txtDroiteLentilleDesignation"  IsEnabled="True"  ToolTip="Double cliquer pour sélectionner un produit"  Text="{Binding DroiteLentilleDesignation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="1" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="70" Grid.ColumnSpan="2" MinHeight="25" MaxHeight="25" Grid.Row="3" MouseDoubleClick="txtDroiteLentilleDesignation_MouseDoubleClick"  />
                            <TextBox x:Name="txtDroitQuantiteLentille" IsEnabled="True" ToolTip="Quantité" Text="{Binding DroitQuantiteLentille, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="4" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="3" TextChanged="txtDroitQuantiteLentille_TextChanged" />
                            <TextBlock   Text="OG" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Row="1" Grid.Column="5"/>

                            <TextBlock Text="x" Grid.Row="3" Grid.Column="3" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" FontWeight="Bold" />
                            <Button x:Name="GaucheStatutLentille" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="4" HorizontalAlignment="Right" Grid.Row="2" />
                            <Button x:Name="DroiteStatutLentille" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" HorizontalAlignment="Right" Grid.Row="2" />
                            <TextBox x:Name="txtGaucheLentilleDesignation"  IsEnabled="True"  ToolTip="Double cliquer pour sélectionner un produit"  Text="{Binding GaucheLentilleDesignation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="5" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="70" Grid.ColumnSpan="2" MinHeight="25" MaxHeight="25" Grid.Row="3" MouseDoubleClick="txtGaucheLentilleDesignation_MouseDoubleClick"  />
                            <TextBox x:Name="txtGauchePrixLentille" IsEnabled="False" ToolTip="Prix de vente" Text="{Binding GauchePrixLentille, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="7" Foreground="Black" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FFA020F0" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="3" TextChanged="txtGauchePrixLentille_TextChanged" />
                            <TextBlock Text="x" Grid.Row="3" Grid.Column="7" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" FontWeight="Bold" />
                            <TextBox x:Name="txtGaucheQuantiteLentille" IsEnabled="True" ToolTip="Quantité" Text="{Binding GaucheQuantiteLentille, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="8" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="3" TextChanged="txtGaucheQuantiteLentille_TextChanged" />
                            <TextBlock Text="=" Grid.Row="3" Grid.Column="7" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                            <TextBox x:Name="txtPrixTotalLentille" ToolTip="Prix de vente" IsEnabled="False" FontFamily="Tahoma" Grid.Column="9" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="3" TextChanged="txtPrixTotalLentille_TextChanged"  />
                            <TextBlock  Text="Type de visite" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="4" Margin="10,0,0,0" Grid.ColumnSpan="2"/>
                            <ComboBox x:Name="TypeDevisite" IsEditable="True" SelectedValue="{Binding TypeDevisite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" MinWidth="10" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="30,0,0,0" Grid.Column="1" Grid.Row="4" MinHeight="25" MaxHeight="25" Grid.ColumnSpan="2" >
                                <ComboBoxItem Content="Inconnu" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                <ComboBoxItem Content="Essai" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                <ComboBoxItem Content="Adaptation" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                <ComboBoxItem Content="Contrôle" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                <ComboBoxItem Content="Renouvellement" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                            </ComboBox>
                            <TextBlock  Text="Durée" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="4" Margin="10,0,0,0" Grid.Column="3"/>
                            <ComboBox x:Name="Durée" IsEditable="True" SelectedValue="{Binding Durée, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" MinWidth="10" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="#FF2D3F5D" Margin="0" Grid.Column="4" Grid.Row="4" MinHeight="25" MaxHeight="25" >
                                <ComboBoxItem Content="Inconnu" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                <ComboBoxItem Content="Journalier" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                <ComboBoxItem Content="1 semaine" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                <ComboBoxItem Content="15 jours" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                <ComboBoxItem Content="1 mois" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                <ComboBoxItem Content="2 mois" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                <ComboBoxItem Content="3 mois" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                <ComboBoxItem Content="6 mois" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                <ComboBoxItem Content="1 an" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                <ComboBoxItem Content="2 ans" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                <ComboBoxItem Content="3 ans" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                <ComboBoxItem Content="5 ans" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                <ComboBoxItem Content="Autre..." FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            </ComboBox>
                            <TextBlock  Text="Proch.visite" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="4" Margin="10,0,0,0" Grid.Column="5"/>
                            <DatePicker x:Name="DateProchainVisite" SelectedDate="{Binding ProchainVisite,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" Foreground="#FF2D3F5D" Margin="8,0,0,0" DockPanel.Dock="Right" Grid.Column="6" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Left" Grid.Row="4" Grid.ColumnSpan="2" Width="100" BorderBrush="#FF2D3F5D" />
                            <TextBlock  Text="Examens" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="4" Margin="50,0,0,0" Grid.Column="7" Grid.ColumnSpan="2"/>
                            <TextBox x:Name="txtExamen" ToolTip="Examen" Text="{Binding Examen, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="8" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="35,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" Grid.Row="4" Grid.ColumnSpan="2"  />

                            <Button x:Name="DroiteStatutAccessoires1" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" HorizontalAlignment="Right" Grid.Row="4" Grid.Column="1" />
                            <Button x:Name="DroiteStatutAccessoires2" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" HorizontalAlignment="Right" Grid.Row="5" Grid.Column="1" />

                            <TextBox x:Name="txtAccessoires1Lentille" ToolTip="Double cliquer pour sélectionner un produit" IsEnabled="True" Text="{Binding Accessoires1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="200" Grid.ColumnSpan="4" MinHeight="25" MaxHeight="25" Grid.Row="5" MouseDoubleClick="txtAccessoires1Lentille_MouseDoubleClick" />
                            <TextBox x:Name="txtAccessoires2Lentille" ToolTip="Double cliquer pour sélectionner un produit" IsEnabled="True" Text="{Binding Accessoires2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="200" Grid.ColumnSpan="4" MinHeight="25" MaxHeight="25" Grid.Row="6" MouseDoubleClick="txtAccessoires2Lentille_MouseDoubleClick"  />
                            <TextBox x:Name="txtAccessoiresPrix1Lentille" IsEnabled="False" ToolTip="Prix de vente"  Text="{Binding AccessoiresPrix1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="8" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="5" HorizontalAlignment="Left" TextChanged="txtAccessoiresPrix1Lentille_TextChanged" />
                            <TextBox x:Name="txtAccessoiresQuantite1Lentille" IsEnabled="True" ToolTip="Quantite"  Text="{Binding AccessoiresQuantite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="6" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,25,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="5" Grid.ColumnSpan="2" TextChanged="txtAccessoiresQuantite1Lentille_TextChanged"  />
                            <TextBlock Text="x" Grid.Row="5" Grid.Column="6" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                            <TextBlock Text="=" Grid.Row="5" Grid.Column="7" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                            <TextBox x:Name="txtAccessoiresPrix2Lentille" ToolTip="Prix de vente" IsEnabled="False"  Text="{Binding AccessoiresPrix2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="8" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="6" HorizontalAlignment="Left" TextChanged="txtAccessoiresPrix2Lentille_TextChanged"  />
                            <TextBox x:Name="txtAccessoiresQuantite2Lentille" IsEnabled="True" ToolTip="Quantite"  Text="{Binding AccessoiresQuantite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="6" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,25,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="6" Grid.ColumnSpan="2" TextChanged="txtAccessoiresQuantite2Lentille_TextChanged"  />
                            <TextBlock Text="x" Grid.Row="6" Grid.Column="6" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                            <TextBlock Text="=" Grid.Row="6" Grid.Column="7" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                            <TextBox x:Name="txtPrixTotalAcc1Lentille"  IsEnabled="False"  FontFamily="Tahoma" Grid.Column="9" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="5" TextChanged="txtPrixTotalAcc1Lentille_TextChanged"  />
                            <TextBox x:Name="txtPrixTotalAcc2Lentille"  IsEnabled="False" FontFamily="Tahoma" Grid.Column="9" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="6" TextChanged="txtPrixTotalAcc2Lentille_TextChanged"  />

                            <TextBlock Text="TOTAL" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Row="7" Grid.Column="8"/>
                            <TextBlock Text="Encaissé" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Row="7" Grid.Column="6"/>
                            <TextBox x:Name="txtMontantTotalENCLentille" IsEnabled="False" ToolTip="Versement" Text="{Binding Encaissé, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="7" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="7" />
                            <TextBlock Text="Remise" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Row="7" Grid.Column="4"/>
                            <TextBox x:Name="txtRemiseLentille" IsEnabled="True" ToolTip="Remise" Text="{Binding Remise, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="5" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="7" TextChanged="txtRemiseLentille_TextChanged" />

                            <TextBox x:Name="txtMontantTotalLentille" ToolTip="Prix total" IsEnabled="False" Text="{Binding  MontantTotal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="9" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="7" />
                            <Button x:Name="ValiderLentille" Grid.ColumnSpan="5" Content="Valider" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Grid.Row="8" Margin="0" Click="ValiderLentille_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="AnnulerLentille" Grid.ColumnSpan="5" Content="Échap = ANNULER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FFFF9388" Grid.Column="5" BorderBrush="{x:Null}" Grid.Row="8" Margin="0" Click="AnnulerLentille_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>

                        </Grid>
                    </Grid>
                </Grid>
            </dxc:DXTabItem>
            <dxc:DXTabItem x:Name="Optométrie"  FontSize="14" FontFamily="Tahoma" Header="Optométrie" Margin="0">
                <dxc:DXTabControl x:Name="Opt"  BorderThickness="0" Grid.ColumnSpan="3" Margin="10,0" FontFamily="Tahoma" >
                    <dxc:DXTabItem x:Name="ExOptométrie" FontSize="14" FontFamily="Tahoma" Header="Examens optométriques" Margin="0">
                        <Grid >
                            <Grid.RowDefinitions>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="0.50*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="70"   />
                                    <RowDefinition />
                                    <RowDefinition  />

                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />

                                </Grid.ColumnDefinitions>
                                <DockPanel Margin="10,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Button x:Name="btnNewExamenOptometrie" FontFamily="Tahoma"  Content="" FontSize="12" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Nouveau" MinWidth="35" MinHeight="35" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Click="btnNewExamenOptometrie_Click" >
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624077_add_user.ico"/>
                                        </Button.Background>
                                    </Button>
                                    <Button x:Name="btnSuppExamenOptometrie" FontFamily="Tahoma" Margin="10,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Supprimer" MinWidth="35" MinHeight="35" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}" Click="btnSuppExamenOptometrie_Click" >
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624817_delete.ico"/>
                                        </Button.Background>
                                    </Button>
                                    <Button x:Name="btnEditExamenOptometrie"  Margin="10,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Modifier" MinWidth="35" MinHeight="35" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}" Click="btnEditExamenOptometrie_Click">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624391_edit_user.ico"/>
                                        </Button.Background>

                                    </Button>
                                    <Button x:Name="btnImprimerExamenOptometrie" Margin="10,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"  ToolTip="Imprimer" MinWidth="40" MinHeight="40" Grid.Column="3" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}" Click="btnImprimerExamenOptometrie_Click">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                                        </Button.Background>
                                    </Button>
                                </DockPanel>

                                <Border x:Name="BorderExamenOptometrie" BorderThickness="3" CornerRadius="20" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" Grid.RowSpan="8" BorderBrush="#FB2D3F5D" Margin="0,0,10,0">

                                    <DataGrid x:Name="ExamenOptometrieDatagrid" SelectionMode="Single" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}"  ScrollViewer.VerticalScrollBarVisibility="Auto" GridLinesVisibility="Horizontal"  Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="5" IsReadOnly="True" IsTextSearchCaseSensitive="True" BorderThickness="1" Grid.RowSpan="6" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HeadersVisibility="All" FontSize="12" BorderBrush="{x:Null}" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"  Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MouseDoubleClick="ExamenOptometrieDatagrid_MouseDoubleClick" MouseRightButtonUp="ExamenOptometrieDatagrid_MouseRightButtonUp" >
                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                <Setter Property="MinWidth" Value="0"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="Padding" Value="10,4,4,7"/>
                                                <Setter Property="Margin" Value="0"/>
                                                <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                                <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                                <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                                    <Thumb.Style>
                                                                        <Style TargetType="{x:Type Thumb}">
                                                                            <Setter Property="Width" Value="8"/>
                                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                        </Border>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Thumb.Style>
                                                                </Thumb>
                                                                <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                                    <Thumb.Style>
                                                                        <Style TargetType="{x:Type Thumb}">
                                                                            <Setter Property="Width" Value="8"/>
                                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                        </Border>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Thumb.Style>
                                                                </Thumb>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="SortDirection" Value="{x:Null}">
                                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                                        <Condition Property="SortDirection" Value="{x:Null}"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                                </MultiTrigger>
                                                                <Trigger Property="SortDirection" Value="Ascending">
                                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                                </Trigger>
                                                                <Trigger Property="SortDirection" Value="Descending">
                                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                                    <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                                </Trigger>
                                                                <Trigger Property="DisplayIndex" Value="0">
                                                                    <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>

                                        <DataGrid.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Style.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                                        <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                                        <Setter Property="FontWeight" Value="Bold"></Setter>
                                                        <Setter Property="FontSize" Value="20"></Setter>
                                                        <Setter Property="Background" Value="#CC119EDA" />
                                                        <Setter Property="Foreground" Value="White"></Setter>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.CellStyle>

                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Id"
					Binding="{Binding Id}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                            <DataGridTextColumn Header="Date"
					Binding="{Binding Date, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                            <DataGridTextColumn Header="Docteur"
					Binding="{Binding Docteur}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                            <DataGridTextColumn Header="UserName"
					Binding="{Binding UserName}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />



                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Border>
                            </Grid>
                            <Grid Grid.Column="0" x:Name="GridExamenOptometrique" IsEnabled="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition    />
                                    <RowDefinition  />
                                    <RowDefinition  />
                                    <RowDefinition  />
                                    <RowDefinition  />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition/>
                                    <ColumnDefinition />
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.ColumnSpan="4">
                                    <Grid.RowDefinitions>
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition  />

                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="lbldd" Content="Docteur :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="2" />
                                    <Label x:Name="lblsa1" Content="Observation :" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="2" />
                                    <Label x:Name="lblfad" Content="Date :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />
                                    <DatePicker x:Name="DateCréationExamenOptometrique" SelectedDate="{Binding Date,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" BorderBrush="#FF2D3F5D" />
                                    <DatePicker x:Name="DatePrescriptionExamenOptometrique" SelectedDate="{Binding Prescription,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="5" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" BorderBrush="#FF2D3F5D" />
                                    <TextBox x:Name="txtObservExamenOptometrique" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding Observ, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Row="1" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="0,5" MinWidth="70" Grid.RowSpan="2" Grid.ColumnSpan="2" />
                                    <TextBox x:Name="txtDocteurExamenOptometrique" Text="{Binding Docteur, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="0" MinWidth="70" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                                    <Label  Content="Prescription :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="4" />



                                </Grid>
                                <Grid Grid.ColumnSpan="2" Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}" Margin="0,0,50,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition    />
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition  />

                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition/>

                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="btnTransposerODOG" Grid.Column="7" HorizontalAlignment="Center" VerticalAlignment="Center" Content="+/-" BorderBrush="#FFFFD7BC" ToolTip="Transposer" Click="btnTransposerODOG_Click" />

                                    <TextBlock Text="Sphère" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" />
                                    <TextBlock Text="Cylindre" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1" />
                                    <TextBlock Text="Axe" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1" />
                                    <TextBlock Text="Add." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="1" />
                                    <TextBlock Text="Ac. vis." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="1" />
                                    <TextBlock Text="OD" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" />
                                    <TextBlock x:Name="ODAncienExamenOptometrique" Text="Ancien RX" VerticalAlignment="Center" Grid.Row="2" HorizontalAlignment="Center" />
                                    <TextBox x:Name="txtAncienSphereDroiteExamenOptometrique" FontFamily="Tahoma" Text="{Binding AncienSphereDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Foreground="#FFFF008B" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                                    <TextBox x:Name="txtAncienCylindreDroiteExamenOptometrique" FontFamily="Tahoma" Text="{Binding AncienCylindreDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                                    <TextBox x:Name="txtAncienAxeDroiteExamenOptometrique" FontFamily="Tahoma" Text="{Binding AncienAxeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                                    <TextBox x:Name="txtAncienAddDroiteExamenOptometrique" FontFamily="Tahoma" Text="{Binding AncienAddDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                                    <TextBox x:Name="txtAncienAcExamenOptometrique" FontFamily="Tahoma" Text="{Binding AncienAcDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                                    <TextBlock Text="EP Loin." ToolTip="" VerticalAlignment="Center" Grid.Row="3" HorizontalAlignment="Right" />
                                    <TextBlock Text="Près" ToolTip="" VerticalAlignment="Center" Grid.Row="3" HorizontalAlignment="Center" Grid.Column="2" />
                                    <TextBox x:Name="txtEPLoinDroite" FontFamily="Tahoma" Text="{Binding EPLoinDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                                    <TextBox x:Name="txtPresDroite" FontFamily="Tahoma" Text="{Binding PresDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                                </Grid>
                                <TextBlock x:Name="DIP" Text="DIP" VerticalAlignment="Center" Grid.Row="1" HorizontalAlignment="Center" Grid.Column="1" Grid.ColumnSpan="2" />
                                <TextBox x:Name="txtDIP1" FontFamily="Tahoma" Text="{Binding DIP1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="50" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                                <TextBox x:Name="txtDIP2" FontFamily="Tahoma" Text="{Binding DIP2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="50" VerticalAlignment="Bottom" HorizontalAlignment="Left" />

                                <Grid Grid.ColumnSpan="2" Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" Grid.Column="2" Margin="50,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition    />
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition  />

                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition/>

                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="Sphère" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" />
                                    <TextBlock Text="Cylindre" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1" />
                                    <TextBlock Text="Axe" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1" />
                                    <TextBlock Text="Add." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="1" />
                                    <TextBlock Text="Ac. vis." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="1" />
                                    <TextBlock Text="OD" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" />
                                    <TextBlock   Text="Ancien RX" VerticalAlignment="Center" Grid.Row="2" HorizontalAlignment="Center" />
                                    <TextBox x:Name="txtAncienSphereGaucheExamenOptometrique" FontFamily="Tahoma" Text="{Binding AncienSphereGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Foreground="#FFFF008B" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="0" />
                                    <TextBox x:Name="txtAncienCylindreGaucheExamenOptometrique" FontFamily="Tahoma" Text="{Binding AncienCylindreGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                                    <TextBox x:Name="txtAncienAxeGaucheExamenOptometrique" FontFamily="Tahoma" Text="{Binding AncienAxeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                                    <TextBox x:Name="txtAncienAddGaucheExamenOptometrique" FontFamily="Tahoma" Text="{Binding AncienAddGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                                    <TextBox x:Name="txtAncienAcGaucheExamenOptometrique" FontFamily="Tahoma" Text="{Binding AncienAcGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                                    <TextBlock Text="EP Loin." ToolTip="" VerticalAlignment="Center" Grid.Row="3" HorizontalAlignment="Right" />
                                    <TextBlock Text="Près" ToolTip="" VerticalAlignment="Center" Grid.Row="3" HorizontalAlignment="Center" Grid.Column="2" />
                                    <TextBox x:Name="txtEPLointGauche" FontFamily="Tahoma" Text="{Binding EPLointGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                                    <TextBox x:Name="txtPresGauche" FontFamily="Tahoma" Text="{Binding PresGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                                </Grid>
                                <Grid Grid.Row="2" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.ColumnSpan="10">
                                    <Grid.RowDefinitions>
                                        <RowDefinition    />
                                        <RowDefinition    />
                                        <RowDefinition    />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />

                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="btndpmm" Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center" Content="D/m" BorderBrush="#FFFFD7BC" ToolTip="Conversion Dioptrie/mm" Click="btndpmm_Click" />

                                    <TextBlock   Text="Kératométrie" FontFamily="Tahoma" Foreground="#FFFF008B" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Grid.ColumnSpan="2"/>
                                    <TextBlock  Text="H" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,0,0" Grid.Row="1" Grid.RowSpan="2"/>

                                    <TextBox x:Name="KeratometrieDroiteH1"  FontFamily="Tahoma" Text="{Binding KeratometrieDroiteH1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="5,0,0,0" MaxWidth="40" MinWidth="40" HorizontalAlignment="Left" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" Grid.Column="1" TextChanged="KeratometrieDroiteH1_TextChanged" />
                                    <TextBox x:Name="KeratometrieDroiteH2"  FontFamily="Tahoma" Text="{Binding KeratometrieDroiteH2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="5,0,0,0" MaxWidth="40" MinWidth="40" HorizontalAlignment="Left" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" Grid.Column="1" TextChanged="KeratometrieDroiteH2_TextChanged" />

                                    <TextBlock  Text="V" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2"/>

                                    <TextBox x:Name="KeratometrieDroiteV1"  FontFamily="Tahoma" Text="{Binding KeratometrieDroiteV1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" TextChanged="KeratometrieDroiteV1_TextChanged" />
                                    <TextBox x:Name="KeratometrieDroiteV2"  FontFamily="Tahoma" Text="{Binding KeratometrieDroiteV2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" TextChanged="KeratometrieDroiteV2_TextChanged" />

                                    <TextBlock  Text="Axe" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                                    <TextBox x:Name="KeratometrieDroiteAxe1" FontFamily="Tahoma" Text="{Binding KeratometrieDroiteAxe1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox x:Name="KeratometrieDroiteAxe2" FontFamily="Tahoma" Text="{Binding KeratometrieDroiteAxe2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />

                                    <TextBlock  Text="K.moy." FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,0,0" Grid.Column="3" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                                    <TextBox x:Name="KeratometrieDroitemoy1"  FontFamily="Tahoma" Text="{Binding KeratometrieDroitemoy1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="25,0,0,0" MinWidth="40" MaxWidth="40" FontWeight="Bold" HorizontalAlignment="Right" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox x:Name="KeratometrieDroitemoy2"  FontFamily="Tahoma" Text="{Binding KeratometrieDroitemoy2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="25,0,0,0" MinWidth="40" MaxWidth="40" FontWeight="Bold" HorizontalAlignment="Right" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />

                                    <TextBlock  Text="H" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="6" Grid.Row="1" Grid.RowSpan="2"/>

                                    <TextBox x:Name="KeratometrieGaucheH1"  FontFamily="Tahoma" Text="{Binding KeratometrieGaucheH1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="10,0,0,0" MaxWidth="40" MinWidth="40" Grid.Column="6" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" TextChanged="KeratometrieGaucheH1_TextChanged" />
                                    <TextBox x:Name="KeratometrieGaucheH2"  FontFamily="Tahoma" Text="{Binding KeratometrieGaucheH2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="10,0,0,0" MaxWidth="40" MinWidth="40" Grid.Column="6" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" TextChanged="KeratometrieGaucheH2_TextChanged" />

                                    <TextBlock  Text="V" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="7" Grid.Row="1" Grid.RowSpan="2"/>

                                    <TextBox x:Name="KeratometrieGaucheV1"  FontFamily="Tahoma" Text="{Binding KeratometrieGaucheV1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="7" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="10,0,0,0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" TextChanged="KeratometrieGaucheV1_TextChanged" />
                                    <TextBox x:Name="KeratometrieGaucheV2"  FontFamily="Tahoma" Text="{Binding KeratometrieGaucheV2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="7" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="10,0,0,0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" TextChanged="KeratometrieGaucheV2_TextChanged" />

                                    <TextBlock  Text="Axe" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="8" Grid.Row="1" Grid.RowSpan="2"/>
                                    <TextBox x:Name="KeratometrieGaucheAxe1"  FontFamily="Tahoma" Text="{Binding KeratometrieGaucheAxe1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="8" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="25,0,0,0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox x:Name="KeratometrieGaucheAxe2"  FontFamily="Tahoma" Text="{Binding KeratometrieGaucheAxe2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="8" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="25,0,0,0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />

                                    <TextBlock  Text="K.moy." FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="9" Grid.Row="1" Grid.RowSpan="2"/>
                                    <TextBox x:Name="KeratometrieGauchemoy1"  FontFamily="Tahoma" Text="{Binding KeratometrieGauchemoy1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="9" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" Grid.ColumnSpan="2" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox x:Name="KeratometrieGauchemoy2"  FontFamily="Tahoma" Text="{Binding KeratometrieGauchemoy2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="9" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" Grid.ColumnSpan="2" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />


                                    <TextBlock   Text="AUTO" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Grid.Column="5" Grid.Row="1"/>
                                    <TextBlock   Text="Manuelle" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Grid.Column="5" Grid.Row="2"/>

                                </Grid>
                                <Grid Grid.Row="3" Background="#FFFFD7BC" Grid.ColumnSpan="10">
                                    <Grid.RowDefinitions>
                                        <RowDefinition    />
                                        <RowDefinition    />
                                        <RowDefinition    />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />

                                    </Grid.ColumnDefinitions>
                                    <TextBlock  Text="Sph" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2"/>

                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraOBJSPHDroite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraOBJSPHDroite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />

                                    <TextBlock  Text="Cyl" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                                    <TextBox FontFamily="Tahoma" Text="{Binding RefraOBJCYLDroite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox FontFamily="Tahoma" Text="{Binding RefraOBJCYLDroite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />

                                    <TextBlock  Text="Axe" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,0,0" Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraOBJAxeDroite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="25,0,0,0" MinWidth="40" MaxWidth="40" FontWeight="Bold" HorizontalAlignment="Right" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraOBJAxeDroite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="25,0,0,0" MinWidth="40" MaxWidth="40" FontWeight="Bold" HorizontalAlignment="Right" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />





                                    <TextBlock   Text="Réfractométrie objective" FontFamily="Tahoma" Foreground="#FFFF008B" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Grid.ColumnSpan="3"/>
                                    <TextBlock  Text="Sph" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="7" Grid.Row="1" Grid.RowSpan="2"/>

                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraOBJSPHGauche1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="7" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="10,0,0,0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraOBJSPHGauche2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="7" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="10,0,0,0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />

                                    <TextBlock  Text="Cyl" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="8" Grid.Row="1" Grid.RowSpan="2"/>
                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraOBJCYLGauche1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="8" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="25,0,0,0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraOBJCYLGauche2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="8" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="25,0,0,0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />

                                    <TextBlock  Text="Axe" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="9" Grid.Row="1" Grid.RowSpan="2"/>
                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraOBJAxeGauche1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="9" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" Grid.ColumnSpan="2" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraOBJAxeGauche2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="9" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" Grid.ColumnSpan="2" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />


                                    <TextBlock   Text="AUTO" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Grid.Column="5" Grid.Row="1"/>
                                    <TextBlock   Text="Rétinoscopie" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Grid.Column="4" Grid.Row="2" Grid.ColumnSpan="3"/>
                                </Grid>
                                <Grid Grid.Row="4" Background="#FFFFDF72" Grid.RowSpan="2" Grid.ColumnSpan="4">
                                    <Grid.RowDefinitions>
                                        <RowDefinition    />
                                        <RowDefinition    />
                                        <RowDefinition    />
                                        <RowDefinition    />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />

                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="btnTransposerSub" Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center" Content="+/-" BorderBrush="#FFFFD7BC" ToolTip="Transposer" Click="btnTransposerSub_Click" />

                                    <TextBlock   Text="Réfractométrie subjective" FontFamily="Tahoma" Foreground="#FFFF008B" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Grid.ColumnSpan="3"/>
                                    <TextBlock  Text="RX" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Grid.Row="1" Grid.RowSpan="2"/>

                                    <TextBox x:Name="RefraSubSPHDroite1"  FontFamily="Tahoma" Text="{Binding RefraSubSPHDroite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="5,0,0,0" MaxWidth="40" MinWidth="40" HorizontalAlignment="Right" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox x:Name="RefraSubSPHDroite2"  FontFamily="Tahoma" Text="{Binding RefraSubSPHDroite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="5,0,0,0" MaxWidth="40" MinWidth="40" HorizontalAlignment="Right" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />


                                    <TextBox x:Name="RefraSubCYLDroite1"  FontFamily="Tahoma" Text="{Binding RefraSubCYLDroite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox x:Name="RefraSubCYLDroite2"  FontFamily="Tahoma" Text="{Binding RefraSubCYLDroite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />

                                    <TextBox x:Name="RefraSubAXEDroite1" FontFamily="Tahoma" Text="{Binding RefraSubAXEDroite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox x:Name="RefraSubAXEDroite2" FontFamily="Tahoma" Text="{Binding RefraSubAXEDroite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />

                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraSubADDDroite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" HorizontalAlignment="Center" />
                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraSubADDDroite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" FontWeight="Bold" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />

                                    <TextBlock  Text="AV." FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Column="3" Grid.Row="1" Grid.ColumnSpan="2"/>
                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraSubAVDroite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" FontWeight="Bold" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />

                                    <TextBox x:Name="RefraSubSPHGauche1"  FontFamily="Tahoma" Text="{Binding RefraSubSPHGauche1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MaxWidth="40" MinWidth="40" Grid.Column="6" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" TextChanged="txtKeratometrieGaucheH_TextChanged" Grid.Row="1" HorizontalAlignment="Center" />
                                    <TextBox x:Name="RefraSubSPHGauche2"  FontFamily="Tahoma" Text="{Binding RefraSubSPHGauche2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MaxWidth="40" MinWidth="40" Grid.Column="6" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" HorizontalAlignment="Center" />

                                    <TextBlock  Text="Sph" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Column="6"/>

                                    <TextBox x:Name="RefraSubCYLGauche1"  FontFamily="Tahoma" Text="{Binding RefraSubCYLGauche1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="7" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" HorizontalAlignment="Center" />
                                    <TextBox x:Name="RefraSubCYLGauche2"  FontFamily="Tahoma" Text="{Binding RefraSubCYLGauche2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="7" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" HorizontalAlignment="Center" />

                                    <TextBlock  Text="Cyl" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Column="7"/>
                                    <TextBox x:Name="RefraSubAXEGauche1"  FontFamily="Tahoma" Text="{Binding RefraSubAXEGauche1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="8" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" HorizontalAlignment="Center" />
                                    <TextBox x:Name="RefraSubAXEGauche2"  FontFamily="Tahoma" Text="{Binding RefraSubAXEGauche2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="8" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" HorizontalAlignment="Center" />

                                    <TextBlock  Text="Axe" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Column="8"/>
                                    <TextBlock  Text="Add" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="9"/>

                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraSubADDGauche1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="9" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Left" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraSubADDGauche2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="9" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Left" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />
                                    <TextBlock  Text="A.V." FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Column="9" Grid.Row="1" Grid.ColumnSpan="2"/>
                                    <TextBlock  Text="A.V." FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Column="9" Grid.Row="2" Grid.ColumnSpan="2"/>
                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraSubAVGauche1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="11" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" />
                                    <TextBox  FontFamily="Tahoma" Text="{Binding RefraSubAVGauche2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="11" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="2" />


                                    <TextBlock   Text="Monoculaire" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Grid.Column="4" Grid.Row="1" Grid.ColumnSpan="3"/>
                                    <TextBlock   Text="Binoculaire" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Grid.Column="4" Grid.Row="2" Grid.ColumnSpan="3"/>



                                    <Button x:Name="ValiderExamenOptometrique" Grid.ColumnSpan="5" Content="Valider" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Grid.Row="7" Margin="0" Click="ValiderExamenOptometrique_Click"  >
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>

                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>

                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button x:Name="AnnulerExamenOptometrique" Grid.ColumnSpan="5" Content="Échap = ANNULER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FFFF9388" Grid.Column="5" BorderBrush="{x:Null}" Grid.Row="7" Margin="0" Click="AnnulerExamenOptometrique_Click"  >
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>

                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>

                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                </Grid>
                            </Grid>


                        </Grid>

                    </dxc:DXTabItem>
                    <dxc:DXTabItem x:Name="ExBinoculaire" FontSize="14" FontFamily="Tahoma" Header="Examens binoculaires" Margin="0">
                        <Grid >
                            <Grid.RowDefinitions>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="0.50*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="70"   />
                                    <RowDefinition />
                                    <RowDefinition  />

                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />

                                </Grid.ColumnDefinitions>
                                <DockPanel Margin="10,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Button x:Name="btnNewExamenBinoculaire" FontFamily="Tahoma"  Content="" FontSize="12" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Nouveau" MinWidth="35" MinHeight="35" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Click="btnNewExamenBinoculaire_Click" >
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624077_add_user.ico"/>
                                        </Button.Background>
                                    </Button>
                                    <Button x:Name="btnSuppExamenBinoculaire" FontFamily="Tahoma" Margin="10,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Supprimer" MinWidth="35" MinHeight="35" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}" Click="btnSuppExamenBinoculaire_Click" >
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624817_delete.ico"/>
                                        </Button.Background>
                                    </Button>
                                    <Button x:Name="btnEditExamenBinoculaire"  Margin="10,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Modifier" MinWidth="35" MinHeight="35" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}" Click="btnEditExamenBinoculaire_Click">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624391_edit_user.ico"/>
                                        </Button.Background>

                                    </Button>
                                    <Button x:Name="btnImprimerExamenBinoculaire" Margin="10,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"  ToolTip="Imprimer" MinWidth="40" MinHeight="40" Grid.Column="3" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}" Click="btnImprimerExamenBinoculaire_Click">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                                        </Button.Background>
                                    </Button>
                                </DockPanel>

                                <Border x:Name="BorderExamenBinoculaire" BorderThickness="3" CornerRadius="20" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" Grid.RowSpan="8" BorderBrush="#FB2D3F5D" Margin="0,0,10,0">

                                    <DataGrid x:Name="ExamenBinoculaireDatagrid" SelectionMode="Single" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}"  ScrollViewer.VerticalScrollBarVisibility="Auto" GridLinesVisibility="Horizontal"  Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="5" IsReadOnly="True" IsTextSearchCaseSensitive="True" BorderThickness="1" Grid.RowSpan="6" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HeadersVisibility="All" FontSize="12" BorderBrush="{x:Null}" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"  Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MouseDoubleClick="ExamenBinoculaireDatagrid_MouseDoubleClick" MouseRightButtonUp="ExamenBinoculaireDatagrid_MouseRightButtonUp" >
                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                <Setter Property="MinWidth" Value="0"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="Padding" Value="10,4,4,7"/>
                                                <Setter Property="Margin" Value="0"/>
                                                <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                                <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                                <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                                    <Thumb.Style>
                                                                        <Style TargetType="{x:Type Thumb}">
                                                                            <Setter Property="Width" Value="8"/>
                                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                        </Border>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Thumb.Style>
                                                                </Thumb>
                                                                <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                                    <Thumb.Style>
                                                                        <Style TargetType="{x:Type Thumb}">
                                                                            <Setter Property="Width" Value="8"/>
                                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                        </Border>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Thumb.Style>
                                                                </Thumb>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="SortDirection" Value="{x:Null}">
                                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                                        <Condition Property="SortDirection" Value="{x:Null}"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                                </MultiTrigger>
                                                                <Trigger Property="SortDirection" Value="Ascending">
                                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                                </Trigger>
                                                                <Trigger Property="SortDirection" Value="Descending">
                                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                                    <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                                </Trigger>
                                                                <Trigger Property="DisplayIndex" Value="0">
                                                                    <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>

                                        <DataGrid.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Style.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                                        <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                                        <Setter Property="FontWeight" Value="Bold"></Setter>
                                                        <Setter Property="FontSize" Value="20"></Setter>
                                                        <Setter Property="Background" Value="#CC119EDA" />
                                                        <Setter Property="Foreground" Value="White"></Setter>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.CellStyle>

                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Id"
					Binding="{Binding Id}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                            <DataGridTextColumn Header="Date"
					Binding="{Binding Date, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                            <DataGridTextColumn Header="Remarque"
					Binding="{Binding Remarque}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                            <DataGridTextColumn Header="UserName"
					Binding="{Binding UserName}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />



                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Border>
                            </Grid>
                            <Grid Grid.Column="0" x:Name="GridExamenBinoculaire" IsEnabled="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition    />
                                    <RowDefinition  />
                                    <RowDefinition  />
                                    <RowDefinition  />
                                    <RowDefinition  />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition/>
                                    <ColumnDefinition />
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.ColumnSpan="4">
                                    <Grid.RowDefinitions>
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition  />

                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Label  Content="Remarques :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Row="1" />
                                    <Label Content="Date :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />
                                    <DatePicker  SelectedDate="{Binding Date,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" BorderBrush="#FF2D3F5D" />
                                    <TextBox  TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding Remarque, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="1" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="0,5" MinWidth="70" Grid.RowSpan="2" Grid.ColumnSpan="2" Grid.Row="1" />
                                    <Label Content="Pression intraoculaire :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="3" Grid.ColumnSpan="3" />
                                    <Label  Content="Min. :" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" Grid.Column="3" Margin="5,0,0,0" />
                                    <Label  Content="Max. :" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" Grid.Column="4" />
                                    <Label  Content="Moy. :" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" Grid.Column="5" />
                                    <TextBox x:Name="txtPressionMin" FontFamily="Tahoma" Text="{Binding PressionMin, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                    <TextBox x:Name="txtPressionMax" FontFamily="Tahoma" Text="{Binding PressionMax, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                    <TextBox x:Name="txtPressionMoy" FontFamily="Tahoma" Text="{Binding PressionMoy, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />

                                </Grid>
                                <Grid Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}" Margin="0" Grid.ColumnSpan="4">
                                    <Grid.RowDefinitions>
                                        <RowDefinition    />
                                        <RowDefinition    />
                                        <RowDefinition Height="0.5*" />
                                        <RowDefinition  />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="0.25*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Phorie de loin" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FFFF008B" FontWeight="Bold" Grid.ColumnSpan="3" Margin="10,0,0,0" />
                                    <Label Content="Horizontale" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="1" FontSize="12" Margin="10,0,0,0" />
                                    <Label Content="Verticale" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="3" FontSize="12" Margin="10,0,0,0" />
                                    <Label Content="Δ" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="1" FontSize="20" Grid.Column="1" Margin="20,0,0,0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                    <Label Content="Δ" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="3" FontSize="20" Grid.Column="1" Margin="20,0,0,0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                    <ComboBox x:Name="PhorieLoinHorizontaleString"  SelectedValue="{Binding PhorieLoinHorizontaleString, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="0" Grid.Row="1" MinHeight="27" MaxHeight="0" HorizontalAlignment="Right" Width="70" Height="25" Grid.Column="1" >
                                        <ComboBoxItem Content="" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="Endophorie" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="Exophorie" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />

                                    </ComboBox>
                                    <ComboBox x:Name="PhorieLoinVerticalString"  SelectedValue="{Binding PhorieLoinVerticalString, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="0" Grid.Row="3" MinHeight="27" MaxHeight="0" HorizontalAlignment="Right" Width="70" Height="25" Grid.Column="1" >
                                        <ComboBoxItem Content="" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="Inférieure" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="Supérieure" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />

                                    </ComboBox>

                                    <ComboBox x:Name="PhorieLoinVerticale"  SelectedValue="{Binding PhorieLoinVerticale, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="0" Grid.Row="3" MinHeight="27" MaxHeight="0" HorizontalAlignment="Right" Width="40" Height="25" >
                                        <ComboBoxItem Content="1" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="2" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="3" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="4" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="5" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="6" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="7" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="8" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="6" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="10" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="11" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="12" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="13" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="14" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="15" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="16" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="17" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="18" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="19" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="20" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="21" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="22" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="23" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="24" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="25" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                    </ComboBox>

                                    <ComboBox x:Name="PhorieLoinHorizontale"  SelectedValue="{Binding PhorieLoinHorizontale, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="0" Grid.Row="1" MinHeight="27" MaxHeight="0" HorizontalAlignment="Right" Width="40" Height="25" >
                                        <ComboBoxItem Content="1" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="2" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="3" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="4" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="5" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="6" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="7" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="8" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="6" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="10" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="11" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="12" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="13" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="14" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="15" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="16" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="17" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="18" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="19" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="20" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="21" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="22" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="23" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="24" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="25" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                    </ComboBox>

                                    <Label Content="Accomodation" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FFFF008B" FontWeight="Bold" Grid.ColumnSpan="3" Grid.Column="2" />
                                    <Label Content="AC/A" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="1" FontSize="12" Grid.Column="2" Margin="5,0,0,0" />
                                    <Label Content="Flexibilité" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="3" FontSize="12" Grid.Column="2" Margin="5,0,0,0" />
                                    <TextBox x:Name="txtAccomodationACA" FontFamily="Tahoma" Text="{Binding AccomodationACA, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Right" MinWidth="50" MinHeight="25" />
                                    <TextBox x:Name="txtAccomodationFlexibilite" FontFamily="Tahoma" Text="{Binding AccomodationFlexibilite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Right" MinWidth="50" MinHeight="25" />
                                    <Label Content="cycl/m" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="3" FontSize="12" Grid.Column="3" Margin="5,0,0,0" />
                                    <Label Content="/1" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="1" FontSize="12" Grid.Column="3" Margin="5,0,0,0" />

                                    <Grid Grid.Row="0" Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}" Margin="0" Grid.ColumnSpan="3" Grid.Column="4" Grid.RowSpan="4">
                                        <Grid.RowDefinitions>
                                            <RowDefinition    />
                                            <RowDefinition    />
                                            <RowDefinition  />
                                            <RowDefinition  />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition/>
                                            <ColumnDefinition />
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="Vergence de loin" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FFFF008B" FontWeight="Bold" Grid.ColumnSpan="3" />
                                        <Label Content="Base Int." HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="1" FontSize="12" Margin="5,0,0,0" />
                                        <Label Content="Base Ext." HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="2" FontSize="12" Margin="5,0,0,0" />
                                        <Label Content="Verticale" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="3" FontSize="12" Margin="5,0,0,0" />
                                        <TextBox x:Name="txtVergenceBaseInt1" FontFamily="Tahoma" Text="{Binding VergenceBaseInt1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                        <TextBox x:Name="txtVergenceBaseInt2" FontFamily="Tahoma" Text="{Binding VergenceBaseInt2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                        <TextBox x:Name="txtVergenceBaseExt1" FontFamily="Tahoma" Text="{Binding VergenceBaseExt1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                        <Label Content="/" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="2" FontSize="12" Margin="5,0,0,0" Grid.Column="1" />
                                        <Label Content="/" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="2" FontSize="12" Margin="5,0,0,0" Grid.Column="2" />
                                        <Label Content="/" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" FontSize="12" Margin="5,0,0,0" Grid.Column="2" />
                                        <Label Content="/" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="3" FontSize="12" Margin="5,0,0,0" Grid.Column="2" />
                                        <TextBox x:Name="txtVergenceBaseExt2" FontFamily="Tahoma" Text="{Binding VergenceBaseExt2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                        <TextBox x:Name="txtVergenceBaseExt3" FontFamily="Tahoma" Text="{Binding VergenceBaseExt3, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                        <TextBox x:Name="txtVergenceVerticale1" FontFamily="Tahoma" Text="{Binding VergenceVerticale1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                        <TextBox x:Name="txtVergenceVerticale2" FontFamily="Tahoma" Text="{Binding VergenceVerticale2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />



                                    </Grid>





                                </Grid>
                                <Grid Grid.ColumnSpan="4" Grid.Row="2" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" Margin="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition    />
                                        <RowDefinition    />
                                        <RowDefinition />


                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition/>

                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Phorie de près" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FFFF008B" FontWeight="Bold" Grid.ColumnSpan="3" Margin="10,0,0,0" />
                                    <Label Content="Horizontale" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="1" FontSize="12" Margin="10,0,0,0" />
                                    <ComboBox x:Name="PhoriePresHorizontale"  SelectedValue="{Binding PhoriePresHorizontale, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="0" Grid.Row="1" MinHeight="27" MaxHeight="0" HorizontalAlignment="Right" Width="40" Height="25" >
                                        <ComboBoxItem Content="1" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="2" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="3" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="4" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="5" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="6" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="7" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="8" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="6" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="10" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="11" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="12" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="13" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="14" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="15" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="16" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="17" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="18" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="19" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="20" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="21" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="22" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="23" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="24" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="25" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                    </ComboBox>
                                    <Label Content="Δ" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" FontSize="20" Grid.Column="1" Margin="10,0,0,0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1" />
                                    <ComboBox x:Name="PhoriePresHorizontaleString"  SelectedValue="{Binding PhoriePresHorizontaleString, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="0" Grid.Row="1" MinHeight="27" MaxHeight="0" HorizontalAlignment="Center" Width="70" Height="25" Grid.Column="1" >
                                        <ComboBoxItem Content="" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="Endophorie" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="Exophorie" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />

                                    </ComboBox>
                                    <Label Content="Cover Test" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FFFF008B" FontWeight="Bold" Grid.ColumnSpan="3" Margin="10,0,0,0" Grid.Column="2" />
                                    <Label Content="Loin" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="1" FontSize="12" Margin="10,0,0,0" Grid.Column="2" />
                                    <Label Content="Près" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="2" FontSize="12" Margin="10,0,0,0" Grid.Column="2" />
                                    <ComboBox x:Name="CoverTestLoin"  SelectedValue="{Binding CoverTestLoin, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="30,0,0,0" Grid.Row="1" MinHeight="27" MaxHeight="0" HorizontalAlignment="Center" Width="70" Height="25" Grid.Column="2" >
                                        <ComboBoxItem Content="" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="Endo" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="Exo" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="Ortho" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />

                                    </ComboBox>
                                    <ComboBox x:Name="CoverTestPres"  SelectedValue="{Binding CoverTestPres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="30,0,0,0" Grid.Row="2" MinHeight="27" MaxHeight="0" HorizontalAlignment="Center" Width="70" Height="25" Grid.Column="2" >
                                        <ComboBoxItem Content="" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="Endo" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="Exo" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="Ortho" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                    </ComboBox>
                                    <Label Content="Vergence de près" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FFFF008B" FontWeight="Bold" Grid.ColumnSpan="3" Margin="10,0,0,0" Grid.Column="3" />
                                    <Label Content="Base Int." HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="1" FontSize="12" Margin="5,0,0,0" Grid.Column="3" />
                                    <Label Content="Base Ext." HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="3" Grid.Row="2" FontSize="12" Margin="5,0,0,0" Grid.Column="3" />
                                    <TextBox x:Name="txtVergencePresBaseInt1" FontFamily="Tahoma" Text="{Binding VergencePresBaseInt1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                    <TextBox x:Name="txtVergencePresBaseInt2" FontFamily="Tahoma" Text="{Binding VergencePresBaseInt2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                    <TextBox x:Name="txtVergencePresBaseInt3" FontFamily="Tahoma" Text="{Binding VergencePresBaseInt3, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                    <Label Content="/" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" FontSize="16" Margin="5,0,0,0" Grid.Column="3" />
                                    <Label Content="/" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="2" FontSize="16" Margin="5,0,0,0" Grid.Column="3" />
                                    <Label Content="/" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" FontSize="16" Margin="5,0,0,0" Grid.Column="4" />
                                    <Label Content="/" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="2" FontSize="16" Margin="5,0,0,0" Grid.Column="4" />
                                    <TextBox x:Name="txtVergencePresBaseExt1" FontFamily="Tahoma" Text="{Binding VergencePresBaseExt1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                    <TextBox x:Name="txtVergencePresBaseExt2" FontFamily="Tahoma" Text="{Binding VergencePresBaseExt2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                    <TextBox x:Name="txtVergencePresBaseExt3" FontFamily="Tahoma" Text="{Binding VergencePresBaseExt3, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" />
                                </Grid>
                                <Grid Grid.Row="3" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.ColumnSpan="10">
                                    <Grid.RowDefinitions>
                                        <RowDefinition    />
                                        <RowDefinition    />
                                        <RowDefinition    />
                                        <RowDefinition    />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />

                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Motricité" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFFF008B" FontWeight="Bold" Margin="10,0,0,0" />
                                    <RadioButton x:Name="Motricite1" GroupName="mot" IsChecked="{Binding Motricite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" HorizontalAlignment="Left" />
                                    <RadioButton x:Name="Motricite2" GroupName="mot" IsChecked="{Binding Motricite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" HorizontalAlignment="Center" />
                                    <RadioButton x:Name="Motricite3" GroupName="mot" IsChecked="{Binding Motricite3, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" HorizontalAlignment="Right" />
                                    <RadioButton x:Name="Motricite4" GroupName="mot" IsChecked="{Binding Motricite4, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" HorizontalAlignment="Left" />
                                    <RadioButton x:Name="Motricite5" GroupName="mot" IsChecked="{Binding Motricite5, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" HorizontalAlignment="Right" />
                                    <RadioButton x:Name="Motricite6" GroupName="mot" IsChecked="{Binding Motricite6, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" HorizontalAlignment="Left" />
                                    <RadioButton x:Name="Motricite7" GroupName="mot" IsChecked="{Binding Motricite7, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" HorizontalAlignment="Center" />
                                    <RadioButton x:Name="Motricite8" GroupName="mot" IsChecked="{Binding Motricite8, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" HorizontalAlignment="Right" />
                                    <Label Content="Saccadique" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="2" FontSize="12" Margin="10,0,0,0" Grid.Column="1" />
                                    <ComboBox x:Name="Saccadique"  SelectedValue="{Binding Saccadique, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="0" Grid.Row="2" MinHeight="27" MaxHeight="0" HorizontalAlignment="Center" Width="70" Height="25" Grid.Column="1" Grid.ColumnSpan="2" >
                                        <ComboBoxItem Content="" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="1" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="2" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="3" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="4" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="+ de 4" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />

                                    </ComboBox>
                                    <Label Content="Vision des couleurs" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFFF008B" FontWeight="Bold" Grid.ColumnSpan="3" Margin="10,0,0,0" Grid.Column="3" Grid.RowSpan="2" />
                                    <CheckBox x:Name="chkVisionDesCouleursRouge" IsChecked="{Binding VisionDesCouleursRouge, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Content="Rouge" FontFamily="Tahoma" FontSize="14" Grid.Row="2" HorizontalAlignment="Left" Margin="0" Grid.Column="3" Grid.ColumnSpan="2" VerticalAlignment="Center" />
                                    <CheckBox x:Name="chkVisionDesCouleursVert" IsChecked="{Binding VisionDesCouleursVert, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Content="Vert" FontFamily="Tahoma" FontSize="14" Grid.Row="2" HorizontalAlignment="Center" Margin="0" Grid.Column="3" Grid.ColumnSpan="2" VerticalAlignment="Center" />
                                    <CheckBox x:Name="chkVisionDesCouleursBleu" IsChecked="{Binding VisionDesCouleursBleu, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Content="Bleu" FontFamily="Tahoma" FontSize="14" Grid.Row="2" HorizontalAlignment="Right" Margin="0" Grid.Column="3" Grid.ColumnSpan="2" VerticalAlignment="Center" />
                                    <CheckBox x:Name="chkVisionDesCouleursChromatopsie" IsChecked="{Binding VisionDesCouleursChromatopsie, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Content="Chromatopsie" FontFamily="Tahoma" FontSize="14" Grid.Row="2" HorizontalAlignment="Center" Margin="0" Grid.Column="5" VerticalAlignment="Center" />



                                </Grid>
                                <Grid Grid.Row="4" Background="#FFFFD7BC" Grid.RowSpan="2" Grid.ColumnSpan="4">
                                    <Grid.RowDefinitions>
                                        <RowDefinition    />
                                        <RowDefinition    />
                                        <RowDefinition    />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition />

                                    </Grid.ColumnDefinitions>
                                    <Label Content="Autres informations" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FFFF008B" FontWeight="Bold" Grid.ColumnSpan="3" Margin="10,0,0,0" />
                                    <Label Content="Oeil dominant" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="2" Grid.Row="1" FontSize="12" Margin="5,0,0,0" />
                                    <Label Content="Stéréoscopie" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="2" Grid.Row="1" FontSize="12" Margin="5,0,0,0" Grid.Column="3" />
                                    <Label Content="PPC" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="2" Grid.Row="1" FontSize="12" Margin="5,0,0,0" Grid.Column="6" />
                                    <Label Content="cm" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" FontSize="12" Margin="5,0,0,0" Grid.Column="7" />
                                    <Label Content="Pupiles" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" FontSize="12" Margin="5,0,0,0" Grid.Column="8" />
                                    <ComboBox x:Name="AutreInformationsOeilDominant"  SelectedValue="{Binding AutreInformationsOeilDominant, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="0" Grid.Row="1" MinHeight="27" MaxHeight="0" HorizontalAlignment="Center" Width="70" Height="25" Grid.Column="1" Grid.ColumnSpan="2" >
                                        <ComboBoxItem Content="" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="Droit" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="Gauche" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />

                                    </ComboBox>
                                    <ComboBox x:Name="AutreInformationsStereoscopie"  SelectedValue="{Binding AutreInformationsStereoscopie, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="0" Grid.Row="1" MinHeight="27" MaxHeight="0" HorizontalAlignment="Center" Width="70" Height="25" Grid.Column="4" Grid.ColumnSpan="2" >
                                        <ComboBoxItem Content="" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                                        <ComboBoxItem Content="> 60 arc" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                        <ComboBoxItem Content="&lt; 60 arc" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />

                                    </ComboBox>

                                    <TextBox x:Name="txtAutreInformationsPPC" FontFamily="Tahoma" Text="{Binding AutreInformationsPPC, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" Grid.ColumnSpan="2" />
                                    <TextBox x:Name="txtAutreInformationsPupiles" FontFamily="Tahoma" Text="{Binding AutreInformationsPupiles, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Grid.Column="8" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="50" MinHeight="25" Grid.ColumnSpan="3" Margin="50,0,10,0" />




                                    <Button x:Name="ValiderExamenBinoculaire" Grid.ColumnSpan="5" Content="Valider" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Grid.Row="7" Margin="0" Click="ValiderExamenBinoculaire_Click"  >
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>

                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>

                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button x:Name="AnnulerExamenBinoculaire" Grid.ColumnSpan="5" Content="Échap = ANNULER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FFFF9388" Grid.Column="5" BorderBrush="{x:Null}" Grid.Row="7" Margin="0" Click="AnnulerExamenBinoculaire_Click"  >
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>

                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>

                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                </Grid>
                            </Grid>



                        </Grid>
                    </dxc:DXTabItem>
                    <dxc:DXTabItem x:Name="Adalenti"  FontSize="14" FontFamily="Tahoma" Header="Adaptation lentilles" Margin="0">
                        <Grid x:Name="AdaptationGrid" >
                            <Grid.RowDefinitions>
                                <RowDefinition  />
                                <RowDefinition Height="70" />
                                <RowDefinition Height="30" />
                            </Grid.RowDefinitions>
                            <Grid Width="1050" Height="403" MinWidth="1050" MinHeight="403" MaxWidth="1050" MaxHeight="403" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" >
                                <Grid.RowDefinitions>
                                    <RowDefinition  />
                                    <RowDefinition />
                                    <RowDefinition  />

                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition  />
                                    <ColumnDefinition  />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Row="1" Grid.RowSpan="2" Margin="0,36,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition  />
                                        <RowDefinition />
                                        <RowDefinition  />
                                        <RowDefinition  />
                                        <RowDefinition />
                                        <RowDefinition  />
                                        <RowDefinition  />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <RadioButton x:Name="FrequenceDroiteLent" GroupName="frequence" IsChecked="{Binding FrequenceDroiteLent, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Lent" />
                                    <RadioButton x:Name="FrequenceDroiteNormal" GroupName="frequence" IsChecked="{Binding FrequenceDroiteNormal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Normal" Grid.Column="1" />
                                    <RadioButton x:Name="FrequenceDroiteFrequent" GroupName="frequence" IsChecked="{Binding FrequenceDroiteFrequent, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Fréquent" Grid.Column="2" />

                                    <RadioButton x:Name="AmplitudeDroiteComplet" GroupName="Amp" IsChecked="{Binding AmplitudeDroiteComplet, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Complet" Grid.Column="1" Grid.Row="1" />
                                    <RadioButton x:Name="AmplitudeDroiteIncomplet" GroupName="Amp" IsChecked="{Binding AmplitudeDroiteIncomplet, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Incompl." Grid.Column="2" Grid.Row="1" />

                                    <RadioButton x:Name="TonusDroiteFort" GroupName="Tonus" IsChecked="{Binding TonusDroiteFort, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Fort" Grid.Row="2" />
                                    <RadioButton x:Name="TonusDroiteNormal" GroupName="Tonus" IsChecked="{Binding TonusDroiteNormal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Normal" Grid.Column="1" Grid.Row="2" />
                                    <RadioButton x:Name="TonusDroiteFaible" GroupName="Tonus" IsChecked="{Binding TonusDroiteFaible, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Faible" Grid.Column="2" Grid.Row="2" />

                                    <RadioButton x:Name="ReactionDroiteRapide" GroupName="Rea" IsChecked="{Binding ReactionDroiteRapide, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Rapide" Grid.Row="3" />
                                    <RadioButton x:Name="ReactionDroiteNormal" GroupName="Rea" IsChecked="{Binding ReactionDroiteNormal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Normale" Grid.Column="1" Grid.Row="3" />
                                    <RadioButton x:Name="ReactionDroiteLente" GroupName="Rea" IsChecked="{Binding ReactionDroiteLente, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Lente" Grid.Column="2" Grid.Row="3" />
                                    <TextBox x:Name="txtSecretionDroitemm" FontFamily="Tahoma" Text="{Binding SecretionDroitemm, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" MinWidth="50" MinHeight="25" Width="50" Height="25" VerticalAlignment="Center" Margin="30,0,0,0" Grid.Column="2" Grid.Row="4" />
                                    <Label Content="mm." Grid.Row="4" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="2" />
                                    <Label Content="sec." Grid.Row="5" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="2" />
                                    <TextBox x:Name="txtButDroitesec" FontFamily="Tahoma" Text="{Binding ButDroitesec, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" MinWidth="50" MinHeight="25" Width="50" Height="25" VerticalAlignment="Center" Margin="30,0,0,0" Grid.Column="2" Grid.Row="5" />
                                    <TextBox x:Name="txtEtatDroiteVal" FontFamily="Tahoma" Text="{Binding EtatDroiteVal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="50" MinHeight="25" Height="25" VerticalAlignment="Center" Margin="30,0" Grid.Row="6" Grid.ColumnSpan="3" />

                                </Grid>
                                <Grid Grid.Row="1" Grid.RowSpan="2" Margin="0,36,0,0" Grid.Column="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition  />
                                        <RowDefinition />
                                        <RowDefinition  />
                                        <RowDefinition  />
                                        <RowDefinition />
                                        <RowDefinition  />
                                        <RowDefinition  />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <RadioButton x:Name="FrequenceGaucheLent" GroupName="frequenceGauche" IsChecked="{Binding FrequenceGaucheLent, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Lent" Grid.Column="2" />
                                    <RadioButton x:Name="FrequenceGaucheNormal" GroupName="frequenceGauche" IsChecked="{Binding FrequenceGaucheNormal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Normal" Grid.Column="1" />
                                    <RadioButton x:Name="FrequenceGaucheFrequent" GroupName="frequenceGauche" IsChecked="{Binding FrequenceGaucheFrequent, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Fréquent" />

                                    <RadioButton x:Name="AmplitudeGaucheComplet" GroupName="AmpGauche" IsChecked="{Binding AmplitudeGaucheComplet, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Complet" Grid.Column="1" Grid.Row="1" />
                                    <RadioButton x:Name="AmplitudeGaucheIncomplet" GroupName="AmpGauche" IsChecked="{Binding AmplitudeGaucheIncomplet, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Incompl." Grid.Row="1" />

                                    <RadioButton x:Name="TonusGaucheFort" GroupName="TonusGauche" IsChecked="{Binding TonusGaucheFort, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Fort" Grid.Row="2" Grid.Column="2" />
                                    <RadioButton x:Name="TonusGaucheNormal" GroupName="TonusGauche" IsChecked="{Binding TonusGaucheNormal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Normal" Grid.Column="1" Grid.Row="2" />
                                    <RadioButton x:Name="TonusGaucheFaible" GroupName="TonusGauche" IsChecked="{Binding TonusGaucheFaible, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Faible" Grid.Row="2" />

                                    <RadioButton x:Name="ReactionGaucheRapide" GroupName="ReaGauche" IsChecked="{Binding ReactionGaucheRapide, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Rapide" Grid.Row="3" Grid.Column="2" />
                                    <RadioButton x:Name="ReactionGaucheNormal" GroupName="ReaGauche" IsChecked="{Binding ReactionGaucheNormal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Normale" Grid.Column="1" Grid.Row="3" />
                                    <RadioButton x:Name="ReactionGaucheLente" GroupName="ReaGauche" IsChecked="{Binding ReactionGaucheLente, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Lente" Grid.Row="3" />
                                    <TextBox x:Name="txtSecretionGauchemm" FontFamily="Tahoma" Text="{Binding SecretionGauchemm, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" MinWidth="50" MinHeight="25" Width="50" Height="25" VerticalAlignment="Center" Margin="30,0,0,0" Grid.Row="4" />
                                    <Label Content="mm." Grid.Row="4" HorizontalAlignment="Right" VerticalAlignment="Center" />
                                    <Label Content="sec." Grid.Row="5" HorizontalAlignment="Right" VerticalAlignment="Center" />
                                    <TextBox x:Name="txtButGauchesec" FontFamily="Tahoma" Text="{Binding ButGauchesec, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" MinWidth="50" MinHeight="25" Width="50" Height="25" VerticalAlignment="Center" Margin="30,0,0,0" Grid.Row="5" />
                                    <TextBox x:Name="txtEtatGaucheVal" FontFamily="Tahoma" Text="{Binding EtatGaucheVal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="50" MinHeight="25" Height="25" VerticalAlignment="Center" Margin="30,0" Grid.Row="6" Grid.ColumnSpan="3" />

                                </Grid>
                                <Grid Grid.Row="1" Grid.RowSpan="2" Margin="0,36,0,0" Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition  />
                                        <RowDefinition />
                                        <RowDefinition  />
                                        <RowDefinition  />
                                        <RowDefinition  />
                                        <RowDefinition />
                                        <RowDefinition  />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Label Content="FREQUENCE DE CILLEMENT" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="3" FontWeight="Bold" />
                                    <Label Content="AMPLITUDE DE CILLEMENT" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="3" FontWeight="Bold" />
                                    <Label Content="TONUS PALPEBRAL" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="3" FontWeight="Bold" />
                                    <Label Content="REACTION PULPILLAIRE" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="3" FontWeight="Bold" />
                                    <Label Content="SECRETION LACRIMALE" Grid.Row="4" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="3" FontWeight="Bold" />
                                    <Label Content="B.U.T" Grid.Row="5" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="3" FontWeight="Bold" />
                                    <Label Content="ETAT DES PAUPIERES" Grid.Row="6" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="3" FontWeight="Bold" />

                                </Grid>
                                <Ellipse Height="134" Width="350" Fill="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                                <Ellipse Fill="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" Width="134" Height="134" MinWidth="134" MinHeight="134" MaxWidth="134" MaxHeight="134"/>
                                <Ellipse Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Width="67" Height="67" MinWidth="67" MinHeight="67" MaxWidth="67" MaxHeight="67"/>
                                <Line X1="0" Y1="0" X2="360" Y2="00" Stroke="Red" StrokeThickness="4" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,100,67" Width="260" MinWidth="260" MaxWidth="260" />
                                <Line X1="0" Y1="0" X2="360" Y2="00" Stroke="Red" StrokeThickness="4" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,67,100,0" Width="260" MinWidth="260" MaxWidth="260" />
                                <Label Content="Mesures" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" Grid.ColumnSpan="3" FontWeight="Bold" />

                                <Line X1="0" Y1="0" X2="0" Y2="360" Stroke="Red" StrokeThickness="2" HorizontalAlignment="Center" Margin="0,67,134,100" Grid.RowSpan="2" Height="360" MinHeight="360" MaxHeight="360" VerticalAlignment="Center" />
                                <Line X1="0" Y1="0" X2="0" Y2="360" Stroke="Red" StrokeThickness="2" HorizontalAlignment="Center" Margin="134,67,0,100" Grid.RowSpan="2" Height="360" MinHeight="360" MaxHeight="360" />
                                <TextBox x:Name="txtDroiteVal2" FontFamily="Tahoma" Text="{Binding DroiteVal2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" Width="50" Height="25" VerticalAlignment="Top" Margin="0,10,0,0" />
                                <TextBox x:Name="txtDroiteVal1" FontFamily="Tahoma" Text="{Binding DroiteVal1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" MinWidth="50" MinHeight="25" Width="50" Height="25" VerticalAlignment="Center" Margin="30,0,0,0" Grid.Column="1" />

                                <Ellipse Height="134" Width="350" Fill="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Grid.Column="2" />
                                <Ellipse Fill="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" Width="134" Height="134" MinWidth="134" MinHeight="134" MaxWidth="134" MaxHeight="134" Grid.Column="2"/>
                                <Ellipse Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Width="67" Height="67" MinWidth="67" MinHeight="67" MaxWidth="67" MaxHeight="67" Grid.Column="2"/>
                                <Line X1="0" Y1="0" X2="360" Y2="00" Stroke="Red" StrokeThickness="4" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="100,0,0,67" Width="260" MinWidth="260" MaxWidth="260" Grid.Column="1" />
                                <Line X1="0" Y1="0" X2="360" Y2="00" Stroke="Red" StrokeThickness="4" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="100,67,0,0" Width="260" MinWidth="260" MaxWidth="260" Grid.Column="1" />
                                <Line X1="0" Y1="0" X2="0" Y2="360" Stroke="Red" StrokeThickness="2" HorizontalAlignment="Center" Margin="0,67,134,100" Grid.RowSpan="2" Height="360" MinHeight="360" MaxHeight="360" VerticalAlignment="Center" Grid.Column="2" />
                                <Line X1="0" Y1="0" X2="0" Y2="360" Stroke="Red" StrokeThickness="2" HorizontalAlignment="Center" Margin="134,67,0,100" Grid.RowSpan="2" Height="360" MinHeight="360" MaxHeight="360" Grid.Column="2" />
                                <TextBox x:Name="txtGaucheVal2" FontFamily="Tahoma" Text="{Binding GaucheVal2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" MinWidth="50" MinHeight="25" Width="50" Height="25" VerticalAlignment="Top" Margin="0,10,0,0" Grid.Column="2" />
                                <TextBox x:Name="txtGaucheVal1" FontFamily="Tahoma" Text="{Binding GaucheVal1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Right" MinWidth="50" MinHeight="25" Width="50" Height="25" VerticalAlignment="Center" Margin="0,0,30,0" Grid.Column="1" />
                            </Grid>
                            <Label Content="Remarques:" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold" />
                            <TextBox x:Name="txtRemarques" TextWrapping="Wrap" FontFamily="Tahoma" Text="{Binding Remarques, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="50" MinHeight="25" Margin="100,10" Grid.Column="1" Grid.Row="1" />

                            <Button x:Name="ValiderAdaptation" Grid.ColumnSpan="5" Content="Valider" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Grid.Row="7" Margin="0" Click="ValiderAdaptation_Click"  >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>

                        </Grid>
                    </dxc:DXTabItem>
                    <dxc:DXTabItem x:Name="AnamneseGrid"  FontSize="14" FontFamily="Tahoma" Header="Anamnèse" Margin="0">
                        <Grid Grid.Row="0" Grid.RowSpan="2" Margin="0" Grid.Column="2" Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}">
                            <Grid.RowDefinitions>
                                <RowDefinition  />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                                <RowDefinition  />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition Height="30"  />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="300" />
                                <ColumnDefinition />
                                <ColumnDefinition />


                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Label  Content="Lentilles précédentes :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />
                            <RadioButton x:Name="LentillePrOui" GroupName="ouinon" IsChecked="{Binding LentillePrOui, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" FontFamily="Tahoma" Content="Oui" Grid.Column="1" />
                            <RadioButton x:Name="LentillePrNon" GroupName="ouinon" IsChecked="{Binding LentillePrNon, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Non" Grid.Column="1" />
                            <RadioButton x:Name="LentillePrRigides" GroupName="RigSou" IsChecked="{Binding LentillePrRigides, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" FontFamily="Tahoma" Content="Rigides" Grid.Column="2" />
                            <RadioButton x:Name="LentillePrSouples" GroupName="RigSou" IsChecked="{Binding LentillePrSouples, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Souples" Grid.Column="2" />
                            <RadioButton x:Name="LentillePrSucces" GroupName="Succ" IsChecked="{Binding LentillePrSucces, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" FontFamily="Tahoma" Content="Succès" Grid.Column="3" />
                            <RadioButton x:Name="LentillePrSansSucces" GroupName="Succ" IsChecked="{Binding LentillePrSansSucces, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" Content="Sans succès" Grid.Column="3" />
                            <Label Content="Motivation" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Margin="10,0,0,0" Grid.Row="1" />
                            <Label Content="Profession" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Margin="10,0,0,0" Grid.Row="2" />
                            <Label Content="Sport/hobby" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Margin="10,0,0,0" Grid.Row="3" />
                            <Label Content="Etat de santé" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Margin="10,0,0,0" Grid.Row="4" />
                            <Label Content="Médicaments" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Margin="10,0,0,0" Grid.Row="5" />
                            <Label Content="Allergies" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Margin="10,0,0,0" Grid.Row="6" />
                            <Label Content="Référé par" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Margin="10,0,0,0" Grid.Row="7" />
                            <Label Content="Autres" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Margin="10,0,0,0" Grid.Row="8" />

                            <TextBox x:Name="txtMotivation" TextWrapping="Wrap" FontFamily="Tahoma" Text="{Binding Motivation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="50" MinHeight="25" Margin="10,5,50,5" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="4" />
                            <TextBox x:Name="txtProfession" TextWrapping="Wrap" FontFamily="Tahoma" Text="{Binding Profession, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="50" MinHeight="25" Margin="10,5,50,5" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4" />
                            <TextBox x:Name="txtSportHobby" TextWrapping="Wrap" FontFamily="Tahoma" Text="{Binding SportHobby, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="50" MinHeight="25" Margin="10,5,50,5" Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="4" />
                            <TextBox x:Name="txtEtatDeSante" TextWrapping="Wrap" FontFamily="Tahoma" Text="{Binding EtatDeSante, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="50" MinHeight="25" Margin="10,5,50,5" Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="4" />
                            <TextBox x:Name="txtMedicalments" TextWrapping="Wrap" FontFamily="Tahoma" Text="{Binding Medicalments, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="50" MinHeight="25" Margin="10,5,50,5" Grid.Column="1" Grid.Row="5" Grid.ColumnSpan="4" />
                            <TextBox x:Name="txtAllergies" TextWrapping="Wrap" FontFamily="Tahoma" Text="{Binding Allergies, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="50" MinHeight="25" Margin="10,5,50,5" Grid.Column="1" Grid.Row="6" Grid.ColumnSpan="4" />
                            <TextBox x:Name="txtReferePar" TextWrapping="Wrap" FontFamily="Tahoma" Text="{Binding ReferePar, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="50" MinHeight="25" Margin="10,5,50,5" Grid.Column="1" Grid.Row="7" Grid.ColumnSpan="4" />
                            <TextBox x:Name="txtAutres" TextWrapping="Wrap" FontFamily="Tahoma" Text="{Binding Autres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="50" MinHeight="25" Margin="10,5,50,5" Grid.Column="1" Grid.Row="8" Grid.ColumnSpan="4" Grid.RowSpan="2" />
                            <Button x:Name="ValiderAnam" Grid.ColumnSpan="5" Content="Valider" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Grid.Row="10" Margin="0" Click="ValiderAnam_Click"  >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>

                        </Grid>
                    </dxc:DXTabItem>
                    <dxc:DXTabItem x:Name="PaintGrid"  FontSize="14" FontFamily="Tahoma" Header="Schéma" Margin="0">
                        <Grid x:Name="GridPaint">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="152*" />
                                <RowDefinition Height="40" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.5*"/>
                                <ColumnDefinition  />
                                <ColumnDefinition Width="0.5*" />
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="commandeGrid" IsEnabled="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition  />
                                    <ColumnDefinition  />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Remarque:" Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="#FB2D3F5D" Margin="0,5,0,0" FontSize="14" FontWeight="Bold" />
                                <dxe:TextEdit x:Name="txtcomentaire" TextWrapping="Wrap"   Text="{Binding Commentaire, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,25,10,10" Foreground="#FB2D3F5D" Grid.ColumnSpan="3"/>
                                <GroupBox Margin="0" BorderThickness="2,2,2,2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Header="Stylus Mode" Grid.Row="1" Grid.ColumnSpan="3" Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}">
                                    <StackPanel Orientation="Horizontal">
                                        <RadioButton Margin="4,2,0,0" Name="radInk" Content="Pinceau" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Click="rad_Click" Tag="{x:Static InkCanvasEditingMode.Ink}" FontFamily="Arial" Background="{x:Null}" BorderBrush="#FF003366"/>
                                        <RadioButton Margin="4,2,0,0" Name="radErasePoint" Content="Effaceur" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Click="rad_Click" Tag="{x:Static InkCanvasEditingMode.EraseByPoint}" FontFamily="Arial" Background="{x:Null}" BorderBrush="#FF003366"/>
                                        <RadioButton Margin="4,2,0,0" Name="radEraseByStroke" Content="Effaceur par ligne" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Click="rad_Click"  Tag="{x:Static InkCanvasEditingMode.EraseByStroke}" FontFamily="Arial" Background="{x:Null}" BorderBrush="#FF003366"/>
                                        <RadioButton Margin="4,2,0,0" Name="radSelect" Content="Sélection" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Click="rad_Click"  Tag="{x:Static InkCanvasEditingMode.Select}" FontFamily="Arial" Background="{x:Null}" BorderBrush="#FF003366"/>
                                    </StackPanel>
                                </GroupBox>
                                <GroupBox x:Name="expB" Header="Taille pinceau" VerticalContentAlignment="Top"  HorizontalContentAlignment="Stretch"  BorderThickness="2,1,1,1" Foreground="#FFFFFBFB" Height="73" Margin="0" Grid.Row="2" Grid.ColumnSpan="3" Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}">

                                    <StackPanel Orientation="Horizontal">
                                        <RadioButton Style="{DynamicResource StrokeThicknessRadioButtonStyle}" Content="RadioButton" x:Name="b_2" FontSize="2" d:LayoutOverrides="Height" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Click="penSize_Click"/>
                                        <RadioButton Style="{DynamicResource StrokeThicknessRadioButtonStyle}" Content="RadioButton" x:Name="b_4" FontSize="4" d:LayoutOverrides="Height" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Click="penSize_Click"/>
                                        <RadioButton Style="{DynamicResource StrokeThicknessRadioButtonStyle}" Content="RadioButton" x:Name="b_6" FontSize="6" d:LayoutOverrides="Height" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Click="penSize_Click"/>
                                        <RadioButton Style="{DynamicResource StrokeThicknessRadioButtonStyle}" Content="RadioButton" x:Name="b_8" FontSize="8" d:LayoutOverrides="Height" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Click="penSize_Click"/>
                                        <RadioButton Style="{DynamicResource StrokeThicknessRadioButtonStyle}" Content="RadioButton" x:Name="b_10" FontSize="10" d:LayoutOverrides="Height" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Click="penSize_Click"/>
                                        <RadioButton Style="{DynamicResource StrokeThicknessRadioButtonStyle}" Content="RadioButton" x:Name="b_12" FontSize="12" d:LayoutOverrides="Height" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Click="penSize_Click"/>
                                        <RadioButton Style="{DynamicResource StrokeThicknessRadioButtonStyle}" Content="RadioButton" x:Name="b_14" FontSize="14" d:LayoutOverrides="Height" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Click="penSize_Click"/>
                                    </StackPanel>
                                </GroupBox>
                                <Button x:Name="btnSave" Margin="5,5,5,5" Width="48" Height="48" Content="=" Style="{DynamicResource PulseButton}" FontFamily="Wingdings" FontSize="28" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" ToolTip="Save" HorizontalAlignment="Center" Background="{x:Null}" Grid.Row="3" Click="btnSave_Click"/>
                                <Button x:Name="btnStylusSetting" Margin="5,5,5,5" Width="48" Height="48" Content="@" Style="{DynamicResource PulseButton}" FontFamily="Webdings" FontSize="28" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" ToolTip="Stylus Settings" Grid.Row="3" Grid.Column="1" Background="{x:Null}" Click="btnStylusSetting_Click"/>
                                <Button x:Name="btnLoadImage" Margin="5,5,5,5" Width="48" Height="48" Content="1" Style="{DynamicResource PulseButton}" FontFamily="Wingdings" FontSize="28" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" ToolTip="Open" Click="btnLoadImage_Click" Background="{x:Null}" Grid.Row="3" Grid.Column="2"/>

                            </Grid>

                            <DockPanel Margin="10,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Column="2">
                                <Button x:Name="btnNewPaint" FontFamily="Tahoma"  Content="" FontSize="12" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Nouveau" MinWidth="35" MinHeight="35" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Click="btnNewPaint_Click" >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Style.BasedOn>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                    <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                    <Setter Property="MinHeight" Value="25"/>
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                    <Setter Property="Padding" Value="5,6"/>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Grid>
                                                                    <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">

                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Style.BasedOn>
                                        </Style>
                                    </Button.Style>
                                    <Button.Background>
                                        <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624077_add_user.ico"/>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="btnSuppPaint" FontFamily="Tahoma" Margin="10,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Supprimer" MinWidth="35" MinHeight="35" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}" Click="btnSuppPaint_Click" >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Style.BasedOn>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                    <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                    <Setter Property="MinHeight" Value="25"/>
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                    <Setter Property="Padding" Value="5,6"/>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Grid>
                                                                    <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">

                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Style.BasedOn>
                                        </Style>
                                    </Button.Style>
                                    <Button.Background>
                                        <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624817_delete.ico"/>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="btnEditPaint"  Margin="10,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Modifier" MinWidth="35" MinHeight="35" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}" MouseDoubleClick="PaintDatagrid_MouseDoubleClick" Click="btnEditPaint_Click">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Style.BasedOn>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                    <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                    <Setter Property="MinHeight" Value="25"/>
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                    <Setter Property="Padding" Value="5,6"/>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Grid>
                                                                    <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">

                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Style.BasedOn>
                                        </Style>
                                    </Button.Style>
                                    <Button.Background>
                                        <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624391_edit_user.ico"/>
                                    </Button.Background>

                                </Button>
                                <Button x:Name="btnImprimerPaint" Margin="10,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"  ToolTip="Imprimer" MinWidth="40" MinHeight="40" Grid.Column="3" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Style.BasedOn>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                    <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                    <Setter Property="MinHeight" Value="25"/>
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                    <Setter Property="Padding" Value="5,6"/>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Grid>
                                                                    <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">

                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Style.BasedOn>
                                        </Style>
                                    </Button.Style>
                                    <Button.Background>
                                        <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                                    </Button.Background>
                                </Button>
                            </DockPanel>
                            <Border x:Name="BorderPaint" BorderThickness="3" CornerRadius="20" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FB2D3F5D" Margin="0,50,10,0" Grid.Column="2" Grid.RowSpan="2">

                                <DataGrid x:Name="PaintDatagrid" SelectionMode="Single" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}"  ScrollViewer.VerticalScrollBarVisibility="Auto" GridLinesVisibility="Horizontal"  Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="5" IsReadOnly="True" IsTextSearchCaseSensitive="True" BorderThickness="1" Grid.RowSpan="6" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HeadersVisibility="All" FontSize="12" BorderBrush="{x:Null}" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"  Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MouseDoubleClick="PaintDatagrid_MouseDoubleClick" >
                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="10,4,4,7"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                            <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                            <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="SortDirection" Value="{x:Null}">
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="SortDirection" Value="{x:Null}"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="SortDirection" Value="Ascending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                            </Trigger>
                                                            <Trigger Property="SortDirection" Value="Descending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                                <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                            </Trigger>
                                                            <Trigger Property="DisplayIndex" Value="0">
                                                                <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>

                                    <DataGrid.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                                    <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                                    <Setter Property="FontWeight" Value="Bold"></Setter>
                                                    <Setter Property="FontSize" Value="20"></Setter>
                                                    <Setter Property="Background" Value="#CC119EDA" />
                                                    <Setter Property="Foreground" Value="White"></Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.CellStyle>

                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Id"
					Binding="{Binding Id}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                        <DataGridTextColumn Header="Date"
					Binding="{Binding Date, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                        <DataGridTextColumn Header="Remarque"
					Binding="{Binding Remarque}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                        <DataGridTextColumn Header="UserName"
					Binding="{Binding UserName}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />



                                    </DataGrid.Columns>
                                </DataGrid>
                            </Border>


                            <Grid x:Name="Inkcanvasgrid" IsEnabled="False" Grid.Column="1" Grid.ColumnSpan="1">
                                <InkCanvas HorizontalAlignment="Left" Cursor="Cross"  Margin="0" Name="inkCanvas1" VerticalAlignment="Top"  Gesture="inkCanvas1_Gesture"  MouseMove="inkCanvas1_MouseMove" MinHeight="500" MaxWidth="500" MaxHeight="500" MinWidth="500" />
                            </Grid>

                            <Button x:Name="ValiderPaint" Content="Valider" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Grid.Row="1" Margin="0,0,350,0" Click="ValiderPaint_Click" Grid.ColumnSpan="2"  >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="AnnulerPaint" Content="Échap = ANNULER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FFFF9388" Grid.Column="1" BorderBrush="{x:Null}" Grid.Row="1" Margin="180,0,0,0" Click="AnnulerPaint_Click"  >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <Button Content="Clear" Height="23" HorizontalAlignment="Left" Margin="150,63,0,0" Name="button1" 
                VerticalAlignment="Top" Width="75" Click="button1_Click" Grid.Row="1"/>
                            <Button Content="Close" Height="23" HorizontalAlignment="Left" Margin="231,63,0,0" Name="button2"
                VerticalAlignment="Top" Width="75" Click="button2_Click" Grid.Row="1"/>

                        </Grid>
                    </dxc:DXTabItem>
                </dxc:DXTabControl>
            </dxc:DXTabItem>
            <dxc:DXTabItem x:Name="tabfichepatient"  FontSize="14" FontFamily="Tahoma" Header="Historique des Ventes/réglements" Margin="0">
                <Grid x:Name="RéglementGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.7*" />
                        <RowDefinition   />
                        <RowDefinition  />
                        <RowDefinition   />
                        <RowDefinition   />
                        <RowDefinition  />
                        <RowDefinition   />
                        <RowDefinition   />
                        <RowDefinition   />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <DockPanel  Margin="15,0,0,0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                        <Button x:Name="btnNewRéglement" Content="" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" ToolTip="Nouveau Réglement" MinWidth="30" MinHeight="30" Click="btnNewRéglement_Click" BorderBrush="{x:Null}" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                            <Button.Background>
                                <ImageBrush ImageSource="/NewOptics;component/Images/47105.png"/>
                            </Button.Background>
                        </Button>
                        <Button x:Name="btnImprimmerFacture1" Content="" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" ToolTip="Imprimer Facture" MinWidth="30" MinHeight="30" BorderBrush="{x:Null}" Click="btnImprimmerFacture1_Click" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                            <Button.Background>
                                <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                            </Button.Background>
                        </Button>

                        <TextBlock x:Name="labelVisite" Text="Trouver :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="20,0,0,0" FontFamily="Tahoma" Foreground="#FB2D3F5D" />
                        <dxe:TextEdit x:Name="txtRechercheVisite" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,0,0,0" Width="200" FontFamily="Tahoma" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FB2D3F5D" EditValueChanged="txtRechercheVisite_EditValueChanged" />

                    </DockPanel>
                    <Border x:Name="windowBorderDatagridVisiteApayer" BorderThickness="3" CornerRadius="20" Grid.Row="1" Grid.RowSpan="4" BorderBrush="#FB2D3F5D" Margin="0,0,10,0" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">

                        <DataGrid x:Name="HistoriqueDesDataGrid" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}"  ScrollViewer.VerticalScrollBarVisibility="Auto" GridLinesVisibility="Horizontal"  Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="7,5,10,13" IsReadOnly="True" IsTextSearchCaseSensitive="True" BorderThickness="1" Grid.RowSpan="6" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HeadersVisibility="All" FontSize="12" SelectionChanged="HistoriqueDesDataGrid_SelectionChanged" BorderBrush="{x:Null}" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SelectionMode="Extended"  Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="Padding" Value="10,4,4,7"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                    <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                    <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                    <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="Width" Value="8"/>
                                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                    <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="Width" Value="8"/>
                                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                            <Condition Property="SortDirection" Value="{x:Null}"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="SortDirection" Value="Ascending">
                                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                    </Trigger>
                                                    <Trigger Property="SortDirection" Value="Descending">
                                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                        <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                    </Trigger>
                                                    <Trigger Property="DisplayIndex" Value="0">
                                                        <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>

                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                            <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                            <Setter Property="FontWeight" Value="Bold"></Setter>
                                            <Setter Property="FontSize" Value="20"></Setter>
                                            <Setter Property="Background" Value="#CC119EDA" />
                                            <Setter Property="Foreground" Value="White"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>

                            <DataGrid.Columns>


                                <DataGridTextColumn Header="Date"
					Binding="{Binding date, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                <DataGridTextColumn Header="N° Facture"
					Binding="{Binding nfact}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" Foreground="#FF451571" FontWeight="Bold" />

                                <DataGridTextColumn Header="net"
					Binding="{Binding net}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" Foreground="#FFFF008B" FontWeight="Bold" />
                                <DataGridTextColumn Header="Reste"
					Binding="{Binding reste}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" Foreground="#FF451571" FontWeight="Bold" />
                                <DataGridTextColumn Header="Ht"
					Binding="{Binding ht}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" Foreground="#FFFF008B" />
                                <DataGridTextColumn Header="Tva"
					Binding="{Binding tva}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" Foreground="#FF451571" />
                                <DataGridTextColumn Header="Remise"
					Binding="{Binding remise}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" Foreground="#FFFF008B" />
                                <DataGridTextColumn Header="modep"
					Binding="{Binding modep}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" Foreground="#FF451571" />
                                <DataGridTextColumn Header="oper"
					Binding="{Binding oper}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                <DataGridTextColumn Header="timbre"
					Binding="{Binding timbre}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                <DataGridTextColumn Header="Versement"
					Binding="{Binding versement}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />

                                <DataGridTextColumn Header="bcom"
					Binding="{Binding bcom}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                <DataGridTextColumn Header="heure"
					Binding="{Binding heure}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />

                                <DataGridTextColumn Header="Code client"
					Binding="{Binding codeclient}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                <DataGridTextColumn Header="Raison"
					Binding="{Binding raison}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                <DataGridTextColumn Header="soldé"
					Binding="{Binding soldé}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                <DataGridTextColumn Header="cle"
					Binding="{Binding cle}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                <DataGridTextColumn Header="Date échéance"
					Binding="{Binding dateecheance, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                <DataGridTextColumn Header="echeance"
					Binding="{Binding echeance}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />

                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                    <Border x:Name="windowBorderDatagridVisiteApayedsdsr" BorderThickness="3" CornerRadius="20" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="5" Grid.RowSpan="3" BorderBrush="#FB2D3F5D" Margin="0,0,10,0">

                        <DataGrid x:Name="dETAILDatagrid" Margin="10" CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="True" IsReadOnly="True"  IsTextSearchCaseSensitive="True" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" HeadersVisibility="All" AutoGenerateColumns="False" FontWeight="Bold" FontSize="12" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" GridLinesVisibility="Horizontal" FontFamily="Tahoma" Grid.Row="5" Grid.ColumnSpan="1"  Grid.RowSpan="2"   Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"  >
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="Padding" Value="10,4,4,7"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                    <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                    <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                    <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="Width" Value="8"/>
                                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                    <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="Width" Value="8"/>
                                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                            <Condition Property="SortDirection" Value="{x:Null}"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="SortDirection" Value="Ascending">
                                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                    </Trigger>
                                                    <Trigger Property="SortDirection" Value="Descending">
                                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                        <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                    </Trigger>
                                                    <Trigger Property="DisplayIndex" Value="0">
                                                        <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                            <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                            <Setter Property="FontWeight" Value="Bold"></Setter>
                                            <Setter Property="FontSize" Value="20"></Setter>
                                            <Setter Property="Background" Value="#CC119EDA" />
                                            <Setter Property="Foreground" Value="White"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Date"
					Binding="{Binding date, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                <DataGridTextColumn Header="N° Facture"
					Binding="{Binding nfact}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" Foreground="#FF451571" FontWeight="Bold" />
                                <DataGridTextColumn Header="code"
             Binding="{Binding codeprod}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="100" Foreground="#FF451571" />
                                <DataGridTextColumn Header="design"
             Binding="{Binding design}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="200" Foreground="#FF451571" />
                                <DataGridTextColumn Header="Prix vente" IsReadOnly="False"
             Binding="{Binding privente, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" Foreground="#FFFF008B" />
                                <DataGridTextColumn Header="Prix d'achat" IsReadOnly="False"
             Binding="{Binding previent, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" Foreground="#FFFF008B" />
                                <DataGridTextColumn Header="Quantite" IsReadOnly="False"
             Binding="{Binding quantite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" Foreground="#FFFF008B" />
                                <DataGridTextColumn Header="total" IsReadOnly="True"
             Binding="{Binding Total, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"    MinWidth="50" Foreground="#FFFF008B" />

                                <DataGridTextColumn Header="Péremption" IsReadOnly="True"
					Binding="{Binding perempt,StringFormat={}\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"   MinWidth="50" Foreground="#FF451571" />
                                <DataGridTextColumn Header="lot" IsReadOnly="True"
             Binding="{Binding lot, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" Foreground="#FF451571" />
                                <DataGridTextColumn Header="N° serie" IsReadOnly="True"
             Binding="{Binding serialnumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="120" Foreground="#FF451571" />



                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                    <Label x:Name="LabelTotalAregler" Content="Total dû:" Grid.Row="8" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0" FontSize="14" FontWeight="Bold" Foreground="#FB2D3F5D" FontFamily="Tahoma" />
                    <Label x:Name="txtLabelTotalAregler" Content="9999.99" Grid.Row="8" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="110,0,0,0" FontSize="16" FontWeight="Bold" FontFamily="Tahoma" Foreground="#FFFF008B" />
                    <Label x:Name="LabelTotalVersement" Content="Versement:" Grid.Row="8" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,20,0,0" FontSize="14" FontWeight="Bold" Foreground="#FB2D3F5D" FontFamily="Tahoma" />
                    <Label x:Name="txtLabelTotalversement" Content="9999.99" Grid.Row="8" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="120,20,0,0" FontSize="16" FontWeight="Bold" FontFamily="Tahoma" Foreground="#FFFF008B" />
                    <Label x:Name="LabelTotalReste" Content="Reste :" Grid.Row="8" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="55,0,0,0" FontSize="14" FontWeight="Bold" Foreground="#FB2D3F5D" FontFamily="Tahoma" />
                    <Label x:Name="txtLabelTotalReste" Content="9999.99" Grid.Row="8" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="200,0,0,0" FontSize="16" FontWeight="Bold" FontFamily="Tahoma" Foreground="#FFFF008B" />
                    <GridSplitter x:Name="grids" MinWidth="5" Grid.RowSpan="8" ResizeDirection="Columns" Background="#FB2D3F5D" />
                    <Button x:Name="btnversmentmultiple" IsEnabled="False" Grid.Row="8" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Margin="20,0,0,0" Width="200" Background="#FB2D3F5D" BorderBrush="{x:Null}" FontFamily="Tahoma" Content="Versement Multiple" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Style.BasedOn>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                        <Setter Property="Padding" Value="5,6"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Grid>
                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">

                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                        </Trigger>
                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Style.BasedOn>
                            </Style>
                        </Button.Style>
                    </Button>
                    <DockPanel Margin="0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" Grid.Column="1">

                        <Button x:Name="btnSuppVersement" FontFamily="Segoe UI" Margin="20,0,0,0" Click="btnSuppVersement_Click" Content="" Foreground="Goldenrod" ToolTip="Supprimer" MinWidth="30" MinHeight="30" Height="30" Width="30" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                            <Button.BorderBrush>
                                <ImageBrush/>
                            </Button.BorderBrush>
                            <Button.Background>
                                <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624817_delete.ico"/>
                            </Button.Background>
                        </Button>

                        <Button x:Name="btnImprimerVersement" Margin="20,0,0,0" Content="" Foreground="Goldenrod" Click="btnImprimerVersement_Click" ToolTip="Imprimer" MinWidth="30" MinHeight="30" BorderBrush="{x:Null}" Width="30" Height="30">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                            <Button.Background>
                                <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                            </Button.Background>
                        </Button>
                        <TextBlock x:Name="label" Text="Trouver :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="20,0,0,0" FontFamily="Tahoma" Foreground="#FB2D3F5D" />
                        <dxe:TextEdit x:Name="txtRechercheVersement" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,0,0,0" Width="200" FontFamily="Tahoma" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FB2D3F5D" EditValueChanged="txtRechercheVersement_EditValueChanged" />
                        <Label x:Name="labelPatientVersement" Foreground="Goldenrod"  VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="22" FontWeight="Bold"/>
                    </DockPanel>




                    <Border x:Name="windowBorderDatagriddepeiement" BorderThickness="3" CornerRadius="20" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" Grid.RowSpan="7" BorderBrush="#FB2D3F5D" Grid.Column="1">

                        <DataGrid x:Name="VersementPatientDataGrid" Foreground="#FF451571"  ScrollViewer.VerticalScrollBarVisibility="Auto" GridLinesVisibility="Horizontal"  Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="7,5,7,13" IsReadOnly="True" IsTextSearchCaseSensitive="True" Grid.Column="1" Grid.RowSpan="6" BorderBrush="{x:Null}" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" LoadingRow="VersementPatientDataGrid_LoadingRow" FontWeight="Bold" FontSize="16">
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="Padding" Value="10,4,4,7"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                    <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                    <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                    <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="Width" Value="8"/>
                                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                    <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="Width" Value="8"/>
                                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                            <Condition Property="SortDirection" Value="{x:Null}"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="SortDirection" Value="Ascending">
                                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                    </Trigger>
                                                    <Trigger Property="SortDirection" Value="Descending">
                                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                        <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                    </Trigger>
                                                    <Trigger Property="DisplayIndex" Value="0">
                                                        <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                            <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                            <Setter Property="FontWeight" Value="Bold"></Setter>
                                            <Setter Property="FontSize" Value="20"></Setter>
                                            <Setter Property="Background" Value="#CC119EDA" />
                                            <Setter Property="Foreground" Value="White"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Code"
             Binding="{Binding Id}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="17" >
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="10,4,4,7"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                            <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                            <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="SortDirection" Value="{x:Null}">
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="SortDirection" Value="{x:Null}"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="SortDirection" Value="Ascending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                            </Trigger>
                                                            <Trigger Property="SortDirection" Value="Descending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                                <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                            </Trigger>
                                                            <Trigger Property="DisplayIndex" Value="0">
                                                                <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="date"
             Binding="{Binding date}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="17" >
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="10,4,4,7"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                            <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                            <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="SortDirection" Value="{x:Null}">
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="SortDirection" Value="{x:Null}"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="SortDirection" Value="Ascending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                            </Trigger>
                                                            <Trigger Property="SortDirection" Value="Descending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                                <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                            </Trigger>
                                                            <Trigger Property="DisplayIndex" Value="0">
                                                                <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Versement"
             Binding="{Binding montant}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="17" >
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="10,4,4,7"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                            <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                            <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="SortDirection" Value="{x:Null}">
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="SortDirection" Value="{x:Null}"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="SortDirection" Value="Ascending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                            </Trigger>
                                                            <Trigger Property="SortDirection" Value="Descending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                                <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                            </Trigger>
                                                            <Trigger Property="DisplayIndex" Value="0">
                                                                <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Paiement"
             Binding="{Binding paiem}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="17" >
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="10,4,4,7"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                            <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                            <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="SortDirection" Value="{x:Null}">
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="SortDirection" Value="{x:Null}"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="SortDirection" Value="Ascending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                            </Trigger>
                                                            <Trigger Property="SortDirection" Value="Descending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                                <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                            </Trigger>
                                                            <Trigger Property="DisplayIndex" Value="0">
                                                                <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Oper"
             Binding="{Binding oper}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="17" >
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="10,4,4,7"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                            <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                            <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="SortDirection" Value="{x:Null}">
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="SortDirection" Value="{x:Null}"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="SortDirection" Value="Ascending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                            </Trigger>
                                                            <Trigger Property="SortDirection" Value="Descending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                                <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                            </Trigger>
                                                            <Trigger Property="DisplayIndex" Value="0">
                                                                <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="dates"
             Binding="{Binding dates}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="17" >
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="10,4,4,7"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                            <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                            <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="SortDirection" Value="{x:Null}">
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="SortDirection" Value="{x:Null}"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="SortDirection" Value="Ascending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                            </Trigger>
                                                            <Trigger Property="SortDirection" Value="Descending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                                <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                            </Trigger>
                                                            <Trigger Property="DisplayIndex" Value="0">
                                                                <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Compte Débité"
             Binding="{Binding banque}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="17" >
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="10,4,4,7"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                            <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                            <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="SortDirection" Value="{x:Null}">
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="SortDirection" Value="{x:Null}"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="SortDirection" Value="Ascending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                            </Trigger>
                                                            <Trigger Property="SortDirection" Value="Descending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                                <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                            </Trigger>
                                                            <Trigger Property="DisplayIndex" Value="0">
                                                                <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="nfact"
             Binding="{Binding nfact}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="17" >
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="10,4,4,7"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                            <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                            <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="SortDirection" Value="{x:Null}">
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="SortDirection" Value="{x:Null}"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="SortDirection" Value="Ascending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                            </Trigger>
                                                            <Trigger Property="SortDirection" Value="Descending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                                <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                            </Trigger>
                                                            <Trigger Property="DisplayIndex" Value="0">
                                                                <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Montant Facture"
             Binding="{Binding amontant}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="17" >
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="10,4,4,7"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                            <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                            <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="SortDirection" Value="{x:Null}">
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="SortDirection" Value="{x:Null}"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="SortDirection" Value="Ascending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                            </Trigger>
                                                            <Trigger Property="SortDirection" Value="Descending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                                <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                            </Trigger>
                                                            <Trigger Property="DisplayIndex" Value="0">
                                                                <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="cle"
             Binding="{Binding cle}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="17" >
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="10,4,4,7"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                            <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                            <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Width" Value="8"/>
                                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="SortDirection" Value="{x:Null}">
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="SortDirection" Value="{x:Null}"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="SortDirection" Value="Ascending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                            </Trigger>
                                                            <Trigger Property="SortDirection" Value="Descending">
                                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                                <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                            </Trigger>
                                                            <Trigger Property="DisplayIndex" Value="0">
                                                                <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>

                            </DataGrid.Columns>
                        </DataGrid>

                    </Border>

                </Grid>

            </dxc:DXTabItem>
            <dxc:DXTabItem x:Name="tagfhdfent"  FontSize="14" FontFamily="Tahoma" Header="Historique des Ventes par produit" Margin="0">
                <Grid x:Name="RéglementGfdsfdsrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.7*" />
                        <RowDefinition   />
                        <RowDefinition  />
                        <RowDefinition   />
                        <RowDefinition   />
                        <RowDefinition  />
                        <RowDefinition   />
                        <RowDefinition   />
                        <RowDefinition   />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <DockPanel  Margin="15,6,6,4" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" Grid.ColumnSpan="2">
                        <TextBlock x:Name="labelVfdgisite" Text="Trouver :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="20,0,0,0" FontFamily="Tahoma" Foreground="#FB2D3F5D" />
                        <dxe:TextEdit x:Name="txtRecherdfgcheVisite" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,0,0,0" Width="200"  FontFamily="Tahoma" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FB2D3F5D" EditValueChanged="txtRecherdfgcheVisite_EditValueChanged" />
                        <dxc:SimpleButton x:Name="bntchargementhistoriqueproduit" Content="Charger l'historique" Margin="10,0,0,0" Click="bntchargementhistoriqueproduit_Click" />

                    </DockPanel>
                    <Border x:Name="windowBordefsgrDatagridVisiteApayedsdsr" BorderThickness="3" CornerRadius="20" Grid.Row="1" Grid.RowSpan="7" BorderBrush="#FB2D3F5D" Margin="0,0,10,0" Grid.ColumnSpan="2">

                        <DataGrid x:Name="ProduitHistoriquevente" Margin="10" CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="True" IsReadOnly="True"  IsTextSearchCaseSensitive="True" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" HeadersVisibility="All" AutoGenerateColumns="False" FontWeight="Bold" FontSize="16" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" GridLinesVisibility="Horizontal" FontFamily="Tahoma" Grid.Row="5" Grid.ColumnSpan="1"  Grid.RowSpan="2"   Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"  >
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="Padding" Value="10,4,4,7"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                    <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                    <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                    <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="Width" Value="8"/>
                                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                    <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="Width" Value="8"/>
                                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                            <Condition Property="SortDirection" Value="{x:Null}"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="SortDirection" Value="Ascending">
                                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                    </Trigger>
                                                    <Trigger Property="SortDirection" Value="Descending">
                                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                        <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                    </Trigger>
                                                    <Trigger Property="DisplayIndex" Value="0">
                                                        <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                            <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                            <Setter Property="FontWeight" Value="Bold"></Setter>
                                            <Setter Property="FontSize" Value="20"></Setter>
                                            <Setter Property="Background" Value="#CC119EDA" />
                                            <Setter Property="Foreground" Value="White"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="N° facture"
             Binding="{Binding nfact}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="100" Foreground="#FF451571" FontSize="14" />
                                <DataGridTextColumn Header="code"
             Binding="{Binding codeprod}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="100" Foreground="#FF451571" FontSize="14" />
                                <DataGridTextColumn Header="design"
             Binding="{Binding design}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="200" Foreground="#FF451571" FontSize="14" />
                                <DataGridTextColumn Header="Prix d'achat" IsReadOnly="False"
             Binding="{Binding previent, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" Foreground="#FFFF008B" FontSize="14" />
                                <DataGridTextColumn Header="Prix vente" IsReadOnly="False"
             Binding="{Binding privente, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" Foreground="#FFFF008B" FontSize="14" />
                                <DataGridTextColumn Header="Quantite" IsReadOnly="False"
             Binding="{Binding quantite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" Foreground="#FFFF008B" FontSize="14" />
                                <DataGridTextColumn Header="tva" IsReadOnly="True"
             Binding="{Binding tva, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"    MinWidth="50" Foreground="#FFFF008B" FontSize="14" />

                                <DataGridTextColumn Header="total" IsReadOnly="True"
             Binding="{Binding Total, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"    MinWidth="50" Foreground="#FFFF008B" FontSize="14" />
                                <DataGridTextColumn Header="remise" IsReadOnly="True"
             Binding="{Binding remise, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"    MinWidth="50" Foreground="#FFFF008B" FontSize="14" />

                                <DataGridTextColumn Header="Péremption" IsReadOnly="True"
					Binding="{Binding perempt,StringFormat={}\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"   MinWidth="50" Foreground="#FF451571" FontSize="14" />
                                <DataGridTextColumn Header="lot" IsReadOnly="True"
             Binding="{Binding lot, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" Foreground="#FF451571" FontSize="14" />
                                <DataGridTextColumn Header="N° serie" IsReadOnly="False"
             Binding="{Binding serialnumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="120" Foreground="#FF451571" FontSize="14" />
                                <DataGridTextColumn Header="Code fournisseur" IsReadOnly="False"
             Binding="{Binding cf, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="120" Foreground="#FF451571" FontSize="14" />
                                <DataGridTextColumn Header="Fournisseur" IsReadOnly="False"
             Binding="{Binding Fournisseur, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="120" Foreground="#FF451571" FontSize="14" />
                                <DataGridTextColumn Header="Facture Fourn" IsReadOnly="False"
             Binding="{Binding ff, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="120" Foreground="#FF451571" FontSize="14" />


                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>

                </Grid>
            </dxc:DXTabItem>
            <dx:DXTabItem x:Name="tabgalerieimage" FontSize="14" Header="Galerie Image" FontFamily="Tahoma" Visibility="Visible">
                <Grid x:Name="ImagerieGrid1">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition   />
                        <RowDefinition  />
                        <RowDefinition   />
                        <RowDefinition   />
                        <RowDefinition  />
                        <RowDefinition   />
                        <RowDefinition   />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="11*"/>
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="7*"/>

                    </Grid.ColumnDefinitions>
                    <DockPanel Margin="15,0,6,4" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" Grid.Column="1" Height="53" Grid.ColumnSpan="2">
                        <Button x:Name="btnNewDicom1" FontFamily="Tahoma"  Content="" FontSize="8" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Width="30" Click="btnNewDicom1_Click" ToolTip="Visiualiser" Height="30" MinWidth="30" MinHeight="30" >
                            <Button.Background>
                                <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624077_add_user.ico"/>
                            </Button.Background>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                            <Button.BorderBrush>
                                <ImageBrush/>
                            </Button.BorderBrush>

                        </Button>
                        <Button x:Name="btnSuppDicom1" FontFamily="Tahoma" Margin="20,0,0,0"  Content="" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" FontSize="8" Click="btnSuppDicom1_Click" ToolTip="Supprimer" MinHeight="30" MinWidth="30" Height="30" Width="30" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                            <Button.BorderBrush>
                                <ImageBrush/>
                            </Button.BorderBrush>
                            <Button.Background>
                                <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624817_delete.ico"/>
                            </Button.Background>
                        </Button>

                        <Button x:Name="btnImprimer1" Margin="20,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"  FontFamily="Tahoma" FontSize="8" Width="35" Click="btnImprimer1_Click" ToolTip="Imprimer" MinHeight="35" MinWidth="35" Height="35">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                            <Button.Background>
                                <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                            </Button.Background>
                            <Button.BorderBrush>
                                <ImageBrush/>
                            </Button.BorderBrush>
                        </Button>

                        <Button x:Name="btndéfiltrer1" Margin="20,0,0,0" Content="" HorizontalAlignment="Left"  FontFamily="Tahoma" FontSize="8" Width="30"  Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Click="btndéfiltrer1_Click" ToolTip="Transfer vers le serveur" Height="30" MinHeight="30">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                            <Button.Background>
                                <ImageBrush ImageSource="/NewOptics;component/Images/avoir.ico"/>
                            </Button.Background>
                            <Button.BorderBrush>
                                <ImageBrush/>
                            </Button.BorderBrush>
                        </Button>

                    </DockPanel>
                    <DataGrid x:Name="DatagridImage1" AutoGenerateColumns="False" Grid.Column="1" Grid.RowSpan="7" Margin="10,0,0,0" FontFamily="Tahoma" IsReadOnly="True" Grid.Row="1" Grid.ColumnSpan="2" MouseDoubleClick="DatagridImage1_MouseDoubleClick" >
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="10,4,4,7"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                                <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="SortDirection" Value="{x:Null}">
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="SortDirection" Value="{x:Null}"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                </MultiTrigger>
                                                <Trigger Property="SortDirection" Value="Ascending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                </Trigger>
                                                <Trigger Property="SortDirection" Value="Descending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                    <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                </Trigger>
                                                <Trigger Property="DisplayIndex" Value="0">
                                                    <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id"
             Binding="{Binding Id}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="10,4,4,7"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                        <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                        <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="SortDirection" Value="{x:Null}"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="SortDirection" Value="Ascending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                        </Trigger>
                                                        <Trigger Property="SortDirection" Value="Descending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                            <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                        </Trigger>
                                                        <Trigger Property="DisplayIndex" Value="0">
                                                            <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Date"
             Binding="{Binding AcquisitionDate, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="10,4,4,7"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                        <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                        <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="SortDirection" Value="{x:Null}"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="SortDirection" Value="Ascending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                        </Trigger>
                                                        <Trigger Property="SortDirection" Value="Descending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                            <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                        </Trigger>
                                                        <Trigger Property="DisplayIndex" Value="0">
                                                            <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Fichier"
             Binding="{Binding NomFichier}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="10,4,4,7"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                        <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                        <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="SortDirection" Value="{x:Null}"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="SortDirection" Value="Ascending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                        </Trigger>
                                                        <Trigger Property="SortDirection" Value="Descending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                            <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                        </Trigger>
                                                        <Trigger Property="DisplayIndex" Value="0">
                                                            <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="ChemainFichier"
             Binding="{Binding ChemainFichier}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="10,4,4,7"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                        <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                        <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="SortDirection" Value="{x:Null}"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="SortDirection" Value="Ascending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                        </Trigger>
                                                        <Trigger Property="SortDirection" Value="Descending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                            <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                        </Trigger>
                                                        <Trigger Property="DisplayIndex" Value="0">
                                                            <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Raison"
             Binding="{Binding Raison}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="10,4,4,7"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                        <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                        <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="SortDirection" Value="{x:Null}"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="SortDirection" Value="Ascending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                        </Trigger>
                                                        <Trigger Property="SortDirection" Value="Descending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                            <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                        </Trigger>
                                                        <Trigger Property="DisplayIndex" Value="0">
                                                            <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="IdClient"
             Binding="{Binding IdClient}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="10,4,4,7"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                        <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                        <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="SortDirection" Value="{x:Null}"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="SortDirection" Value="Ascending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                        </Trigger>
                                                        <Trigger Property="SortDirection" Value="Descending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                            <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                        </Trigger>
                                                        <Trigger Property="DisplayIndex" Value="0">
                                                            <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>





                        </DataGrid.Columns>
                    </DataGrid>

                    <Image Margin="5" x:Name="imgPhotod" Grid.RowSpan="8"  />

                </Grid>
            </dx:DXTabItem>

        </dxc:DXTabControl>
    </Grid>
</dx:DXWindow>
