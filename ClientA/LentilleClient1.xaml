<dx:DXWindow x:Class="NewOptics.ClientA.LentilleClient"
        xmlns:local="clr-namespace:NewOptics.ClientA"
         xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
         dx:ThemeManager.ThemeName="LightGray"
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
         xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
         xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
         xmlns:System="clr-namespace:System;assembly=mscorlib"
         xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
         xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"  

   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
   mc:Ignorable="d"
        Title="Monture Client"  ResizeMode="CanResize"  Background="{x:Null}" ShowIcon="True" ShowTitle="True"  WindowStyle="ThreeDBorderWindow"  Icon="/NewOptics;component/Dent6.ico" WindowStartupLocation="CenterScreen"  BorderThickness="0"  BorderBrush="#FFA020F0" ShowInTaskbar="True" Width="1150"  >
    <Window.Resources>
        <Style x:Key="PulseButton" TargetType="{x:Type Button}">
            <Style.BasedOn>
                <Style TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border>
                                                <Rectangle SnapsToDevicePixels="True" Stroke="#FF000000" StrokeDashArray="1 2" StrokeThickness="1" Margin="4,4,4,4"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <SolidColorBrush/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="3,3,3,3"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="0,0,1,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="OnMouseEnter1">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.3"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.3"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.4"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Border RenderTransformOrigin="0.5,0.5" x:Name="border" Width="Auto" Height="Auto" BorderBrush="{x:Null}" BorderThickness="5,5,5,5" CornerRadius="4,4,4,4" Background="{x:Null}">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                    <ContentPresenter Width="Auto" Height="Auto" RenderTransformOrigin="0.403,0.5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="border">
                                        <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                                    <Trigger Property="IsKeyboardFocused" Value="True"/>
                                    <Trigger Property="Button.IsDefaulted" Value="True"/>
                                    <Trigger Property="IsPressed" Value="True"/>
                                    <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.BasedOn>
        </Style>

        <Style
    x:Key="StrokeThicknessRadioButtonStyle"
    TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground"
      Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background"
      Value="{StaticResource CheckRadioFillNormal}"/>
            <Setter Property="BorderBrush"
      Value="{StaticResource CheckRadioStrokeNormal}"/>
            <Setter Property="BorderThickness"
      Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid Width="40" Height="38">
                            <Rectangle Opacity="0" Stroke="#FF979797" RadiusX="2" RadiusY="2" HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="rectangle" VerticalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.55,1" StartPoint="0.55,0.026">
                                        <GradientStop Color="#FF979797" Offset="0"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Ellipse Fill="#FF000000" Stroke="{x:Null}" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="{TemplateBinding FontSize}" Height="{TemplateBinding FontSize}"/>
                            <Rectangle Opacity="0" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="rectangle_Copy" Margin="1.749,0.763,1.964,2.765">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.558,0.989" StartPoint="0.55,0.026">
                                        <GradientStop Color="#91FFFFFF" Offset="0"/>
                                        <GradientStop Color="#16FFFFFF" Offset="0.447"/>
                                        <GradientStop Color="#89FFFFFF" Offset="0.288"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" TargetName="rectangle" Value="0.995"/>
                                <Setter Property="Opacity" TargetName="rectangle_Copy" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="rectangle">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.55,1" StartPoint="0.55,0.026">
                                            <GradientStop Color="#FF438A7E" Offset="0"/>
                                            <GradientStop Color="#FFD6F2ED" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Opacity" TargetName="rectangle" Value="1"/>
                                <Setter Property="Opacity" TargetName="rectangle_Copy" Value="1"/>
                                <Setter Property="Stroke" TargetName="rectangle" Value="#FF3C6A62"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Stroke" TargetName="rectangle" Value="#FF6A6A6A"/>
                                <Setter Property="Fill" TargetName="rectangle">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.55,1" StartPoint="0.55,0.026">
                                            <GradientStop Color="#FF686868" Offset="0"/>
                                            <GradientStop Color="#FFBFBFBF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Opacity" TargetName="rectangle" Value="1"/>
                                <Setter Property="Opacity" TargetName="rectangle_Copy" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled"
              Value="false">
                                <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate TargetType="{x:Type dxc:DXDialog}" x:Key="template6" >
            <Grid x:Name="Root_Grid" Height="200" Width="350" Margin="0,0,0,0" VerticalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                    <AdornerDecorator ClipToBounds="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ActualWindowTemplate}" 
              Height="200" Width="350"
                x:Name="PART_RootContentPresenter">
                            <ContentPresenter.Content>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <RadioButton x:Name="Ficheatelier" FontFamily="Tahoma"  GroupName="1" Margin="20,0,0,0" Content="Fiche atelier" HorizontalAlignment="Left" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" Checked="Ficheatelier_Checked" />
                                    <RadioButton x:Name="Reçu" FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Reçu de paiement" HorizontalAlignment="Left" Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" Checked="Reçu_Checked" />

                                    <RadioButton x:Name="atelierreçu" FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Fiche atelier + reçu de paiement" HorizontalAlignment="Left" Grid.Row="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" Checked="atelierreçu_Checked" />
                                    <RadioButton x:Name="_double" FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Fiche atelier en double" HorizontalAlignment="Left" Grid.Row="3" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" Checked="_double_Checked" />
                                    <dxe:CheckEdit x:Name="chimpression" Content="Visualiser" Grid.Row="4" Unchecked="chimpression_Unchecked_1" VerticalAlignment="Center" HorizontalAlignment="Center" Checked="chimpression_Checked_1" />

                                    <Button x:Name="btnCreerImpression" Content="" Grid.Row="5" HorizontalAlignment="Center" VerticalAlignment="Center" Width="30"  Foreground="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" FontFamily="Times New Roman" FontSize="16" Grid.Column="1" Margin="0" ToolTip="Valider" Height="30" BorderBrush="{x:Null}" Click="btnCreerImpression_Click_1">
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Images/acept-verifier-corriger-vert-ok-oui-icone-9668-128.png"/>
                                        </Button.Background>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>

                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </AdornerDecorator>
                </Border>
            </Grid>
        </ControlTemplate>
    </Window.Resources>
    <Grid >
        <Grid.RowDefinitions>

        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="0.50*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="70"   />
                <RowDefinition />
                <RowDefinition  />

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />

            </Grid.ColumnDefinitions>
            <DockPanel Margin="10,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Button x:Name="btnNewLentille" FontFamily="Tahoma"  Content="" FontSize="12" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Nouveau" MinWidth="35" MinHeight="35" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Click="btnNewLentille_Click" BorderBrush="{x:Null}" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                    <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                    <Setter Property="Padding" Value="5,6"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">

                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Button.Style>
                    <Button.Background>
                        <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624077_add_user.ico"/>
                    </Button.Background>
                </Button>
                <Button x:Name="btnSuppLentille" FontFamily="Tahoma" Margin="10,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Supprimer" MinWidth="35" MinHeight="35" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Click="btnSuppLentille_Click" FontSize="12" BorderBrush="{x:Null}" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                    <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                    <Setter Property="Padding" Value="5,6"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">

                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Button.Style>
                    <Button.Background>
                        <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624817_delete.ico"/>
                    </Button.Background>
                </Button>
                <Button x:Name="btnEditLentille"  Margin="10,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Modifier" MinWidth="35" MinHeight="35" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Click="btnEditLentille_Click" FontSize="12" BorderBrush="{x:Null}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                    <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                    <Setter Property="Padding" Value="5,6"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">

                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Button.Style>
                    <Button.Background>
                        <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624391_edit_user.ico"/>
                    </Button.Background>

                </Button>
                <Button x:Name="btnImprimerLentille" Margin="10,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"  ToolTip="Imprimer" MinWidth="40" MinHeight="40" Grid.Column="3" VerticalAlignment="Center" VerticalContentAlignment="Center" Click="btnImprimerLentille_Click" FontSize="12" BorderBrush="{x:Null}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                    <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                    <Setter Property="Padding" Value="5,6"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">

                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Button.Style>
                    <Button.Background>
                        <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                    </Button.Background>
                </Button>
            </DockPanel>

            <Border x:Name="BorderLentille" BorderThickness="3" CornerRadius="20" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" Grid.RowSpan="8" BorderBrush="#FB2D3F5D" Margin="0,0,10,0">

                <DataGrid x:Name="LentilleDatagrid" SelectionMode="Single" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}"  ScrollViewer.VerticalScrollBarVisibility="Auto" GridLinesVisibility="Horizontal"  Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="5" IsReadOnly="True" IsTextSearchCaseSensitive="True" BorderThickness="1" Grid.RowSpan="6" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HeadersVisibility="All" FontSize="12" BorderBrush="{x:Null}" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"  Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MouseDoubleClick="LentilleDatagrid_MouseDoubleClick" MouseRightButtonUp="LentilleDatagrid_MouseRightButtonUp">
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="10,4,4,7"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="BorderThickness" Value="0,0,0,3"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                            <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                            <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                <Thumb.Style>
                                                    <Style TargetType="{x:Type Thumb}">
                                                        <Setter Property="Width" Value="8"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                <Thumb.Style>
                                                    <Style TargetType="{x:Type Thumb}">
                                                        <Setter Property="Width" Value="8"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                        <Setter Property="Cursor" Value="SizeWE"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="SortDirection" Value="{x:Null}">
                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                    <Condition Property="SortDirection" Value="{x:Null}"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                            </MultiTrigger>
                                            <Trigger Property="SortDirection" Value="Ascending">
                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                            </Trigger>
                                            <Trigger Property="SortDirection" Value="Descending">
                                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                            </Trigger>
                                            <Trigger Property="DisplayIndex" Value="0">
                                                <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>

                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                    <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                    <Setter Property="FontWeight" Value="Bold"></Setter>
                                    <Setter Property="FontSize" Value="20"></Setter>
                                    <Setter Property="Background" Value="#CC119EDA" />
                                    <Setter Property="Foreground" Value="White"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.Columns>

                        <DataGridTextColumn Header="Date"
					Binding="{Binding Date, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                        <DataGridTemplateColumn  Width="Auto" Header="Statut">

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Label>
                                        <Label.Style>
                                            <Style TargetType="Label">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=StatutVente}" Value="True">
                                                        <Setter Property="Content" Value="Vente validée" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=StatutVente}" Value="False">
                                                        <Setter Property="Content" Value="Devis" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTextColumn Header="Date de livraison"
					Binding="{Binding Livraison, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                        <DataGridTemplateColumn  Width="Auto" Header="Délivré">

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Label>
                                        <Label.Style>
                                            <Style TargetType="Label">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Délivre}" Value="True">
                                                        <Setter Property="Content" Value="Monture Délivrée" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Délivre}" Value="False">
                                                        <Setter Property="Content" Value="Non Délivrée" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="NCommande"
             Binding="{Binding Ncommande}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="100" FontSize="22" Foreground="#FF451571" />
                    </DataGrid.Columns>
                </DataGrid>
            </Border>


        </Grid>
        <Grid Grid.Column="0" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" x:Name="GridLentille" IsEnabled="False">
            <Grid.RowDefinitions>
                <RowDefinition    />
                <RowDefinition Height="1.5*" />
                <RowDefinition  />
                <RowDefinition  />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition/>
                <ColumnDefinition />
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Grid.ColumnSpan="4">
                <Grid.RowDefinitions>
                    <RowDefinition    />
                    <RowDefinition />
                    <RowDefinition  />
                    <RowDefinition  />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition/>
                    <ColumnDefinition />
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label x:Name="lbfld" Content="N° Commande :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />

                <Label x:Name="lbld" Content="Docteur :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="2" />
                <Label x:Name="lbla1" Content="Observation :" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="2" />
                <Label x:Name="lblad" Content="Date :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Row="1" />
                <DatePicker x:Name="DateCréationLentille" SelectedDate="{Binding Date,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" BorderBrush="#FF2D3F5D" Grid.Row="1" />
                <DatePicker x:Name="DatePrescriptionLentille" SelectedDate="{Binding Prescription,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="5" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" BorderBrush="#FF2D3F5D" />
                <DatePicker x:Name="DateLivraisonLentille" SelectedDate="{Binding Livraison,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="5" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" Grid.Row="1" BorderBrush="#FF2D3F5D" />
                <TextBox x:Name="txtObservLentille" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding Observ, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Row="1" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="0,5,0,0" MinWidth="70" Grid.RowSpan="3" />
                <TextBox x:Name="txtDocteurLentille" Text="{Binding Docteur, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="0" MinWidth="70" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                <Label x:Name="lblLentille" Content="Livraison :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="4" Grid.Row="1" />
                <Label  Content="Prescription :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="4" />

                <CheckBox x:Name="chkDélivréLentille" IsChecked="{Binding Délivre, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Content="Délivré" FontFamily="Tahoma" FontSize="14" Grid.Row="3" HorizontalAlignment="Center" Margin="0" Grid.Column="4" Grid.ColumnSpan="2" VerticalAlignment="Center" />
                <Label  Content="STATUT :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" FontWeight="Bold" Grid.Column="1" Grid.Row="2" Grid.RowSpan="2" />
                <Label x:Name="TxtStatutGlobalLentille"  Content="Vente validée" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="1" Grid.Row="2" Background="#FF88FF98" Grid.ColumnSpan="2" Margin="50,0,0,0" Grid.RowSpan="2" />
                <dxe:BarCodeEdit AutoModule="True"   ShowText="False"  EditValue="{Binding NCommande, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="1" >
                    <dxe:BarCodeEdit.StyleSettings>
                        <dxe:EAN13StyleSettings/>
                    </dxe:BarCodeEdit.StyleSettings>
                </dxe:BarCodeEdit>
            </Grid>
            <Grid Grid.ColumnSpan="2" Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}">
                <Grid.RowDefinitions>
                    <RowDefinition    />
                    <RowDefinition    />
                    <RowDefinition />
                    <RowDefinition  />
                    <RowDefinition  />
                    <RowDefinition Height="1.5*"  />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition/>

                    <ColumnDefinition />
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Text="OD" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" />
                <TextBlock x:Name="ODAncien" Text="Ancien RX" VerticalAlignment="Center" Grid.Row="2" HorizontalAlignment="Center" />
                <TextBlock x:Name="ODNouv" Text="Nouv. RX" VerticalAlignment="Center" Grid.Row="3" HorizontalAlignment="Center" />
                <TextBlock x:Name="ODLentille" Text="Lentille" VerticalAlignment="Center" Grid.Row="4" HorizontalAlignment="Center" />
                <TextBlock Text="Mouvem." ToolTip="" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Right" Grid.Column="1" />
                <TextBlock Text="Centrage." ToolTip="" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Center" Grid.Column="4" />

                <TextBlock Text="Sphère" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" />
                <TextBlock Text="Cylindre" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1" />
                <TextBlock Text="Axe" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1" />
                <TextBlock Text="Add." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="1" />
                <TextBlock Text="Ac. vis." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="1" />
                <TextBox x:Name="txtAncienSphereDroite" FontFamily="Tahoma" Text="{Binding AncienSphereDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Foreground="#FFFF008B" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtAncienCylindreDroite" FontFamily="Tahoma" Text="{Binding AncienCylindreDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtAncienAxeDroite" FontFamily="Tahoma" Text="{Binding AncienAxeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtAncienAddDroite" FontFamily="Tahoma" Text="{Binding AncienAddDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtAncienAc" FontFamily="Tahoma" Text="{Binding AncienAcDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                <TextBox x:Name="txtNouvSphereDroite" FontFamily="Tahoma" Text="{Binding NouvSphereDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtNouvCylindreDroite" FontFamily="Tahoma" Text="{Binding NouvCylindreDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtNouvAxeDroite" FontFamily="Tahoma" Text="{Binding NouvAxeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtNouvAddDroite" FontFamily="Tahoma" Text="{Binding NouvAddDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtNouvAc" FontFamily="Tahoma" Text="{Binding NouvAcDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                <TextBox x:Name="txtLentilleSphereDroite" FontFamily="Tahoma" Text="{Binding LentilleSphereDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtLentilleCylindreDroite" FontFamily="Tahoma" Text="{Binding LentilleCylindreDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />


                <TextBox x:Name="txtLentilleAxeDroite" FontFamily="Tahoma" Text="{Binding LentilleAxeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtLentilleAddDroite" FontFamily="Tahoma" Text="{Binding LentilleAddDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtLentilleAc" FontFamily="Tahoma" Text="{Binding LentilleAcDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtLentilleMouvementDroite" FontFamily="Tahoma" Text="{Binding MouvementDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" />
                <TextBox x:Name="txtLentilleCentrageDroite" FontFamily="Tahoma" Text="{Binding CentrageDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" />
                <Button x:Name="btnTransposerLentille" Grid.Column="7" HorizontalAlignment="Center" VerticalAlignment="Center" Content="+/-" BorderBrush="#FFFFD7BC" ToolTip="Transposer" Click="btnTransposerLentille_Click" />



            </Grid>

            <Grid Grid.ColumnSpan="2" Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition    />
                    <RowDefinition    />
                    <RowDefinition />
                    <RowDefinition  />
                    <RowDefinition  />
                    <RowDefinition Height="1.5*"  />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition/>

                    <ColumnDefinition />
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Text="OG" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" />
                <TextBlock x:Name="ODAncienGauche" Text="Ancien RX" VerticalAlignment="Center" Grid.Row="2" HorizontalAlignment="Center" />
                <TextBlock x:Name="ODNouvGauche" Text="Nouv. RX" VerticalAlignment="Center" Grid.Row="3" HorizontalAlignment="Center" />
                <TextBlock x:Name="ODLentilleGauche" Text="Lentille" VerticalAlignment="Center" Grid.Row="4" HorizontalAlignment="Center" />
                <TextBlock Text="Mouvem." ToolTip="" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Right" Grid.Column="1" />
                <TextBlock Text="Centrage." ToolTip="" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Center" Grid.Column="4" />

                <TextBlock Text="Sphère" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" />
                <TextBlock Text="Cylindre" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1" />
                <TextBlock Text="Axe" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1" />
                <TextBlock Text="Add." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="1" />
                <TextBlock Text="Ac. vis." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="1" />
                <TextBox x:Name="txtAncienSphereGauche" FontFamily="Tahoma" Text="{Binding AncienSphereGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Foreground="#FFFF008B" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtAncienCylindreGauche" FontFamily="Tahoma" Text="{Binding AncienCylindreGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtAncienAxeGauche" FontFamily="Tahoma" Text="{Binding AncienAxeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtAncienAddGauche" FontFamily="Tahoma" Text="{Binding AncienAddGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtAncienAcGauche" FontFamily="Tahoma" Text="{Binding AncienAcGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                <TextBox x:Name="txtNouvSphereGauche" FontFamily="Tahoma" Text="{Binding NouvSphereGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtNouvCylindreGauche" FontFamily="Tahoma" Text="{Binding NouvCylindreGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtNouvAxeGauche" FontFamily="Tahoma" Text="{Binding NouvAxeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtNouvAddGauche" FontFamily="Tahoma" Text="{Binding NouvAddGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtNouvAcGauche" FontFamily="Tahoma" Text="{Binding NouvAcGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                <TextBox x:Name="txtLentilleSphereGauche" FontFamily="Tahoma" Text="{Binding LentilleSphereGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtLentilleCylindreGauche" FontFamily="Tahoma" Text="{Binding LentilleCylindreGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />


                <TextBox x:Name="txtLentilleAxeGauche" FontFamily="Tahoma" Text="{Binding LentilleAxeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtLentilleAddGauche" FontFamily="Tahoma" Text="{Binding LentilleAddGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtLentilleAcGauche" FontFamily="Tahoma" Text="{Binding LentilleAcGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <TextBox x:Name="txtLentilleMouvementGauche" FontFamily="Tahoma" Text="{Binding MouvementGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" />
                <TextBox x:Name="txtLentilleCentrageGauche" FontFamily="Tahoma" Text="{Binding CentrageGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" />



            </Grid>
            <Grid Grid.Row="2" Background="DimGray" Grid.RowSpan="2" Grid.ColumnSpan="4">
                <Grid.RowDefinitions>
                    <RowDefinition    />
                    <RowDefinition    />
                    <RowDefinition />
                    <RowDefinition  />
                    <RowDefinition  />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition />

                </Grid.ColumnDefinitions>
                <Grid Grid.Row="0" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Grid.ColumnSpan="10">
                    <Grid.RowDefinitions>
                        <RowDefinition    />

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition />

                    </Grid.ColumnDefinitions>
                    <TextBlock   Text="Kératométrie" FontFamily="Tahoma" Foreground="#FFFF008B" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Grid.ColumnSpan="2"/>
                    <TextBlock  Text="H" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,0,0" Grid.Column="1"/>

                    <TextBox x:Name="txtKeratometrieDroiteH" FontFamily="Tahoma" Text="{Binding KeratometrieDroiteH, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="5,0,0,0" MaxWidth="40" MinWidth="40" Grid.Column="1" HorizontalAlignment="Center" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" TextChanged="txtKeratometrieDroiteH_TextChanged" />
                    <TextBlock  Text="V" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Column="2"/>

                    <TextBox x:Name="txtKeratometrieDroiteV" FontFamily="Tahoma" Text="{Binding KeratometrieDroiteV, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" TextChanged="txtKeratometrieDroiteV_TextChanged" />
                    <TextBlock  Text="Axe" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Column="3"/>
                    <TextBox x:Name="txtKeratometrieDroiteAxe" FontFamily="Tahoma" Text="{Binding KeratometrieDroiteAxe, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />

                    <TextBlock  Text="K.moy." FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,0,0" Grid.Column="4"/>
                    <TextBox x:Name="txtKeratometrieDroitemoy" FontFamily="Tahoma" Text="{Binding KeratometrieDroitemoy, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="25,0,0,0" MinWidth="40" MaxWidth="40" FontWeight="Bold" HorizontalAlignment="Center" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />

                    <TextBlock  Text="H" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="6"/>

                    <TextBox x:Name="txtKeratometrieGaucheH" FontFamily="Tahoma" Text="{Binding KeratometrieGaucheH, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="10,0,0,0" MaxWidth="40" MinWidth="40" Grid.Column="6" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" TextChanged="txtKeratometrieGaucheH_TextChanged" />
                    <TextBlock  Text="V" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="7"/>

                    <TextBox x:Name="txtKeratometrieGaucheV" FontFamily="Tahoma" Text="{Binding KeratometrieGaucheV, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="7" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="10,0,0,0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" TextChanged="txtKeratometrieGaucheV_TextChanged" />
                    <TextBlock  Text="Axe" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="8"/>
                    <TextBox x:Name="txtKeratometrieGaucheAxe" FontFamily="Tahoma" Text="{Binding KeratometrieGaucheAxe, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="8" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="25,0,0,0" MinWidth="40" MaxWidth="40" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <TextBlock  Text="K.moy." FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Column="9"/>
                    <TextBox x:Name="txtKeratometrieGauchemoy" FontFamily="Tahoma" Text="{Binding KeratometrieGauchemoy, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="9" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="#FF2D3F5D" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxHeight="25" MinHeight="20" Margin="0" Grid.ColumnSpan="2" MinWidth="40" MaxWidth="40" HorizontalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />

                    <dxc:SimpleButton x:Name="btnDiopmm" Grid.Column="10" HorizontalAlignment="Right" VerticalAlignment="Center" Content="D/m-" BorderBrush="#FFFFD7BC" ToolTip="Conversion Dioptrie/mm" MaxWidth="50" MaxHeight="20" FontFamily="Tahoma" Padding="2" Click="btnDiopmm_Click" Background="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Margin="0,0,10,0" />
                </Grid>
                <TextBlock   Text="Lentille" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Grid.ColumnSpan="2" Grid.Row="1"/>

                <TextBlock  Text="Diamétre" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="2" Margin="10,0,0,0" Grid.ColumnSpan="2"/>
                <TextBox x:Name="txtDiamétreOD"  Text="{Binding DiametreOD, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="1" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0" MinHeight="25" MaxHeight="25" Grid.Row="2"  />

                <TextBlock  Text="Rayon" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2" Margin="0" Grid.Column="2"/>
                <TextBox x:Name="txtRayonOD"  Text="{Binding RayonOD, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="0" MinHeight="25" MaxHeight="25" Grid.Row="2"  />
                <TextBlock  Text="Diamétre" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="2" Margin="10,0,0,0" Grid.ColumnSpan="2" Grid.Column="5"/>
                <TextBlock  Text="Rayon" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2" Margin="0" Grid.Column="7"/>
                <TextBox x:Name="txtDiametreOG"  Text="{Binding DiametreOG, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="6" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinHeight="25" MaxHeight="25" Grid.Row="2"  />
                <TextBox x:Name="txtRayonOG" Text="{Binding RayonOG, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="8" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0" MinHeight="25" MaxHeight="25" Grid.Row="2"  />
                <TextBlock  Text="Type de lentille" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1" Margin="0" Grid.Column="1" Grid.ColumnSpan="3"/>
                <TextBox x:Name="txtTypeOD"  Text="{Binding TypeOD, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="7" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="20,0,5,0" MinHeight="25" MaxHeight="25" Grid.Row="1" Grid.ColumnSpan="2"  />

                <TextBlock  Text="Type de lentille" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1" Margin="0" Grid.Column="5" Grid.ColumnSpan="3"/>
                <TextBox x:Name="txtTypeOG"  Text="{Binding TypeOG, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="20,0,5,0" MinHeight="25" MaxHeight="25" Grid.Row="1" Grid.ColumnSpan="2"  />




                <TextBlock   Text="Accesoires" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Grid.ColumnSpan="2" Grid.Row="5"/>

                <TextBox x:Name="txtDroitPrixLentille" IsEnabled="False" ToolTip="Prix de vente" Text="{Binding DroitPrixLentille, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="3" TextChanged="txtDroitPrixLentille_TextChanged" />
                <TextBlock   Text="OD" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Grid.Row="1" Grid.Column="1"/>

                <TextBox x:Name="txtDroiteLentilleDesignation"  IsEnabled="True"  ToolTip="Double cliquer pour sélectionner un produit"  Text="{Binding DroiteLentilleDesignation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="1" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="70" Grid.ColumnSpan="2" MinHeight="25" MaxHeight="25" Grid.Row="3" MouseDoubleClick="txtDroiteLentilleDesignation_MouseDoubleClick"  />
                <TextBox x:Name="txtDroitQuantiteLentille" IsEnabled="True" ToolTip="Quantité" Text="{Binding DroitQuantiteLentille, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="4" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="3" TextChanged="txtDroitQuantiteLentille_TextChanged" />
                <TextBlock   Text="OG" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Grid.Row="1" Grid.Column="5"/>

                <TextBlock Text="x" Grid.Row="3" Grid.Column="3" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" FontWeight="Bold" />
                <Button x:Name="GaucheStatutLentille" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="4" HorizontalAlignment="Right" Grid.Row="2" />
                <Button x:Name="DroiteStatutLentille" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" HorizontalAlignment="Right" Grid.Row="2" />
                <TextBox x:Name="txtGaucheLentilleDesignation"  IsEnabled="True"  ToolTip="Double cliquer pour sélectionner un produit"  Text="{Binding GaucheLentilleDesignation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="5" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="70" Grid.ColumnSpan="2" MinHeight="25" MaxHeight="25" Grid.Row="3" MouseDoubleClick="txtGaucheLentilleDesignation_MouseDoubleClick"  />
                <TextBox x:Name="txtGauchePrixLentille" IsEnabled="False" ToolTip="Prix de vente" Text="{Binding GauchePrixLentille, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="7" Foreground="Black" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FFA020F0" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="3" TextChanged="txtGauchePrixLentille_TextChanged" />
                <TextBlock Text="x" Grid.Row="3" Grid.Column="7" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" FontWeight="Bold" />
                <TextBox x:Name="txtGaucheQuantiteLentille" IsEnabled="True" ToolTip="Quantité" Text="{Binding GaucheQuantiteLentille, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="8" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="3" TextChanged="txtGaucheQuantiteLentille_TextChanged" />
                <TextBlock Text="=" Grid.Row="3" Grid.Column="7" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                <TextBox x:Name="txtPrixTotalLentille" ToolTip="Prix de vente" IsEnabled="False" FontFamily="Tahoma" Grid.Column="9" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="3" TextChanged="txtPrixTotalLentille_TextChanged"  />
                <TextBlock  Text="Type de visite" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="4" Margin="10,0,0,0" Grid.ColumnSpan="2"/>
                <ComboBox x:Name="TypeDevisite" IsEditable="True" SelectedValue="{Binding TypeDevisite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" MinWidth="10" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="30,0,0,0" Grid.Column="1" Grid.Row="4" MinHeight="25" MaxHeight="25" Grid.ColumnSpan="2" >
                    <ComboBoxItem Content="Inconnu" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D"/>
                    <ComboBoxItem Content="Essai" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                    <ComboBoxItem Content="Adaptation" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                    <ComboBoxItem Content="Contrôle" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                    <ComboBoxItem Content="Renouvellement" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                </ComboBox>
                <TextBlock  Text="Durée" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="4" Margin="10,0,0,0" Grid.Column="3"/>
                <ComboBox x:Name="Durée" IsEditable="True" SelectedValue="{Binding Durée, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" MinWidth="10" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="#FF2D3F5D" Margin="0" Grid.Column="4" Grid.Row="4" MinHeight="25" MaxHeight="25" >
                    <ComboBoxItem Content="Inconnu" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                    <ComboBoxItem Content="Journalier" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <ComboBoxItem Content="1 semaine" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <ComboBoxItem Content="15 jours" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <ComboBoxItem Content="1 mois" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <ComboBoxItem Content="2 mois" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <ComboBoxItem Content="3 mois" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <ComboBoxItem Content="6 mois" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <ComboBoxItem Content="1 an" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <ComboBoxItem Content="2 ans" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <ComboBoxItem Content="3 ans" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <ComboBoxItem Content="5 ans" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <ComboBoxItem Content="Autre..." FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                </ComboBox>
                <TextBlock  Text="Proch.visite" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="4" Margin="10,0,0,0" Grid.Column="5"/>
                <DatePicker x:Name="DateProchainVisite" SelectedDate="{Binding ProchainVisite,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" Foreground="#FF2D3F5D" Margin="8,0,0,0" DockPanel.Dock="Right" Grid.Column="6" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Left" Grid.Row="4" Grid.ColumnSpan="2" Width="100" BorderBrush="#FF2D3F5D" />
                <TextBlock  Text="Examens" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="4" Margin="50,0,0,0" Grid.Column="7" Grid.ColumnSpan="2"/>
                <TextBox x:Name="txtExamen" ToolTip="Examen" Text="{Binding Examen, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="True" FontFamily="Tahoma" Grid.Column="8" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="35,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" Grid.Row="4" Grid.ColumnSpan="2"  />

                <Button x:Name="DroiteStatutAccessoires1" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" HorizontalAlignment="Right" Grid.Row="4" Grid.Column="1" />
                <Button x:Name="DroiteStatutAccessoires2" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" HorizontalAlignment="Right" Grid.Row="5" Grid.Column="1" />

                <TextBox x:Name="txtAccessoires1Lentille" ToolTip="Double cliquer pour sélectionner un produit" IsEnabled="True" Text="{Binding Accessoires1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="200" Grid.ColumnSpan="4" MinHeight="25" MaxHeight="25" Grid.Row="5" MouseDoubleClick="txtAccessoires1Lentille_MouseDoubleClick" />
                <TextBox x:Name="txtAccessoires2Lentille" ToolTip="Double cliquer pour sélectionner un produit" IsEnabled="True" Text="{Binding Accessoires2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="200" Grid.ColumnSpan="4" MinHeight="25" MaxHeight="25" Grid.Row="6" MouseDoubleClick="txtAccessoires2Lentille_MouseDoubleClick"  />
                <TextBox x:Name="txtAccessoiresPrix1Lentille" IsEnabled="False" ToolTip="Prix de vente"  Text="{Binding AccessoiresPrix1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="8" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="5" HorizontalAlignment="Left" TextChanged="txtAccessoiresPrix1Lentille_TextChanged" />
                <TextBox x:Name="txtAccessoiresQuantite1Lentille" IsEnabled="True" ToolTip="Quantite"  Text="{Binding AccessoiresQuantite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="6" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,25,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="5" Grid.ColumnSpan="2" TextChanged="txtAccessoiresQuantite1Lentille_TextChanged"  />
                <TextBlock Text="x" Grid.Row="5" Grid.Column="6" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                <TextBlock Text="=" Grid.Row="5" Grid.Column="7" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                <TextBox x:Name="txtAccessoiresPrix2Lentille" ToolTip="Prix de vente" IsEnabled="False"  Text="{Binding AccessoiresPrix2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="8" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="6" HorizontalAlignment="Left" TextChanged="txtAccessoiresPrix2Lentille_TextChanged"  />
                <TextBox x:Name="txtAccessoiresQuantite2Lentille" IsEnabled="True" ToolTip="Quantite"  Text="{Binding AccessoiresQuantite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="6" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,25,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="6" Grid.ColumnSpan="2" TextChanged="txtAccessoiresQuantite2Lentille_TextChanged"  />
                <TextBlock Text="x" Grid.Row="6" Grid.Column="6" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                <TextBlock Text="=" Grid.Row="6" Grid.Column="7" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                <TextBox x:Name="txtPrixTotalAcc1Lentille"  IsEnabled="False"  FontFamily="Tahoma" Grid.Column="9" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="5" TextChanged="txtPrixTotalAcc1Lentille_TextChanged"  />
                <TextBox x:Name="txtPrixTotalAcc2Lentille"  IsEnabled="False" FontFamily="Tahoma" Grid.Column="9" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="6" TextChanged="txtPrixTotalAcc2Lentille_TextChanged"  />

                <TextBlock Text="TOTAL" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Row="7" Grid.Column="8"/>
                <TextBlock Text="Encaissé" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Row="7" Grid.Column="6"/>
                <TextBox x:Name="txtMontantTotalENCLentille" IsEnabled="False" ToolTip="Versement" Text="{Binding Encaissé, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="7" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="7" />
                <TextBlock Text="Remise" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Row="7" Grid.Column="4"/>
                <TextBox x:Name="txtRemiseLentille" IsEnabled="True" ToolTip="Remise" Text="{Binding Remise, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="5" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="7" TextChanged="txtRemiseLentille_TextChanged" />

                <TextBox x:Name="txtMontantTotalLentille" ToolTip="Prix total" IsEnabled="False" Text="{Binding  MontantTotal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="9" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="7" />
                <Button x:Name="ValiderLentille" Grid.ColumnSpan="5" Content="Valider" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Grid.Row="8" Margin="0" Click="ValiderLentille_Click" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                    <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="FontWeight" Value="Bold"/>

                                    <Setter Property="Padding" Value="5,6"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">

                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>

                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="AnnulerLentille" Grid.ColumnSpan="5" Content="Échap = ANNULER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FFFF9388" Grid.Column="5" BorderBrush="{x:Null}" Grid.Row="8" Margin="0" Click="AnnulerLentille_Click" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                    <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="FontWeight" Value="Bold"/>

                                    <Setter Property="Padding" Value="5,6"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">

                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>

                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Button.Style>
                </Button>

            </Grid>
        </Grid>
    </Grid>

</dx:DXWindow>
