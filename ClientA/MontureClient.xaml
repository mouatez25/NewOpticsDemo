<Window x:Class="NewOptics.ClientA.MontureClient"
                    xmlns:local="clr-namespace:NewOptics.ClientA"
                   	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
       xmlns:dxco="http://schemas.devexpress.com/winfx/2008/xaml/controls" 
             xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"  
    xmlns:dxpg="http://schemas.devexpress.com/winfx/2008/xaml/pivotgrid" 
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"  
              
             	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
  xmlns:chartingToolkit="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
        xmlns:rtf="clr-namespace:GestionClinique.RTFEditor"
    xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
       
                        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
               xmlns:System="clr-namespace:System;assembly=mscorlib"
                 xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
 
   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
   mc:Ignorable="d"
        Title="DossierClient"  ResizeMode="CanResize"  Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" WindowStyle="ThreeDBorderWindow"  Icon="/NewOptics;component/Dent6.ico" WindowStartupLocation="CenterScreen"  BorderThickness="0"  BorderBrush="#FFA020F0" ShowInTaskbar="True" Width="1150"  >
    <Window.Resources>
        <Style x:Key="PulseButton" TargetType="{x:Type Button}">
            <Style.BasedOn>
                <Style TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border>
                                                <Rectangle SnapsToDevicePixels="True" Stroke="#FF000000" StrokeDashArray="1 2" StrokeThickness="1" Margin="4,4,4,4"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <SolidColorBrush/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="3,3,3,3"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="0,0,1,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="OnMouseEnter1">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.3"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.3"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.4"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Border RenderTransformOrigin="0.5,0.5" x:Name="border" Width="Auto" Height="Auto" BorderBrush="{x:Null}" BorderThickness="5,5,5,5" CornerRadius="4,4,4,4" Background="{x:Null}">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                    <ContentPresenter Width="Auto" Height="Auto" RenderTransformOrigin="0.403,0.5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="border">
                                        <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                                    <Trigger Property="IsKeyboardFocused" Value="True"/>
                                    <Trigger Property="Button.IsDefaulted" Value="True"/>
                                    <Trigger Property="IsPressed" Value="True"/>
                                    <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.BasedOn>
        </Style>
        <Label x:Key="DefaultDXDialogContent"></Label>
        <Rectangle x:Key="content"  Width="100" Height="100" Margin="5" Fill="Red"/>
        <ControlTemplate TargetType="{x:Type Window}" x:Key="template3" >
            <Grid x:Name="Root_Grid" Height="250" Width="350" Margin="0,0,0,0" VerticalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <AdornerDecorator ClipToBounds="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" 
              Height="200" Width="350"
                x:Name="PART_RootContentPresenter">
                            <ContentPresenter.Content>
                                <Grid>
                                    <Border x:Name="windowBorderDatdsfdsaDSFDSgridVisiteApayedsdsr" BorderThickness="3" CornerRadius="20" Grid.Column="1" Background="#FF6E6E6E" Grid.RowSpan="4" BorderBrush="{x:Null}" Margin="10,0">

                                        <Grid x:Name="GridRecouf" Grid.RowSpan="4" Grid.Column="1" Margin="10">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="75*" />
                                                <RowDefinition Height="75*" />
                                                <RowDefinition Height="75*"  />
                                                <RowDefinition Height="60*"  />
                                                <RowDefinition Height="75*"  />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>


                                            </Grid.ColumnDefinitions>


                                            <Label x:Name="fds" Content="Nouveau document" BorderThickness="1" FontSize="16" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}" FontWeight="Bold" Background="{x:Null}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Margin="0" Height="50" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.ColumnSpan="2" TextOptions.TextFormattingMode="Display" HorizontalAlignment="Center" />

                                            <RadioButton x:Name="chFactureNew"  GroupName="UserType" Grid.Row="1"  HorizontalAlignment="Left" FontFamily="Tahoma" FontSize="14" FontWeight="Bold" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"  Content="Facture" Checked="chFactureNew_Checked"  />
                                            <RadioButton x:Name="chFactureAvoirNew" GroupName="UserType"  Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Facture d'avoir" Checked="chFactureAvoirNew_Checked" />
                                            <RadioButton x:Name="chBonLivraisonNew" IsChecked="False" GroupName="UserType"  Grid.Row="2" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Bon Livraison" VerticalAlignment="Top" Checked="chBonLivraisonNew_Checked" />
                                            <RadioButton x:Name="chBonLivraisonAvoirNew" GroupName="UserType"  Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Bon d'avoir" VerticalAlignment="Top" Checked="chBonLivraisonAvoirNew_Checked" />
                                            <RadioButton x:Name="chProformaNew" GroupName="UserType"  Grid.Row="2" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Proforma" VerticalAlignment="Bottom" Checked="chProformaNew_Checked" />
                                            <RadioButton x:Name="chFactureProvisoirNew" GroupName="UserType"  Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Facture provisoir" VerticalAlignment="Bottom" Checked="chFactureProvisoirNew_Checked" />
                                            <CheckBox x:Name="chfacturation" Content="Ne pas utilisé le stock" Grid.Row="3"   VerticalAlignment="Bottom" HorizontalAlignment="Center" Checked="chfacturation_Checked" Unchecked="chfacturation_Unchecked" Grid.ColumnSpan="2" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" FontFamily="Tahoma" />



                                            <Button x:Name="ConfirmerDocument" Content="CONFIRMER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Click="ConfirmerDocument_Click" Grid.ColumnSpan="2" MinWidth="260" Grid.Row="4" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontFamily="Tahoma" >
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                                <Setter Property="MinHeight" Value="25"/>
                                                                <Setter Property="FontWeight" Value="Bold"/>

                                                                <Setter Property="Padding" Value="5,6"/>
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Grid>
                                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                                </Trigger>

                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Style.BasedOn>
                                                    </Style>
                                                </Button.Style>
                                            </Button>


                                        </Grid>
                                    </Border>

                                </Grid>

                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </AdornerDecorator>
                </Border>
            </Grid>
        </ControlTemplate>
        <ControlTemplate TargetType="{x:Type Window}" x:Key="template4" >
            <Grid x:Name="Root_Grid" Height="250" Width="350" Margin="0,0,0,0" VerticalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <AdornerDecorator ClipToBounds="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" 
              Height="250" Width="350"
                x:Name="PART_RootContentPresenter">
                            <ContentPresenter.Content>
                                <Grid>
                                    <Border x:Name="windowBorderDatdsfdsaDSFDSgridVisiteApayedsdsr" BorderThickness="3" CornerRadius="20" Grid.Column="1" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Grid.RowSpan="4" BorderBrush="{x:Null}" Margin="10,0">

                                        <Grid x:Name="GridRecouf" Grid.RowSpan="4" Grid.Column="1" Margin="10">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="75*" />
                                                <RowDefinition Height="75*" />
                                                <RowDefinition Height="75*"  />
                                                <RowDefinition Height="60*"  />
                                                <RowDefinition Height="75*"  />

                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>



                                            </Grid.ColumnDefinitions>


                                            <Label x:Name="fds" Content="Nouveau document" BorderThickness="1" FontSize="16" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" FontWeight="Bold" Background="{x:Null}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Margin="20,2" Height="50" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.ColumnSpan="2" TextOptions.TextFormattingMode="Display" HorizontalAlignment="Stretch" VerticalAlignment="Center" />

                                            <RadioButton x:Name="chFactureNew"  GroupName="UserType" Grid.Row="1"  HorizontalAlignment="Left" FontFamily="Tahoma" FontSize="14" FontWeight="Bold" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"  Content="Facture" Checked="chFactureNew_Checked" Margin="50,0,0,0"  />
                                            <RadioButton x:Name="chBonLivraisonNew" IsChecked="False" GroupName="UserType"  Grid.Row="2" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="50,0,0,0" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Bon Livraison" VerticalAlignment="Top" Checked="chBonLivraisonNew_Checked" />
                                            <RadioButton x:Name="chProformaNew" GroupName="UserType"  Grid.Row="2" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="50,0,0,0" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Content="Proforma" VerticalAlignment="Bottom" Checked="chProformaNew_Checked" />

                                            <CheckBox x:Name="chfacturationmonture" Content="Ne pas utilisé le stock" Grid.Row="3"   VerticalAlignment="Bottom" HorizontalAlignment="Center"  Grid.ColumnSpan="2" Foreground="#FF2D3F5D" FontWeight="Bold" FontFamily="Tahoma" Checked="chfacturationmonture_Checked" Unchecked="chfacturationmonture_Unchecked" />


                                            <Button x:Name="ConfirmerDocument1" Content="CONFIRMER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Grid.ColumnSpan="2" MinWidth="260" Grid.Row="4" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontFamily="Tahoma" Click="ConfirmerDocument1_Click" >
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                                <Setter Property="MinHeight" Value="25"/>
                                                                <Setter Property="FontWeight" Value="Bold"/>

                                                                <Setter Property="Padding" Value="5,6"/>
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Grid>
                                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                                </Trigger>

                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Style.BasedOn>
                                                    </Style>
                                                </Button.Style>
                                            </Button>


                                        </Grid>
                                    </Border>

                                </Grid>

                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </AdornerDecorator>
                </Border>
            </Grid>
        </ControlTemplate>
        <ControlTemplate TargetType="{x:Type Window}" x:Key="template5" >
            <Grid x:Name="Root_Grid" Height="200" Width="350" Margin="0,0,0,0" VerticalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                    <AdornerDecorator ClipToBounds="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" 
              Height="200" Width="350"
                x:Name="PART_RootContentPresenter">
                            <ContentPresenter.Content>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <RadioButton FontFamily="Tahoma"  GroupName="1" Margin="20,0,0,0" Content="Fiche atelier" HorizontalAlignment="Left" Checked="RadioButton_Checked" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                    <RadioButton FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Reçu de paiement" HorizontalAlignment="Left" Grid.Row="1" Checked="RadioButton_Checked_1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />

                                    <RadioButton FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Fiche atelier + reçu de paiement" HorizontalAlignment="Left" Grid.Row="2" Checked="RadioButton_Checked_2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                    <RadioButton FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Fiche atelier en double" HorizontalAlignment="Left" Grid.Row="3" Checked="RadioButton_Checked_3" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" />
                                    <CheckBox x:Name="chimpression" Content="Visualiser" Grid.Row="4" Checked="chimpression_Checked" Unchecked="chimpression_Unchecked" VerticalAlignment="Center" HorizontalAlignment="Center" />

                                    <Button x:Name="btnCreerImpression" Content="" Grid.Row="5" HorizontalAlignment="Center" VerticalAlignment="Center" Width="30"  Foreground="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" FontFamily="Times New Roman" FontSize="16" Grid.Column="1" Margin="0" ToolTip="Valider" Height="30" BorderBrush="{x:Null}" Click="btnCreerImpression_Click">
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Images/acept-verifier-corriger-vert-ok-oui-icone-9668-128.png"/>
                                        </Button.Background>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>

                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </AdornerDecorator>
                </Border>
            </Grid>
        </ControlTemplate>
        <ControlTemplate TargetType="{x:Type Window}" x:Key="template7" >
            <Grid x:Name="Root_Grid" Height="150" Width="350" Margin="0,0,0,0" VerticalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                    <AdornerDecorator ClipToBounds="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" 
              Height="150" Width="350"
                x:Name="PART_RootContentPresenter">
                            <ContentPresenter.Content>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition    />
                                        <RowDefinition />
                                        <RowDefinition    />

                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <RadioButton x:Name="facturea4" FontFamily="Tahoma"  GroupName="1" Margin="20,0,0,0" Content="Document de vente(A4)" HorizontalAlignment="Left" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" Checked="facturea4_Checked" />
                                    <RadioButton x:Name="facturea5" FontFamily="Tahoma" GroupName="1" Margin="20,0,0,0" Content="Modèle Document de vente simple (1/2 feuille) " HorizontalAlignment="Left" Grid.Row="1"  Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF2D3F5D" Checked="facturea5_Checked" />


                                    <CheckBox x:Name="chimpression" Content="Visualiser" Grid.Row="2"   VerticalAlignment="Center" HorizontalAlignment="Center" Checked="chimpression_Checked_2" Unchecked="chimpression_Unchecked_2" />

                                    <Button x:Name="btnCreerImpressionDocument" Content="" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" Width="30"  Foreground="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" FontFamily="Times New Roman" FontSize="16" Grid.Column="1" Margin="0" ToolTip="Valider" Height="30" BorderBrush="{x:Null}" Click="btnCreerImpressionDocument_Click" >
                                        <Button.Background>
                                            <ImageBrush ImageSource="/NewOptics;component/Images/acept-verifier-corriger-vert-ok-oui-icone-9668-128.png"/>
                                        </Button.Background>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                        <Setter Property="MinHeight" Value="25"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="5,6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">

                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>

                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </AdornerDecorator>
                </Border>
            </Grid>
        </ControlTemplate>

        <ResourceDictionary x:Key="6">
            <ResourceDictionary.MergedDictionaries >
                <ResourceDictionary  Source="/NewOptics;component/ressources/Brushes.xaml" />
                <ResourceDictionary   Source="/NewOptics;component/ressources/ExpanderStyles.xaml" />
                <ResourceDictionary   Source="/NewOptics;component/ressources/StoryBoards.xaml" />
                <ResourceDictionary   Source="/NewOptics;component/ressources/RoundBorderPanelStyle.xaml" />
                <ResourceDictionary   Source="/NewOptics;component/ressources/PulseButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <TabControl x:Name="Détail" BorderThickness="0" Grid.ColumnSpan="3" Margin="10,0" FontFamily="Tahoma" >
            <TabItem x:Name="tsdffgent"  FontSize="14" FontFamily="Tahoma" Header="Facturation" Margin="0" Controls:TabControlHelper.IsUnderlined="True">

                <Grid x:Name="GridPricipale" Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Grid x:Name="WindowBorderFacture" Visibility="Collapsed" Grid.Column="1" Grid.RowSpan="4" Background="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.7*" />
                            <RowDefinition   />
                            <RowDefinition  />
                            <RowDefinition   />
                            <RowDefinition   />
                            <RowDefinition  />
                            <RowDefinition   />
                            <RowDefinition   />
                            <RowDefinition   />
                            <RowDefinition Height="30px"   />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>

                        </Grid.ColumnDefinitions>

                        <Border x:Name="windowBorderDatdsfdsaDSFDSgridVisiteApayedsdsr" BorderThickness="3" CornerRadius="20" Grid.Column="1" Grid.RowSpan="3" Margin="0" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">

                            <Grid x:Name="GridRecouf" Grid.RowSpan="4" Grid.Column="1" Margin="10">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="120*" />
                                    <RowDefinition Height="75*" />
                                    <RowDefinition Height="75*"  />
                                    <RowDefinition Height="75*"  />
                                    <RowDefinition Height="75*"  />

                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition />

                                </Grid.ColumnDefinitions>


                                <Label x:Name="NomDocumentLabel" Content="" BorderThickness="1" FontSize="24" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" FontWeight="Bold" Background="{x:Null}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Margin="0,0,20,0" Height="50" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.ColumnSpan="2" TextOptions.TextFormattingMode="Display" />

                                <RadioButton x:Name="chFacture" IsEnabled="False" GroupName="UserType" Grid.Row="0" Grid.Column="2"  HorizontalAlignment="Left" FontFamily="Tahoma" FontSize="14" FontWeight="Bold" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Background="{x:Null}"  Content="Facture" VerticalAlignment="Bottom"  />
                                <RadioButton x:Name="chFactureAvoir" IsEnabled="False" GroupName="UserType"  Grid.Row="0" Grid.Column="3" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Content="Facture d'avoir" VerticalAlignment="Bottom" />
                                <RadioButton x:Name="chBonLivraison" IsEnabled="False" GroupName="UserType"  Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Content="Bon Livraison" VerticalAlignment="Top" />
                                <RadioButton x:Name="chBonLivraisonAvoir" IsEnabled="False" GroupName="UserType"  Grid.Row="1" Grid.Column="3" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Content="Bon d'avoir" VerticalAlignment="Top" />
                                <RadioButton x:Name="chProforma" IsEnabled="False" GroupName="UserType"  Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Content="Proforma" VerticalAlignment="Bottom" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                <RadioButton x:Name="chFactureProvisoir" IsEnabled="False" GroupName="UserType"  Grid.Row="1" Grid.Column="3" HorizontalAlignment="Left" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Margin="0" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Content="Facture provisoir" VerticalAlignment="Bottom" />

                                <TextBlock Text="Date facture :"  FontFamily="Tahoma" FontSize="16" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" />
                                <DatePicker x:Name="txtDateOper" IsEnabled="False"  SelectedDate="{Binding date,StringFormat={}\{0:dd/MM/yyyy\}}"  Margin="0"   FontFamily="Tahoma" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="1" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MinWidth="120" BorderBrush="#FB2D3F5D" SelectedDateChanged="txtDateOper_SelectedDateChanged"/>

                                <TextBlock Text="N° facture/Bon :"  FontFamily="Tahoma" FontSize="16" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                                <TextBox x:Name="txtnfact" IsEnabled="False" HorizontalContentAlignment="Center"  Text="{Binding nfact, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Row="2" VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" FontSize="14" Foreground="#FFA020F0" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MinWidth="100" BorderBrush="#FB2D3F5D" Margin="0,0,30,0" SelectionBrush="#FB2D3F5D" />
                                <TextBlock Text="Echéance en jrs:"  FontFamily="Tahoma" FontSize="16" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="3" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                                <TextBox x:Name="txteche" HorizontalContentAlignment="Center"  Text="{Binding echeance, Mode=TwoWay, NotifyOnValidationError=true,ValidatesOnDataErrors=True, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Row="3" VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" FontSize="14" Foreground="#FFA020F0" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Left" KeyDown="txteche_KeyDown" MinWidth="100" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" Margin="0,0,30,0"  />
                                <TextBlock Text="Versement:"  FontFamily="Tahoma" FontSize="16" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="3" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Column="2" />
                                <TextBox x:Name="txtnVersement" HorizontalContentAlignment="Center"  Text="{Binding versement, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" FontFamily="Tahoma" Grid.Row="3" VerticalAlignment="Center" Grid.Column="3" FontWeight="Bold" FontSize="14" Foreground="#FFA020F0" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MinWidth="100" BorderBrush="#FB2D3F5D"  Margin="0,0,10,0" SelectionBrush="#FB2D3F5D" KeyDown="txtnVersement_KeyDown" />
                                <TextBlock Text="Mode paiem :"  FontFamily="Tahoma" FontSize="16" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Column="2" />
                                <ComboBox x:Name="Modep" VerticalAlignment="Center" SelectedValuePath="Content" SelectedValue="{Binding modep, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="4" Grid.Row="2" MinWidth="100" MinHeight="26" Margin="0,0,10,0" Foreground="#FB2D3F5D" FontFamily="Tahoma" BorderBrush="#FB2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" >
                                    <ComboBoxItem Content="A TERME" FontSize="14" IsSelected="True"/>
                                    <ComboBoxItem Content="CHEQUE" FontSize="14" />
                                    <ComboBoxItem Content="VIREMENT" FontSize="14" />
                                    <ComboBoxItem Content="ESPECES" FontSize="14" />

                                </ComboBox>
                                <TextBlock Text="Bon de commande:"  FontFamily="Tahoma" FontSize="16" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="4" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                                <TextBox x:Name="txtBon" HorizontalContentAlignment="Center"  Text="{Binding bcom, Mode=TwoWay, NotifyOnValidationError=true,ValidatesOnDataErrors=True, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Row="4" VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" FontSize="14" Foreground="#FFA020F0" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Left" MinWidth="100" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" Margin="0,0,30,0"  />
                                <TextBlock x:Name="Bénéfice" Visibility="Collapsed" Text="le bénéfice s'éléve à :" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Tahoma" FontSize="16" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Grid.Row="4" Grid.ColumnSpan="2" Grid.Column="2" FontWeight="Bold" />
                                <TextBlock x:Name="Bénéficemont" Visibility="Collapsed" Text="1900" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontFamily="Tahoma" FontSize="16" Foreground="Red" Grid.Row="4" Grid.ColumnSpan="2" Margin="10,0,0,0" FontWeight="Bold" Grid.Column="3" />
                                <Separator Grid.Row="2" Grid.ColumnSpan="4" VerticalAlignment="Bottom" Height="5" Background="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />


                            </Grid>
                        </Border>
                        <DataGrid x:Name="ReceptDatagrid"  CanUserAddRows="False" CanUserDeleteRows="True" CanUserSortColumns="True" IsReadOnly="False" SelectionMode="Single" IsTextSearchCaseSensitive="True" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" HeadersVisibility="All" AutoGenerateColumns="False" Margin="10,0" FontWeight="Bold" FontSize="16" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" GridLinesVisibility="Horizontal" FontFamily="Tahoma" Grid.Row="3" Grid.ColumnSpan="4" Grid.RowSpan="5" CurrentCellChanged="ReceptDatagrid_CurrentCellChanged" SelectedCellsChanged="ReceptDatagrid_SelectedCellsChanged" Grid.Column="1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" CellEditEnding="ReceptDatagrid_CellEditEnding" >
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                    <Setter Property="FontWeight" Value="Thin"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="Padding" Value="10,4,4,7"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                    <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                    <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                    <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="Width" Value="8"/>
                                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                    <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="Width" Value="8"/>
                                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                            <Condition Property="SortDirection" Value="{x:Null}"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="SortDirection" Value="Ascending">
                                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                    </Trigger>
                                                    <Trigger Property="SortDirection" Value="Descending">
                                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                        <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                    </Trigger>
                                                    <Trigger Property="DisplayIndex" Value="0">
                                                        <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                            <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                            <Setter Property="FontWeight" Value="Bold"></Setter>
                                            <Setter Property="FontSize" Value="20"></Setter>
                                            <Setter Property="Background" Value="#CC119EDA" />
                                            <Setter Property="Foreground" Value="White"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.Columns>

                                <DataGridTextColumn Header="code"
             Binding="{Binding codeprod}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma" FontSize="14" Foreground="#FF451571" />
                                <DataGridTextColumn Header="design"
             Binding="{Binding design}" Width="Auto" CanUserSort="True" IsReadOnly="False" FontFamily="Tahoma"  MinWidth="200" FontSize="14" Foreground="#FF451571" />
                                <DataGridTextColumn Header="Prix"  
             Binding="{Binding privente, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" IsReadOnly="True" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" FontSize="14" Foreground="#FFFF008B" />
                                <DataGridTextColumn Header="Quantite" IsReadOnly="False"
             Binding="{Binding quantite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" FontSize="14" Foreground="#FFFF008B" />
                                <DataGridTextColumn Header="tva" IsReadOnly="False"
             Binding="{Binding tva, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"    MinWidth="50" FontSize="14" Foreground="#FFFF008B" />

                                <DataGridTextColumn Header="total" IsReadOnly="True"
             Binding="{Binding Total, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"    MinWidth="50" FontSize="14" Foreground="#FFFF008B" />

                                <DataGridTextColumn Header="Péremption" IsReadOnly="True"
					Binding="{Binding perempt,StringFormat={}\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"   MinWidth="50" FontSize="14" Foreground="#FF451571" />
                                <DataGridTextColumn Header="lot" IsReadOnly="True"
             Binding="{Binding lot, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" FontSize="14" Foreground="#FF451571" />
                                <DataGridTextColumn Header="Détail" IsReadOnly="False"
             Binding="{Binding serialnumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="120" FontSize="14" Foreground="#FF451571" />
                                <DataGridTextColumn Header="Achat" IsReadOnly="False"
             Binding="{Binding previent, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="120" FontSize="14" Foreground="#FF451571" />

                            </DataGrid.Columns>
                        </DataGrid>

                        <Border x:Name="windowBorderDataDSFDSgridVisiteApayedsdsr" BorderThickness="3" CornerRadius="20" Grid.Column="1" Grid.Row="8" Margin="0" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                            <Grid x:Name="GridTotal" Grid.RowSpan="4" Margin="0"  Grid.Column="1" Grid.Row="7">
                                <Grid.RowDefinitions>

                                    <RowDefinition   />
                                    <RowDefinition  />
                                    <RowDefinition  />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Ristourne:"  FontFamily="Tahoma" FontSize="14" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />
                                <TextBox x:Name="txtRemise" HorizontalContentAlignment="Center"  Text="{Binding remise, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" FontFamily="Tahoma" VerticalAlignment="Center" Grid.Column="3" FontWeight="Bold" Foreground="Red" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Left" KeyDown="txtRemise_KeyDown" TextChanged="txtRemise_TextChanged" MinWidth="120" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" MinHeight="24"  />
                                <TextBlock Text="Timbre fiscal:"  FontFamily="Tahoma" FontSize="14" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" FontWeight="Bold" />
                                <TextBox x:Name="txtTimbre" IsEnabled="False" HorizontalContentAlignment="Center"  Text="{Binding timbre, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" FontFamily="Tahoma" VerticalAlignment="Center" Grid.Column="3" FontWeight="Bold" Foreground="Red" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Left" KeyDown="txtRemise_KeyDown"  MinWidth="120" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" Grid.Row="1" MinHeight="24"  />
                                <TextBlock Text="Net:" FontFamily="Tahoma" FontSize="14" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="2" Grid.Column="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />
                                <TextBox x:Name="txtNet" IsEnabled="False" HorizontalContentAlignment="Center"   Text="{Binding net, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" FontFamily="Tahoma" Grid.Row="2" VerticalAlignment="Center" Grid.Column="3" FontWeight="Bold" Foreground="Red" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Left" Margin="0" MinWidth="120" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" MinHeight="24"  />

                                <TextBlock Text="Total en TTC:"  FontFamily="Tahoma" FontSize="14" Margin="10,0,0,10" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />
                                <TextBox x:Name="txtTTC" IsEnabled="False" HorizontalContentAlignment="Center"  FontFamily="Tahoma" Grid.Row="2" VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" Foreground="Red" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="0,0,30,10" MinWidth="100" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" MinHeight="24"  />
                                <TextBlock Text="Montant en H.T:"  FontFamily="Tahoma" FontSize="14" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />
                                <TextBox x:Name="txtht" HorizontalContentAlignment="Center"  IsEnabled="False"  Text="{Binding ht, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" FontFamily="Tahoma" VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" Foreground="Red" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MinWidth="100" BorderBrush="#FB2D3F5D" Margin="0,0,30,0" SelectionBrush="#FB2D3F5D" MinHeight="24"  />
                                <TextBlock Text="Total TVA:"  FontFamily="Tahoma" FontSize="14" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Row="1" FontWeight="Bold" />
                                <TextBox x:Name="txttva" HorizontalContentAlignment="Center"  IsEnabled="False" Text="{Binding tva, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" FontFamily="Tahoma" Grid.Row="1" VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" Foreground="Red" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MinWidth="100" BorderBrush="#FB2D3F5D" Margin="0,0,30,0" SelectionBrush="#FB2D3F5D" MinHeight="24"  />
                            </Grid>

                        </Border>
                        <Grid Grid.ColumnSpan="1" Background="#FF451571" Grid.Row="9" Margin="10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="CONFIRMERVENTE" Content="CONFIRMER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Click="CONFIRMERVENTE_Click" FontSize="16" Grid.ColumnSpan="2" MinWidth="260" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="annulerVENTE" Grid.ColumnSpan="2" Content="ANNULER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FFFF9388" Grid.Column="2" BorderBrush="{x:Null}" Click="annulerVENTE_Click" MinWidth="250" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Grid>
                    <GridSplitter x:Name="gridspl" Visibility="Collapsed" Background="#FB2D3F5D" Grid.RowSpan="9" Grid.Column="1" HorizontalAlignment="Left" MinHeight="5" Width="5" />
                    <Grid x:Name="RéglemdfentGfsdfsrid" Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.7*" />
                            <RowDefinition   />
                            <RowDefinition  />
                            <RowDefinition   />
                            <RowDefinition   />
                            <RowDefinition  />
                            <RowDefinition   />
                            <RowDefinition   />
                            <RowDefinition   />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>

                        </Grid.ColumnDefinitions>
                        <DockPanel  Margin="10,0,0,0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                            <Button x:Name="btnNouvelleFacture" Content="" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" ToolTip="Nouvelle Facture" MinWidth="30" MinHeight="30" BorderBrush="{x:Null}" Click="btnNouvelleFacture_Click" Width="30" Height="30" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624077_add_user.ico"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="btnModifierFacture" Content="" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" ToolTip="Modifier Facture" MinWidth="30" MinHeight="30" BorderBrush="{x:Null}" Click="btnModifierFacture_Click" Width="30" Height="30" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624391_edit_user.ico"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="btnImprimmerFacture" Content="" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" ToolTip="Imprimer Facture" MinWidth="35" MinHeight="35" BorderBrush="{x:Null}" Click="btnImprimmerFacture_Click" Width="30" Height="30" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                                </Button.Background>
                            </Button>


                        </DockPanel>
                        <DataGrid x:Name="ListeDesDocuments" IsReadOnly="True" AutoGenerateColumns="False"  Grid.Row="1"  ItemsSource="{Binding}" Margin="0" Grid.ColumnSpan="2" Grid.RowSpan="8" FontFamily="Tahoma"   BorderBrush="{x:Null}" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" SelectionMode="Single"     MouseDoubleClick="ListeDesDocuments_MouseDoubleClick" MouseRightButtonUp="ListeDesDocuments_MouseRightButtonUp"   >
                           

                            <DataGrid.Columns>

                                <DataGridTextColumn Header="Dates"
					Binding="{Binding dates, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" MinWidth="50"/>
                                <DataGridTextColumn Header="Date"
					Binding="{Binding date, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto"  MinWidth="50" />
                                <DataGridTextColumn Header="N° Facture"
					Binding="{Binding nfact}" Width="Auto" MinWidth="50" />

                                <DataGridTextColumn Header="net"
					Binding="{Binding net}" Width="Auto"  MinWidth="50"  />
                                <DataGridTextColumn Header="Reste"
					Binding="{Binding reste}" Width="Auto"  MinWidth="50"   />
                                <DataGridTextColumn Header="Ht"
					Binding="{Binding ht}" Width="Auto"  MinWidth="50" />
                                <DataGridTextColumn Header="Tva"
					Binding="{Binding tva}" Width="Auto" MinWidth="50" />
                                <DataGridTextColumn Header="Remise"
					Binding="{Binding remise}" Width="Auto"  MinWidth="50"/>
                                <DataGridTextColumn Header="modep"
					Binding="{Binding modep}" Width="Auto"  MinWidth="50"  />
                                <DataGridTextColumn Header="oper"
					Binding="{Binding oper}" Width="Auto"  MinWidth="50"  />
                                <DataGridTextColumn Header="timbre"
					Binding="{Binding timbre}" Width="Auto" MinWidth="50" />
                                <DataGridTextColumn Header="Versement"
					Binding="{Binding versement}" Width="Auto" MinWidth="50"  />

                                <DataGridTextColumn Header="bcom"
					Binding="{Binding bcom}" Width="Auto"  MinWidth="50"  />
                                <DataGridTextColumn Header="heure"
					Binding="{Binding heure}" Width="Auto"  MinWidth="50" />

                                <DataGridTextColumn Header="Code client"
					Binding="{Binding codeclient}" Width="Auto"  MinWidth="50" />
                                <DataGridTextColumn Header="Raison"
					Binding="{Binding raison}" Width="Auto"  MinWidth="50"  />
                                <DataGridTextColumn Header="soldé"
					Binding="{Binding soldé}" Width="Auto"  MinWidth="50" />
                                <DataGridTextColumn Header="cle"
					Binding="{Binding cle}" Width="Auto"  MinWidth="50" />
                                <DataGridTextColumn Header="Date échéance"
					Binding="{Binding datecheance, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" MinWidth="50" />
                                <DataGridTextColumn Header="echeance"
					Binding="{Binding echeance}" Width="Auto" MinWidth="50"  />
                                <DataGridTextColumn Header="Lentille"
					Binding="{Binding Lentille}" Width="Auto" MinWidth="50"  />
                                <DataGridTextColumn Header="Monture"
					Binding="{Binding Monture}" Width="Auto" MinWidth="50"  />
                                <DataGridTextColumn Header="Auto"
					Binding="{Binding Auto}" Width="Auto" MinWidth="50"  />
                                <DataGridTextColumn Header="cleDossier"
					Binding="{Binding cleDossier}" Width="Auto" MinWidth="50"  />
                            </DataGrid.Columns>
                        </DataGrid>

                        <GridSplitter x:Name="girdspi1" Visibility="Collapsed" Background="#FB2D3F5D" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" ResizeDirection="Rows" Grid.Row="3" MinHeight="5" />
                        <Grid x:Name="NomenclatureDatagrid" Visibility="Collapsed" Grid.Row="4" Grid.RowSpan="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="37*"/>
                                <ColumnDefinition Width="513*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition   />
                                <RowDefinition Height="40" />

                            </Grid.RowDefinitions>

                            <ComboBox x:Name="CompteComboBox" DisplayMemberPath="Content"  MinWidth="150" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FB2D3F5D" BorderBrush="#FB2D3F5D" Margin="430,0,10,0"  HorizontalAlignment="Left" Grid.Column="1"  Grid.Row="2" DropDownClosed="CompteComboBox_DropDownClosed_1" >
                                <ComboBoxItem Content="Prixa" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{x:Null}" Foreground="#FF003366"/>
                                <ComboBoxItem Content="Prixb" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF003366" />
                                <ComboBoxItem Content="Prixc" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF003366" />
                            </ComboBox>
                            <CheckBox x:Name="chstockdisponible" IsChecked="False" Content="Afficher stock disponible" ToolTip="Afficher stock disponible" Margin="10,0,0,0" Checked="chstockdisponible_Checked" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontFamily="Tahoma" Unchecked="chstockdisponible_Unchecked" Foreground="#FB2D3F5D" Grid.ColumnSpan="2" />

                            <CheckBox x:Name="chcout" Visibility="Collapsed" IsChecked="False" Content="garder une seule fiche par produit " ToolTip="coût moyen pondéré(Déstockage Fifo)" Margin="210,0,0,0" Checked="chcout_Checked" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontFamily="Tahoma" Unchecked="chcout_Unchecked" Foreground="#FB2D3F5D" Grid.ColumnSpan="2" />
                            <Button x:Name="BtnReception" Margin="210,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" ToolTip="Nouvelle commande" MinWidth="35" MinHeight="35" Width="35" Height="35" Click="BtnReception_Click" Grid.ColumnSpan="2">
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/shopping-basket.png" Stretch="UniformToFill"/>
                                </Button.Background>

                                <Button.BorderBrush>
                                    <ImageBrush/>
                                </Button.BorderBrush>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="BtnService" Margin="250,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" ToolTip="Service" MinWidth="25" MinHeight="25" Width="25" Height="25" Click="BtnService_Click" Grid.ColumnSpan="2">
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/service.png" Stretch="UniformToFill"/>
                                </Button.Background>

                                <Button.BorderBrush>
                                    <ImageBrush/>
                                </Button.BorderBrush>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="BtnCreerProduit" Margin="280,0,0,0"  HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" ToolTip="Créer produit" MinWidth="25" MinHeight="25" Width="25" Height="25" Grid.ColumnSpan="2" Grid.Row="0" Click="BtnCreerProduit_Click">
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624077_add_user.ico" Stretch="UniformToFill"/>
                                </Button.Background>

                                <Button.BorderBrush>
                                    <ImageBrush/>
                                </Button.BorderBrush>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <CheckBox x:Name="chcodebare" IsChecked="False" Content="Code à barres" Foreground="#FB2D3F5D" VerticalAlignment="Center" Checked="chcodebare_Checked" Unchecked="chcodebare_Unchecked" Grid.ColumnSpan="2" HorizontalAlignment="Right" Margin="0,0,130,0" FontWeight="Bold" />

                            <TextBox x:Name="txtbarrecode" BorderThickness="1" Text="123456789" FontFamily="/NewOptics;component/Font/#C39HrP24DhTt" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontSize="36" Grid.Column="3" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="#FB2D3F5D" SelectionBrush="#FB2D3F5D" GotFocus="txtbarrecode_GotFocus" LostFocus="txtbarrecode_LostFocus_1" Margin="0" KeyDown="txtbarrecode_KeyDown"/>

                            <DataGrid x:Name="NomenclatureProduit" AutoGenerateColumns="False" GridLinesVisibility="Horizontal" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1" Margin="5,5,5,0" FontWeight="Normal" FontSize="14"  MouseDoubleClick="NomenclatureProduit_MouseDoubleClick" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="2" MouseRightButtonUp="NomenclatureProduit_MouseRightButtonUp">


                                <DataGrid.ColumnHeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="10,4,4,7"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                        <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                        <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="SortDirection" Value="{x:Null}"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="SortDirection" Value="Ascending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                        </Trigger>
                                                        <Trigger Property="SortDirection" Value="Descending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                            <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                        </Trigger>
                                                        <Trigger Property="DisplayIndex" Value="0">
                                                            <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGrid.ColumnHeaderStyle>
                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                                <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                                <Setter Property="FontWeight" Value="Bold"></Setter>
                                                <Setter Property="FontSize" Value="20"></Setter>
                                                <Setter Property="Background" Value="#CC119EDA" />
                                                <Setter Property="Foreground" Value="White"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.CellStyle>
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn IsReadOnly="True" MinWidth="100"  >

                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock   FontSize="16" FontFamily="Tahoma">
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="{} {0} {1}">
                                                            <Binding Path="Id" />
                                                            <Binding Path="design" />

                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </DataTemplate>

                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTextColumn Header="Prix vente" IsReadOnly="True"
             Binding="{Binding privente, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto"  MinWidth="30" />
                                    <DataGridTextColumn Header="Quantite" IsReadOnly="True"
             Binding="{Binding quantite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto"  MinWidth="30" />
                                    <DataGridTextColumn Header="achat"  IsReadOnly="True"
             Binding="{Binding previent, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}"  Width="Auto"  MinWidth="30"  />
                                    <DataGridTextColumn Header="Péremption" IsReadOnly="True"
					Binding="{Binding perempt,StringFormat={}\{0:dd/MM/yyyy\}}" Width="Auto"   MinWidth="50"  />

                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu >
                                        <MenuItem  Height="35" Width="270" Click="MenuItem_Click">
                                            <MenuItem.Header>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition Width="0.5*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock x:Name="textBlock1" Text="Détail image produit" VerticalAlignment="Center"/>
                                                </Grid>
                                            </MenuItem.Header>
                                            <MenuItem.Icon>
                                                <Image Source="/NewOptics;component/Images/multimedia-photo-icon-31.png"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>

                            </DataGrid>
                            <TextBlock x:Name="lhhabel" Text="Trouver :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="10,12,0,11" FontFamily="Tahoma" Grid.Row="2" Foreground="#FB2D3F5D" Grid.ColumnSpan="2" />
                            <TextBox x:Name="txtRecherche" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="43,7,0,7" Width="150" TextChanged="txtRecherche_TextChanged" FontFamily="Tahoma" Grid.Row="2" SelectionBrush="#FB2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Column="1" BorderBrush="#FB2D3F5D" />
                            <ComboBox x:Name="FamilleCombo" ToolTip="appuyer sur la touche droite de la souris pour défiltrer" MinWidth="10" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Width="150" SelectionChanged="FamilleCombo_SelectionChanged" MouseRightButtonUp="FournisseurCombo_MouseRightButtonUp" Grid.Row="2" Margin="270,0,0,0" BorderBrush="#FB2D3F5D" Grid.Column="1" >
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">

                                            <TextBlock Text="{Binding FamilleProduit1}" Foreground="#FF185900" FontWeight="Bold" FontSize="14" FontFamily="Times New Roman"  />

                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <TextBlock x:Name="lhdfdfhabel" Text="Famille :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="200,0,0,0" FontFamily="Tahoma" Foreground="#FB2D3F5D" Grid.Row="2" Grid.Column="1" />

                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem x:Name="tsdfsdfgent"  FontSize="14" FontFamily="Tahoma" Header="Montures" Margin="0">
                <Grid >
                    <Grid.RowDefinitions>

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="0.50*" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="70"   />
                            <RowDefinition />
                            <RowDefinition  />

                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />

                        </Grid.ColumnDefinitions>
                        <DockPanel Margin="10,0,0,0" HorizontalAlignment="Center">
                            <Button x:Name="btnNew" FontFamily="Tahoma" Click="btnNew_Click" Content="" FontSize="12" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Nouveau" MinWidth="35" MinHeight="35" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624077_add_user.ico"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="btnSupp" FontFamily="Tahoma" Margin="10,0,0,0" Click="btnSupp_Click" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Supprimer" MinWidth="35" MinHeight="35" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624817_delete.ico"/>
                                </Button.Background>

                            </Button>
                            <Button x:Name="btnEdit" Click="btnEdit_Click" Margin="10,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" ToolTip="Modifier" MinWidth="35" MinHeight="35" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624391_edit_user.ico"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="btnImprimer" Margin="10,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Click="btnImprimer_Click" ToolTip="Imprimer" MinWidth="40" MinHeight="40" Grid.Column="3" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="12" BorderBrush="{x:Null}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                                </Button.Background>

                            </Button>
                        </DockPanel>

                        <Border x:Name="BorderMonture" BorderThickness="3" CornerRadius="20" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Grid.Row="1" Grid.RowSpan="8" BorderBrush="#FB2D3F5D" Margin="0,0,10,0">

                            <DataGrid x:Name="MontureDatagrid" SelectionMode="Single" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}"  ScrollViewer.VerticalScrollBarVisibility="Auto" GridLinesVisibility="Horizontal"  Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="5" IsReadOnly="True" IsTextSearchCaseSensitive="True" BorderThickness="1" Grid.RowSpan="6" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HeadersVisibility="All" FontSize="12" BorderBrush="{x:Null}" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"  Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" MouseDoubleClick="MontureDatagrid_MouseDoubleClick" MouseRightButtonUp="MontureDatagrid_MouseRightButtonUp">
                                <DataGrid.ColumnHeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="25"/>
                                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="10,4,4,7"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                        <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                        <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="Width" Value="8"/>
                                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="SortDirection" Value="{x:Null}"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="SortDirection" Value="Ascending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                        </Trigger>
                                                        <Trigger Property="SortDirection" Value="Descending">
                                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                            <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                        </Trigger>
                                                        <Trigger Property="DisplayIndex" Value="0">
                                                            <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGrid.ColumnHeaderStyle>

                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                                <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                                <Setter Property="FontWeight" Value="Bold"></Setter>
                                                <Setter Property="FontSize" Value="20"></Setter>
                                                <Setter Property="Background" Value="#CC119EDA" />
                                                <Setter Property="Foreground" Value="White"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.CellStyle>

                                <DataGrid.Columns>

                                    <DataGridTextColumn Header="Date"
					Binding="{Binding Date, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                    <DataGridTemplateColumn  Width="Auto" Header="Statut">

                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Label>
                                                    <Label.Style>
                                                        <Style TargetType="Label">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=StatutVente}" Value="True">
                                                                    <Setter Property="Content" Value="Vente validée" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=StatutVente}" Value="False">
                                                                    <Setter Property="Content" Value="Devis" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Label.Style>
                                                </Label>

                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>


                                    <DataGridTextColumn Header="Date de livraison"
					Binding="{Binding Livraison, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                                    <DataGridTemplateColumn  Width="Auto" Header="Délivré">

                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Label>
                                                    <Label.Style>
                                                        <Style TargetType="Label">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=Délivre}" Value="True">
                                                                    <Setter Property="Content" Value="Monture Délivrée" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=Délivre}" Value="False">
                                                                    <Setter Property="Content" Value="Non Délivrée" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Label.Style>
                                                </Label>

                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="NCommande"
             Binding="{Binding NCommande}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="100" FontSize="22" Foreground="#FF451571" />
                                    <DataGridTextColumn Header="Cle"
             Binding="{Binding Cle}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="100" FontSize="22" Foreground="#FF451571" />

                                </DataGrid.Columns>
                            </DataGrid>
                        </Border>

                    </Grid>
                    <Grid Grid.Column="0" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" x:Name="GridMonture" IsEnabled="False">
                        <Grid.RowDefinitions>
                            <RowDefinition    />
                            <RowDefinition Height="1.5*" />
                            <RowDefinition  />
                            <RowDefinition  />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition/>
                            <ColumnDefinition />
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.ColumnSpan="4">
                            <Grid.RowDefinitions>
                                <RowDefinition    />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Label x:Name="lbl" Content="Docteur :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="2" />
                            <Label x:Name="lbl1" Content="Observation :" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="2" />
                            <Label x:Name="lbla" Content="Date :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Row="1" />
                            <Label x:Name="Doc" Content="N° Commande :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />

                            <DatePicker x:Name="DateCréation" SelectedDate="{Binding Date,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" BorderBrush="#FF2D3F5D" Grid.Row="1" />
                            <DatePicker x:Name="DatePrescription" SelectedDate="{Binding Prescription,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="5" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" BorderBrush="#FF2D3F5D" />
                            <DatePicker x:Name="DateLivraison" SelectedDate="{Binding Livraison,StringFormat={}\{0:dd/MM/yyyy\}}" VerticalAlignment="Bottom" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0" DockPanel.Dock="Right" Grid.Column="5" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" HorizontalAlignment="Center" Grid.Row="1" BorderBrush="#FF2D3F5D" />
                            <TextBox x:Name="txtObserv" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding Observ, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Row="1" Grid.Column="3" Foreground="Black" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="0,5,0,0" MinWidth="70" Grid.RowSpan="2" />
                            <TextBox x:Name="txtDocteur" Text="{Binding Docteur, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="0" MinWidth="70" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <Label x:Name="lbl2" Content="Livraison :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="4" Grid.Row="1" />
                            <Label  Content="Prescription :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="4" />
                            <CheckBox x:Name="chkEnMontage" IsChecked="{Binding EnMontage, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" FontSize="14" HorizontalAlignment="Left" Margin="0" Content="En montage" Grid.ColumnSpan="2" Grid.Column="4" Grid.Row="2" />
                            <CheckBox x:Name="chkMonté" IsChecked="{Binding Monte, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Content="Monté" FontFamily="Tahoma" FontSize="14" Grid.Row="2" HorizontalAlignment="Left" Margin="0" Grid.ColumnSpan="2" Grid.Column="5" />
                            <CheckBox x:Name="chkDélivré" IsChecked="{Binding Délivre, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Content="Délivré" FontFamily="Tahoma" FontSize="14" Grid.Row="3" HorizontalAlignment="Center" Margin="0" Grid.Column="4" Grid.ColumnSpan="2" VerticalAlignment="Center" />
                            <Button x:Name="btnvente" IsEnabled="False" Grid.Row="2" VerticalAlignment="Center" Grid.RowSpan="2" MinWidth="50" MinHeight="50" Margin="0" Content="Vente" Click="btnvente_Click" HorizontalAlignment="Center" />
                            <Label  Content="STATUT :" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" FontWeight="Bold" Grid.Column="1" Grid.Row="2" Grid.RowSpan="2" />
                            <Label x:Name="TxtStatutGlobal"  Content="Vente validée" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Grid.Column="1" Grid.Row="2" Grid.RowSpan="2" Background="#FF88FF98" Grid.ColumnSpan="2" Margin="50,0,0,0" />
                            <TextBlock  Text="{Binding NCommande, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="1" FontSize="20" FontFamily="C39HrP24DhTt" FontWeight="Bold" >
                               
                            </TextBlock>
                        </Grid>
                        <Grid Grid.ColumnSpan="2" Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}">
                            <Grid.RowDefinitions>
                                <RowDefinition    />
                                <RowDefinition    />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                                <RowDefinition Height="1.5*"  />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="OD" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" />
                            <TextBlock x:Name="ODLOIN" Text="Loin" VerticalAlignment="Center" Grid.Row="2" HorizontalAlignment="Center" />
                            <TextBlock x:Name="ODITERM" Text="Interm." VerticalAlignment="Center" Grid.Row="3" HorizontalAlignment="Center" />
                            <TextBlock x:Name="ODPRES" Text="Près" VerticalAlignment="Center" Grid.Row="4" HorizontalAlignment="Center" />
                            <TextBlock Text="Ecarts" ToolTip="écarts pulpillaires" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Right" />
                            <TextBlock Text="Sphère" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" />
                            <TextBlock Text="Cylindre" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1" />
                            <TextBlock Text="Axe" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1" />
                            <TextBlock Text="Add." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="1" />
                            <TextBlock Text="Prisme" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="1" />
                            <TextBlock Text="Base" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="6" Grid.Row="1" />
                            <TextBox x:Name="txtLoinSphereDroite" FontFamily="Tahoma" Text="{Binding LoinSphereDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Foreground="#FFFF008B" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinCylindreDroite" FontFamily="Tahoma" Text="{Binding LoinCylindreDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinAxeDroite" FontFamily="Tahoma" Text="{Binding LoinAxeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinAddDroite" FontFamily="Tahoma" Text="{Binding LoinAddDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" TextChanged="txtLoinAddDroite_TextChanged" />
                            <TextBox x:Name="txtLoinPrismeDroite" FontFamily="Tahoma" Text="{Binding LoinPrismeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinBaseDroite" FontFamily="Tahoma" Text="{Binding LoinBaseDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <TextBox x:Name="txtIntermSphereDroite" FontFamily="Tahoma" Text="{Binding IntermSphereDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermCylindreDroite" FontFamily="Tahoma" Text="{Binding IntermCylindreDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermAxeDroite" FontFamily="Tahoma" Text="{Binding IntermAxeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermAddDroite" FontFamily="Tahoma" Text="{Binding IntermAddDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermPrismeDroite" FontFamily="Tahoma" Text="{Binding IntermPrismeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermBaseDroite" FontFamily="Tahoma" Text="{Binding IntermBaseDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <TextBox x:Name="txtPresSphereDroite" FontFamily="Tahoma" Text="{Binding PresSphereDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" TextChanged="txtPresSphereDroite_TextChanged" />
                            <TextBox x:Name="txtPresCylindreDroite" FontFamily="Tahoma" Text="{Binding PresCylindreDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresAxeDroite" FontFamily="Tahoma" Text="{Binding PresAxeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresAddDroite" Visibility="Collapsed" FontFamily="Tahoma" Text="{Binding PresAddDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresPrismeDroite" FontFamily="Tahoma" Text="{Binding PresPrismeDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresBaseDroite" FontFamily="Tahoma" Text="{Binding PresBaseDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="26" />

                            <TextBox x:Name="txtEcartsDroite1" ToolTip="écarts pulpillaires" FontFamily="Tahoma" Text="{Binding EcartsDroite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBox x:Name="txtEcartsDroite2" ToolTip="écarts pulpillaires" FontFamily="Tahoma" Text="{Binding EcartsDroite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBlock Text="Ht" ToolTip="écarts de la Hauteur" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Left" Grid.Column="3" Margin="5,0,0,0" />
                            <TextBox x:Name="txtHtDoite1" ToolTip="écarts de la Hauteur" FontFamily="Tahoma" Text="{Binding HtDoite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="20,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBox x:Name="txtHtDoite2" ToolTip="écarts de la Hauteur" FontFamily="Tahoma" Text="{Binding HtDoite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="5,2,20,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBlock Text="Dctr." ToolTip="valeurs de décentrement" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Center" Grid.Column="4" Margin="5,0,0,0" Grid.ColumnSpan="2" />
                            <Button x:Name="txtDroiteFleshHaut" Visibility="Collapsed" ToolTip="valeur décentrement" FontFamily="Tahoma"  Grid.Row="5" Grid.Column="5"  Margin="20,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" MinHeight="0" Width="15" Height="15" HorizontalAlignment="Left" Click="txtDroiteFleshHaut_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshhaut.png"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="DroiteFleshBas" Visibility="Visible" ToolTip="valeur décentrement" FontFamily="Tahoma" Grid.Row="5" Grid.Column="5"  Margin="20,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="15" Height="15" MinHeight="0" HorizontalAlignment="Left" Click="DroiteFleshBas_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshbas.png"/>
                                </Button.Background>
                            </Button>
                            <TextBox x:Name="txtDroiteValeurHautBas" ToolTip="valeur décentrement" FontFamily="Tahoma" Text="{Binding DroiteValeurHautBas, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="35,2,0,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MinWidth="18" MaxHeight="25" MaxWidth="25" Width="25" Height="25" Grid.ColumnSpan="2" HorizontalAlignment="Left" />
                            <Button x:Name="txtDroiteFleshDroite" Visibility="Collapsed" ToolTip="valeur décentrement" FontFamily="Tahoma"  Grid.Row="5" Grid.Column="6"  Margin="-10,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" MinHeight="0" Width="15" Height="15" HorizontalAlignment="Center" Click="txtDroiteFleshDroite_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshdroite.png"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="txtDroiteFleshGauche" Visibility="Visible" ToolTip="valeur décentrement" FontFamily="Tahoma" Grid.Row="5" Grid.Column="6"  Margin="-10,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="15" Height="15" MinHeight="0" HorizontalAlignment="Center" Click="txtDroiteFleshGauche_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshgauche.png"/>
                                </Button.Background>
                            </Button>
                            <TextBox x:Name="txtDroiteValeurGaucheDroite" ToolTip="valeur décentrement" FontFamily="Tahoma" Text="{Binding DroiteValeurGaucheDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="0,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" HorizontalAlignment="Right" MinWidth="18" MaxHeight="25" MaxWidth="25" Width="25" Height="25" />
                            <Button x:Name="btnformule" Grid.Column="7" HorizontalAlignment="Center" VerticalAlignment="Center" Content="+/-" Click="btnformule_Click" BorderBrush="#FFFFD7BC" ToolTip="Transposer" />
                            <Button x:Name="btnVision" ToolTip="Changer le type de vision" HorizontalAlignment="Center" VerticalAlignment="Center" Content="+/-" BorderBrush="#FFFFD7BC"  Click="btnVision_Click" >
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleche-circulaire.png"/>
                                </Button.Background>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>

                            </Button>


                        </Grid>
                        <Grid Grid.ColumnSpan="2" Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition    />
                                <RowDefinition    />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                                <RowDefinition Height="1.5*"  />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="OG" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" />
                            <TextBlock x:Name="OGLOIN" Text="Loin" VerticalAlignment="Center" Grid.Row="2" HorizontalAlignment="Center" />
                            <TextBlock x:Name="OGINTERM" Text="Interm." VerticalAlignment="Center" Grid.Row="3" HorizontalAlignment="Center" />
                            <TextBlock x:Name="OGPRES" Text="Près" VerticalAlignment="Center" Grid.Row="4" HorizontalAlignment="Center" />
                            <TextBlock Text="Ecarts" ToolTip="écarts pulpillaires" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Right" />
                            <TextBlock Text="Sphère" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" />
                            <TextBlock Text="Cylindre" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1" />
                            <TextBlock Text="Axe" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1" />
                            <TextBlock Text="Add." VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="1" />
                            <TextBlock Text="Prisme" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="1" />
                            <TextBlock Text="Base" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="6" Grid.Row="1" />
                            <TextBox x:Name="txtLoinSphereGauche" FontFamily="Tahoma" Text="{Binding LoinSphereGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" Foreground="#FFFF008B" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinCylindreGauche" FontFamily="Tahoma" Text="{Binding LoinCylindreGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinAxeGauche" FontFamily="Tahoma" Text="{Binding LoinAxeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinAddGauche" FontFamily="Tahoma" Text="{Binding LoinAddGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" TextChanged="txtLoinAddGauche_TextChanged" />
                            <TextBox x:Name="txtLoinPrismeGauche" FontFamily="Tahoma" Text="{Binding LoinPrismeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtLoinBaseGauche" FontFamily="Tahoma" Text="{Binding LoinBaseGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <TextBox x:Name="txtIntermSphereGauche" FontFamily="Tahoma" Text="{Binding IntermSphereGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermCylindreGauche" FontFamily="Tahoma" Text="{Binding IntermCylindreGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermAxeGauche" FontFamily="Tahoma" Text="{Binding IntermAxeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermAddGauche" FontFamily="Tahoma" Text="{Binding IntermAddGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermPrismeGauche" FontFamily="Tahoma" Text="{Binding IntermPrismeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtIntermBaseGauche" FontFamily="Tahoma" Text="{Binding IntermBaseGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

                            <TextBox x:Name="txtPresSphereGauche" FontFamily="Tahoma" Text="{Binding PresSphereGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" TextChanged="txtPresSphereGauche_TextChanged" />
                            <TextBox x:Name="txtPresCylindreGauche" FontFamily="Tahoma" Text="{Binding PresCylindreGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresAxeGauche" FontFamily="Tahoma" Text="{Binding PresAxeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresAddGauche" Visibility="Collapsed" FontFamily="Tahoma" Text="{Binding PresAddGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresPrismeGauche" FontFamily="Tahoma" Text="{Binding PresPrismeGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                            <TextBox x:Name="txtPresBaseGauche" FontFamily="Tahoma" Text="{Binding PresBaseGauche, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Foreground="#FFFF008B" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="26" />

                            <TextBox x:Name="txtEcartsGauche1" ToolTip="écarts pulpillaires" FontFamily="Tahoma" Text="{Binding EcartsGauche1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBox x:Name="txtEcartsGauche2" ToolTip="écarts pulpillaires" FontFamily="Tahoma" Text="{Binding EcartsGauche2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBlock Text="Ht" ToolTip="écarts de la Hauteur" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Left" Grid.Column="3" Margin="5,0,0,0" />
                            <TextBox x:Name="txtHtGauche1" ToolTip="écarts de la Hauteur" FontFamily="Tahoma" Text="{Binding HtGauche1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="3" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="20,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBox x:Name="txtHtGauche2" ToolTip="écarts de la Hauteur" FontFamily="Tahoma" Text="{Binding HtGauche2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="4" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="5,2,20,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MaxHeight="25" />
                            <TextBlock Text="Dctr." ToolTip="valeurs de décentrement" VerticalAlignment="Center" Grid.Row="5" HorizontalAlignment="Center" Grid.Column="4" Margin="5,0,0,0" Grid.ColumnSpan="2" />
                            <Button x:Name="txtGaucheFleshHaut" Visibility="Collapsed" ToolTip="valeur décentrement" FontFamily="Tahoma"  Grid.Row="5" Grid.Column="5"  Margin="20,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" MinHeight="0" Width="15" Height="15" HorizontalAlignment="Left" Click="txtGaucheFleshHaut_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshhaut.png"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="txtGaucheFleshBas" Visibility="Visible" ToolTip="valeur décentrement" FontFamily="Tahoma" Grid.Row="5" Grid.Column="5"  Margin="20,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="15" Height="15" MinHeight="0" HorizontalAlignment="Left" Click="GaucheFleshBas_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshbas.png"/>
                                </Button.Background>
                            </Button>
                            <TextBox x:Name="txtGaucheValeurHautBas" ToolTip="valeur décentrement" FontFamily="Tahoma" Text="{Binding GaucheValeurHautBas, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="5" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="35,2,0,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" MinWidth="18" MaxHeight="25" MaxWidth="25" Width="25" Height="25" Grid.ColumnSpan="2" HorizontalAlignment="Left" />
                            <Button x:Name="txtGaucheFleshDroite" Visibility="Collapsed" ToolTip="valeur décentrement" FontFamily="Tahoma"  Grid.Row="5" Grid.Column="6"  Margin="-10,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" MinHeight="0" Width="15" Height="15" HorizontalAlignment="Center" Click="txtGaucheFleshDroite_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshdroite.png"/>
                                </Button.Background>
                            </Button>
                            <Button x:Name="txtGaucheFleshGauche" Visibility="Visible" ToolTip="valeur décentrement" FontFamily="Tahoma" Grid.Row="5" Grid.Column="6"  Margin="-10,2,5,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="15" Height="15" MinHeight="0" HorizontalAlignment="Center" Click="txtGaucheFleshGauche_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="/NewOptics;component/Images/fleshgauche.png"/>
                                </Button.Background>
                            </Button>
                            <TextBox x:Name="txtGaucheValeurGaucheDroite" ToolTip="valeur décentrement" FontFamily="Tahoma" Text="{Binding GaucheValeurGaucheDroite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Grid.Column="6" BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Margin="0,2" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinHeight="20" HorizontalAlignment="Right" MinWidth="18" MaxHeight="25" MaxWidth="25" Width="25" Height="25" />
                        </Grid>

                        <Grid Grid.Row="2" Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Grid.RowSpan="2" Grid.ColumnSpan="4">
                            <Grid.RowDefinitions>
                                <RowDefinition    />
                                <RowDefinition    />
                                <RowDefinition />
                                <RowDefinition  />
                                <RowDefinition  />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="MontureLoinLabel"  Text="LOIN" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,0,0"/>
                            <TextBlock x:Name="MonturePresLabel"  Text="PRES" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="2" Margin="20,0,0,0"/>
                            <TextBlock  Text="Accessoires" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="4" Grid.ColumnSpan="2" Margin="20,0,0,0"/>
                            <TextBlock  Text="Verres" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1"/>
                            <TextBlock  Text="Monture" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1"/>
                            <TextBlock  Text="Verres" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="2"/>
                            <TextBlock  Text="Monture" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="3"/>
                            <Button x:Name="DroiteEtatVerreLoin" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="1" HorizontalAlignment="Right" />
                            <Button x:Name="DroiteEtatMontureLoin" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="1" />
                            <Button x:Name="DroiteEtatVerrePres"  Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="2" />
                            <Button x:Name="DroiteEtatMonturePres"  Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="3" />
                            <Button x:Name="DroiteEtatAccessoires1Pres" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="4" />
                            <Button x:Name="DroiteEtatAccessoires2Pres" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="5" />
                            <TextBox x:Name="txtDroitPrixVerreLoin" IsEnabled="False" ToolTip="Prix de vente" Text="{Binding DroitPrixVerreLoin, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="4" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" TextChanged="txtDroitPrixVerreLoin_TextChanged" />
                            <TextBox x:Name="txtDroiteVerreLoinDesignation"  IsEnabled="True"  ToolTip="Double cliquer pour sélectionner un produit"  Text="{Binding DroiteVerreLoinDesignation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="70" Grid.ColumnSpan="2" MinHeight="25" MaxHeight="25" MouseDoubleClick="txtDroiteVerreLoinDesignation_MouseDoubleClick" />
                            <Button x:Name="GaucheStatutLoinVerre" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="4" HorizontalAlignment="Right" />
                            <TextBox x:Name="txtGauchePrixVerreLoin" IsEnabled="False" ToolTip="Prix de vente"  Text="{Binding GauchePrixVerreLoin, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="7" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" TextChanged="txtGauchePrixVerreLoin_TextChanged" />
                            <TextBox x:Name="txtGaucheVerreLoinDesignation" ToolTip="Double cliquer pour sélectionner un produit" IsEnabled="True" Text="{Binding GaucheVerreLoinDesignation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="5" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="70" Grid.ColumnSpan="2" MinHeight="25" MaxHeight="25" MouseDoubleClick="txtGaucheVerreLoinDesignation_MouseDoubleClick" />
                            <TextBox x:Name="txtPrixTotalLoin" ToolTip="Prix de vente" IsEnabled="False" FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" TextChanged="txtPrixTotalLoin_TextChanged" />

                            <TextBox x:Name="txtPrixMontureLoin" IsEnabled="False" ToolTip="Prix de vente" Text="{Binding PrixMontureLoin, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="1" TextChanged="txtPrixMontureLoin_TextChanged" />
                            <TextBox x:Name="txtMontureDesignationLoin" ToolTip="Double cliquer pour sélectionner une monture" IsEnabled="True" Text="{Binding MontureDesignationLoin, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="200" Grid.ColumnSpan="3" MinHeight="25" MaxHeight="25" Grid.Row="1" MouseDoubleClick="txtMontureDesignationLoin_MouseDoubleClick" />
                            <ComboBox x:Name="ModeVenteLoin" IsEditable="True" SelectedValue="{Binding ModeVenteLoin, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" MinWidth="10" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="#FF2D3F5D" Margin="5,0,0,0" Grid.Column="5" Grid.Row="1" MinHeight="25" MaxHeight="25" Grid.ColumnSpan="3" >
                                <ComboBoxItem Content="Vente" FontSize="14"/>
                                <ComboBoxItem Content="Vente + Gar." FontSize="14" />
                                <ComboBoxItem Content="Offre Co." FontSize="14" />
                                <ComboBoxItem Content="Mont. Client" FontSize="14" />
                                <ComboBoxItem Content="Réparation" FontSize="14" />
                                <ComboBoxItem Content="Echange" FontSize="14" />
                                <ComboBoxItem Content="Sous Garant" FontSize="14" />

                            </ComboBox>
                            <TextBox x:Name="txtDroiteVerrePresDesignation"  IsEnabled="True"  ToolTip="Double cliquer pour sélectionner un produit"  Text="{Binding DroiteVerrePresDesignation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="70" Grid.ColumnSpan="2" MinHeight="25" MaxHeight="25" Grid.Row="2" MouseDoubleClick="txtDroiteVerrePresDesignation_MouseDoubleClick" />
                            <TextBox x:Name="txtDroitPrixVerrePres" IsEnabled="False" ToolTip="Prix de vente" Text="{Binding DroitPrixVerrePres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="4" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="2" TextChanged="txtDroitPrixVerrePres_TextChanged" />
                            <Button x:Name="GaucheStatutPresVerre" Visibility="Collapsed" MinWidth="20" MinHeight="20" MaxWidth="10" MaxHeight="10" Grid.Column="4" HorizontalAlignment="Right" Grid.Row="2" />
                            <TextBox x:Name="txtGaucheVerrePresDesignation" ToolTip="Double cliquer pour sélectionner un produit" IsEnabled="True" Text="{Binding GaucheVerrePresDesignation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="5" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="70" Grid.ColumnSpan="2" MinHeight="25" MaxHeight="25" Grid.Row="2" MouseDoubleClick="txtGaucheVerrePresDesignation_MouseDoubleClick" Height="25" />
                            <TextBox x:Name="txtGauchePrixVerrePres" IsEnabled="False" ToolTip="Prix de vente"  Text="{Binding GauchePrixVerrePres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="7" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" HorizontalAlignment="Left" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="2" TextChanged="txtGauchePrixVerrePres_TextChanged" />
                            <TextBox x:Name="txtPrixTotalPres" ToolTip="Prix de vente" IsEnabled="False"  FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="2" TextChanged="txtPrixTotalPres_TextChanged" />
                            <TextBox x:Name="txtMontureDesignationPres" ToolTip="Double cliquer pour sélectionner une monture" IsEnabled="True" Text="{Binding MontureDesignationPres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="200" Grid.ColumnSpan="3" MinHeight="25" MaxHeight="25" Grid.Row="3" MouseDoubleClick="txtMontureDesignationPres_MouseDoubleClick" />
                            <ComboBox x:Name="ModeVentePres" IsEditable="True" SelectedValue="{Binding ModeVentePres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedValuePath="Content" DockPanel.Dock="Left" MinWidth="10" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" BorderBrush="#FF2D3F5D" Margin="5,0,0,0" Grid.Column="5" Grid.Row="3" MinHeight="25" MaxHeight="25" Grid.ColumnSpan="3" >
                                <ComboBoxItem Content="Vente" FontSize="14"/>
                                <ComboBoxItem Content="Vente + Gar." FontSize="14" />
                                <ComboBoxItem Content="Offre Co." FontSize="14" />
                                <ComboBoxItem Content="Mont. Client" FontSize="14" />
                                <ComboBoxItem Content="Réparation" FontSize="14" />
                                <ComboBoxItem Content="Echange" FontSize="14" />
                                <ComboBoxItem Content="Sous Garant" FontSize="14" />

                            </ComboBox>
                            <TextBox x:Name="txtPrixMonturePres" IsEnabled="False" ToolTip="Prix de vente" Text="{Binding PrixMonturePres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="3" TextChanged="txtPrixMonturePres_TextChanged" />

                            <TextBox x:Name="txtAccessoires1" ToolTip="Double cliquer pour sélectionner un produit" IsEnabled="True" Text="{Binding Accessoires1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="200" Grid.ColumnSpan="3" MinHeight="25" MaxHeight="25" Grid.Row="4" MouseDoubleClick="txtAccessoires1_MouseDoubleClick" />
                            <TextBox x:Name="txtAccessoires2" ToolTip="Double cliquer pour sélectionner un produit" IsEnabled="True" Text="{Binding Accessoires2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="2" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="200" Grid.ColumnSpan="3" MinHeight="25" MaxHeight="25" Grid.Row="5" MouseDoubleClick="txtAccessoires2_MouseDoubleClick" />
                            <TextBox x:Name="txtAccessoiresPrix1" IsEnabled="False" ToolTip="Prix de vente"  Text="{Binding AccessoiresPrix1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="7" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="4" HorizontalAlignment="Left" TextChanged="txtAccessoiresPrix1_TextChanged" />
                            <TextBox x:Name="txtAccessoiresQuantite1" ToolTip="Quantite"  Text="{Binding AccessoiresQuantite1, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="5" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,25,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="4" Grid.ColumnSpan="2" TextChanged="txtAccessoiresQuantite1_TextChanged" />
                            <TextBlock Text="x" Grid.Row="4" Grid.Column="5" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                            <TextBlock Text="=" Grid.Row="4" Grid.Column="6" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                            <TextBox x:Name="txtAccessoiresPrix2" ToolTip="Prix de vente" IsEnabled="False"  Text="{Binding AccessoiresPrix2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="7" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" MaxWidth="50" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="5" HorizontalAlignment="Left" TextChanged="txtAccessoiresPrix2_TextChanged" />
                            <TextBox x:Name="txtAccessoiresQuantite2" ToolTip="Quantite"  Text="{Binding AccessoiresQuantite2, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="5" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,25,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="5" Grid.ColumnSpan="2" TextChanged="txtAccessoiresQuantite2_TextChanged" />
                            <TextBlock Text="x" Grid.Row="5" Grid.Column="5" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                            <TextBlock Text="=" Grid.Row="5" Grid.Column="6" HorizontalAlignment="Right" FontSize="24" Foreground="#FFFF008B" VerticalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" />
                            <TextBox x:Name="txtPrixTotalAcc1"  IsEnabled="False"  FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="4" TextChanged="txtPrixTotalAcc1_TextChanged" />
                            <TextBox x:Name="txtPrixTotalAcc2"  IsEnabled="False" FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="5" TextChanged="txtPrixTotalAcc2_TextChanged" />

                            <TextBlock Text="TOTAL" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Row="6" Grid.Column="7"/>
                            <TextBlock Text="Encaissé" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Row="6" Grid.Column="5"/>
                            <TextBox x:Name="txtMontantTotalENC" ToolTip="Versement" IsEnabled="False" Text="{Binding Encaissé, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="6" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="6" />
                            <TextBlock Text="Remise" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.Row="6" Grid.Column="3"/>
                            <TextBox x:Name="txtRemiseMonture" ToolTip="Remise" IsEnabled="True" Text="{Binding Remise, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="4" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" Grid.Row="6" TextChanged="txtRemiseMonture_TextChanged" />

                            <TextBox x:Name="txtMontantTotal" ToolTip="Prix total" IsEnabled="False" Text="{Binding  MontantTotal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Column="8" Foreground="Red" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" SelectionBrush="#FF2D3F5D" Margin="5,0,0,0" MinWidth="50" MinHeight="25" MaxHeight="25" KeyDown="txtDroiteVerreLoinDesignation_KeyDown" Grid.Row="6" />

                            <Button x:Name="ValiderMonture" Grid.ColumnSpan="5" Content="Valider" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Grid.Row="7" Margin="0,0,40,0" Click="ValiderMonture_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="AnnulerMonture" Grid.ColumnSpan="5" Content="Échap = ANNULER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FFFF9388" Grid.Column="4" BorderBrush="{x:Null}" Grid.Row="7" Margin="40,0,0,0" Click="AnnulerMonture_Click" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                <Setter Property="MinHeight" Value="25"/>
                                                <Setter Property="FontWeight" Value="Bold"/>

                                                <Setter Property="Padding" Value="5,6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">

                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                </Trigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>



                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>

        </TabControl>
    </Grid>
    </Window>
