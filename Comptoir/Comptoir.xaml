<Window xmlns:dxga="http://schemas.devexpress.com/winfx/2008/xaml/gauges"  x:Class="NewOptics.Comptoir.Comptoir"
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"

   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
   xmlns:sys="clr-namespace:System;assembly=mscorlib"
 xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
     xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
   xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
  
   xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"

        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NewOptics.Comptoir"
        mc:Ignorable="d"
        Title="Comptoir" Height="650" Width="1150" ResizeMode="CanResize"  Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" WindowStyle="ThreeDBorderWindow"  Icon="/NewOptics;component/Dent6.ico" WindowStartupLocation="CenterScreen"  BorderThickness="0"  BorderBrush="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" ShowInTaskbar="True" KeyDown="DXWndow_KeyDown" PreviewTextInput="DXWindow_PreviewTextInput"  >


    <Grid >
        <Grid.Resources>
            <x:Array x:Key="source" Type="{x:Type sys:Int32}">
                <sys:Int32>1</sys:Int32>
                <sys:Int32>2</sys:Int32>
                <sys:Int32>3</sys:Int32>
            </x:Array>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="80px" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="0.25*"  />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.3*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TextBlock x:Name="labdel" Text="Famille :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="10,0,0,0" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />

        <TextBlock x:Name="label" Text="Trouver :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="10,0,0,0" FontFamily="Tahoma" Grid.Row="3" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <TextBox x:Name="txtRecherche" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="80,0,0,0" Width="100"   FontFamily="Tahoma" Grid.Row="3" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF003366" Foreground="#FF003366" TextChanged="txtRecherche_TextChanged" />
        <Button x:Name="BtnReception" Margin="180,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" ToolTip="Nouvelle commande" MinWidth="30" MinHeight="30" Width="30" Height="30" Click="BtnReception_Click" Grid.Row="3">
            <Button.Background>
                <ImageBrush ImageSource="/NewOptics;component/Images/shopping-basket.png" Stretch="UniformToFill"/>
            </Button.Background>

            <Button.BorderBrush>
                <ImageBrush/>
            </Button.BorderBrush>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.BasedOn>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">

                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="BtnService" Margin="220,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" ToolTip="Service" MinWidth="25" MinHeight="25" Width="25" Height="25" Grid.Row="3" Click="BtnService_Click">
            <Button.Background>
                <ImageBrush ImageSource="/NewOptics;component/Images/service.png" Stretch="UniformToFill"/>
            </Button.Background>

            <Button.BorderBrush>
                <ImageBrush/>
            </Button.BorderBrush>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.BasedOn>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">

                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Button.Style>
        </Button>

        <ComboBox x:Name="FamilleCombo" ToolTip="appuyer sur la touche droite de la souris pour défiltrer"  DockPanel.Dock="Left" MinWidth="10" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF003366" Width="120" MouseRightButtonUp="FournisseurCombo_MouseRightButtonUp" BorderBrush="#FF003366" Margin="100,0,0,0" SelectionChanged="FamilleCombo_SelectionChanged" >
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">

                        <TextBlock Text="{Binding FamilleProduit1}" Foreground="#FF003366" FontWeight="Bold" FontSize="14" FontFamily="Times New Roman"  />

                    </StackPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <ComboBox x:Name="CompteComboBox" DisplayMemberPath="Content" DockPanel.Dock="Left" MinWidth="10" VerticalAlignment="Top" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF003366" BorderBrush="#FF003366" Margin="200,0,0,0" HorizontalAlignment="Left" DropDownClosed="CompteComboBox_DropDownClosed" SelectionChanged="CompteComboBox_SelectionChanged"   >
            <ComboBoxItem Content="Prixa" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{x:Null}" Foreground="#FF003366"/>
            <ComboBoxItem Content="Prixb" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF003366" />
            <ComboBoxItem Content="Prixc" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FF003366" />
        </ComboBox>
        <CheckBox x:Name="chstockdisponible" IsChecked="False" Content="Afficher stock disponible" ToolTip="Afficher stock disponible" Margin="10,0,0,0" Checked="chstockdisponible_Checked" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold" FontFamily="Tahoma" Unchecked="chstockdisponible_Unchecked" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <CheckBox x:Name="chcout" IsChecked="False" Visibility="Collapsed"  Content="garder une seule fiche par produit " ToolTip="coût moyen pondéré(Déstockage Fifo)" Margin="10,0,0,0" Checked="chcout_Checked" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontWeight="Bold" FontFamily="Tahoma" Unchecked="chcout_Unchecked" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />

        <DataGrid x:Name="NomenclatureProduit" Grid.Row="0" CanUserAddRows="False" IsReadOnly="False" Grid.RowSpan="2" HeadersVisibility="Row"  AutoGenerateColumns="False" Margin="10,60,5,10" FontWeight="Normal" FontSize="18" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" FontFamily="Tahoma" MouseDoubleClick="NomenclatureProduit_MouseDoubleClick" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}">
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="MinHeight" Value="25"/>
                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="10,4,4,7"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="BorderThickness" Value="0,0,0,3"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                    <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                    <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                    <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                    <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="SortDirection" Value="{x:Null}"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                    </MultiTrigger>
                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                        <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                    </Trigger>
                                    <Trigger Property="DisplayIndex" Value="0">
                                        <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                            <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                            <Setter Property="FontSize" Value="20"></Setter>
                            <Setter Property="Background" Value="#CC119EDA" />
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn IsReadOnly="True" MinWidth="100"  >

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock   FontSize="16" FontFamily="Tahoma">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{} {0} {1}">
                                        <Binding Path="Id" />
                                        <Binding Path="design" />

                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>

                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Prix vente"
             Binding="{Binding privente, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True"  MinWidth="30" FontSize="16" FontWeight="Bold" Foreground="#FFFF008B" />
                <DataGridTextColumn Header="Quantite"
             Binding="{Binding quantite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="30" FontSize="16" Foreground="#FF451571" FontWeight="Bold" />
                <DataGridTextColumn Header="achat" 
             Binding="{Binding previent, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True"  MinWidth="30" FontSize="16" FontWeight="Bold" Foreground="#FF00FFE8" />
                <DataGridTextColumn Header="Péremption" IsReadOnly="True"
					Binding="{Binding perempt,StringFormat={}\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"   MinWidth="50" FontSize="22" Foreground="#FF451571" />
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu >
                    <MenuItem  Height="35" Width="270" Click="MenuItem_Click">
                        <MenuItem.Header>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="0.5*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="textBlock1" Text="Détail image produit" VerticalAlignment="Center"/>
                            </Grid>
                        </MenuItem.Header>
                        <MenuItem.Icon>
                            <Image Source="/NewOptics;component/Images/multimedia-photo-icon-31.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>

        </DataGrid>
        <GridSplitter Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Grid.RowSpan="3" Grid.Column="1" Width="10" HorizontalAlignment="Left" />
        <TabControl x:Name="Détail" BorderThickness="0" Margin="10,0" FontFamily="Tahoma" Grid.Column="1" Grid.RowSpan="3" >
            <TabItem x:Name="Achattab"  FontSize="18.667" FontFamily="Times New Roman" Header="Vente comptoir" Margin="0" BorderBrush="#FFB27300">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50px" />
                        <RowDefinition Height="50px" />
                        <RowDefinition Height="50px" />
                        <RowDefinition Height="3*" />
                        <RowDefinition Height="50px" />
                        <RowDefinition Height="50px" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.ColumnSpan="4" Grid.RowSpan="3" Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}">
                        <Grid.RowDefinitions>
                            <RowDefinition  />
                            <RowDefinition />
                            <RowDefinition  />

                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition/>
                            <ColumnDefinition />
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock  Text="Nbre produits" FontFamily="Tahoma" Foreground="#FFFFD7BC" FontSize="22" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1"/>
                        <TextBlock x:Name="nbreproduit"  Text="0" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="20" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1"/>
                        <TextBlock  Text="Vendeur" FontFamily="Tahoma" Foreground="#FFFF008B" FontSize="22" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <TextBlock x:Name="Memberusertext"  Text="Administrateur" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="20" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1"/>
                        <TextBlock  Text="Tarif Appliqué" FontFamily="Tahoma" Foreground="#FFFFDF72" FontSize="22" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2"/>
                        <TextBlock x:Name="txttarif" Grid.Row="2" Text="Vous devez choisir un tarif" FontFamily="Tahoma" Foreground="#FF00FFE8" FontSize="20" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Grid.ColumnSpan="2"/>
                        <CheckBox x:Name="chimprimer" IsChecked="False" Content="Imprimer un ticket" Grid.Column="2" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" VerticalAlignment="Top" />
                        <CheckBox x:Name="chcodebare" IsChecked="False" Content="Utiliser code à barres" Grid.Column="2" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" VerticalAlignment="Bottom" Checked="chcodebare_Checked" Unchecked="chcodebare_Unchecked" />
                        <TextBox x:Name="txtbarrecode" BorderThickness="1" Text="123456789" FontFamily="/NewOptics;component/Font/#C39HrP24DhTt" Foreground="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" FontSize="36" Grid.Column="3" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Background="{x:Null}" BorderBrush="#FF00FFE8" SelectionBrush="#FFFF008B" GotFocus="txtbarrecode_GotFocus" LostFocus="txtbarrecode_LostFocus_1" KeyDown="txtbarrecode_KeyDown"/>

                        <Border x:Name="windowBorderDatagridCasTraiter" IsEnabled="True" BorderThickness="3" Grid.Column="2" Grid.ColumnSpan="2" Grid.RowSpan="2" CornerRadius="20" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="5,5,5,0" Background="#FF003366" HorizontalAlignment="Right" Width="300" Grid.Row="1" >

                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition  />
                                    <RowDefinition />
                                    <RowDefinition  />

                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <DockPanel 
                                   Grid.ColumnSpan="2" Grid.RowSpan="3"  >
                                    <Label x:Name="digitalGaugeControl1" Content="999 999 999.99" FontSize="30" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontFamily="Arial Black" Foreground="White" />

                                </DockPanel>
                            </Grid>
                        </Border>


                    </Grid>
                    <DataGrid x:Name="ReceptDatagrid" CanUserAddRows="False" CanUserDeleteRows="True" CanUserSortColumns="True" IsReadOnly="False" SelectionMode="Single" IsTextSearchCaseSensitive="True" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" HeadersVisibility="All" AutoGenerateColumns="False" Margin="0" FontWeight="Bold" FontSize="22" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" GridLinesVisibility="Horizontal" FontFamily="Tahoma" Grid.Row="3" Grid.ColumnSpan="4" Grid.RowSpan="2" CurrentCellChanged="ReceptDatagrid_CurrentCellChanged" SelectedCellsChanged="ReceptDatagrid_SelectedCellsChanged" MouseDoubleClick="ReceptDatagrid_MouseDoubleClick" >
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                <Setter Property="FontWeight" Value="Thin"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="10,4,4,7"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                                <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="SortDirection" Value="{x:Null}">
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="SortDirection" Value="{x:Null}"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                </MultiTrigger>
                                                <Trigger Property="SortDirection" Value="Ascending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                </Trigger>
                                                <Trigger Property="SortDirection" Value="Descending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                    <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                </Trigger>
                                                <Trigger Property="DisplayIndex" Value="0">
                                                    <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                        <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                        <Setter Property="FontWeight" Value="Bold"></Setter>
                                        <Setter Property="FontSize" Value="20"></Setter>
                                        <Setter Property="Background" Value="#CC119EDA" />
                                        <Setter Property="Foreground" Value="White"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>

                            <DataGridTextColumn Header="code"
             Binding="{Binding codeprod}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="100" FontSize="22" Foreground="#FF451571" />
                            <DataGridTextColumn Header="design"
             Binding="{Binding design}" Width="Auto" CanUserSort="True" IsReadOnly="False"  FontFamily="Tahoma"  MinWidth="200" FontSize="22" Foreground="#FF451571" />
                            <DataGridTextColumn Header="Prix"  
             Binding="{Binding privente, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" IsReadOnly="True" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" FontSize="22" Foreground="#FFFF008B" />
                            <DataGridTextColumn Header="Quantite" IsReadOnly="True"
             Binding="{Binding quantite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" FontSize="22" Foreground="#FFFF008B" />
                            <DataGridTextColumn Header="total" IsReadOnly="True"
             Binding="{Binding Total, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"    MinWidth="50" FontSize="22" Foreground="#FFFF008B" />

                            <DataGridTextColumn Header="Péremption" IsReadOnly="True"
					Binding="{Binding perempt,StringFormat={}\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"   MinWidth="50" FontSize="22" Foreground="#FF451571" />
                            <DataGridTextColumn Header="lot" IsReadOnly="True"
             Binding="{Binding lot, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" FontSize="22" Foreground="#FF451571" />
                            <DataGridTextColumn Header="Détail" IsReadOnly="False"
             Binding="{Binding serialnumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="120" FontSize="22" Foreground="#FF451571" />


                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.ColumnSpan="4" Background="#FF451571" Grid.Row="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition/>
                            <ColumnDefinition />
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="CONFIRMERVENTE"  Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FF88FF98" BorderBrush="{x:Null}" Click="CONFIRMERVENTE_Click" FontSize="14" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>

                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                            <TextBlock TextWrapping="Wrap">F12 = CONFIRMER VENTE(avec interface de confirmation)<LineBreak/></TextBlock>

                        </Button>
                        <Button x:Name="CONFIRMERVENTEDIRECT" Content="F8 = CONFIRMER VENTE" Foreground="Black" Background="#FFFFDF72" BorderBrush="{x:Null}" Grid.Column="1" Grid.ColumnSpan="2" Click="CONFIRMERVENTEDIRECT_Click" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>

                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button x:Name="annulerVENTE" Content="Échap = ANNULER VENTE" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Background="#FFFF9388" Grid.Column="3" BorderBrush="{x:Null}" Click="annulerVENTE_Click" FontSize="14" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>

                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem x:Name="Achadttab"  FontSize="18.667" FontFamily="Times New Roman" Header="Historique des Ventes de la journée" Margin="0" BorderBrush="#FFB27300">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="67*"/>
                        <ColumnDefinition Width="765*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>

                        <RowDefinition Height="1*" />
                        <RowDefinition Height="50px" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Grid HorizontalAlignment="Stretch" Grid.Row="1" Grid.ColumnSpan="2" >
                        <Grid.RowDefinitions>

                            <RowDefinition Height="1*" />

                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1.5*"/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnNewRéglement" Content="" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="100,0,0,0" ToolTip="Nouveau Réglement" MinWidth="35" MinHeight="35" Click="btnNewRéglement_Click" BorderBrush="{x:Null}" Grid.ColumnSpan="2" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                            <Button.Background>
                                <ImageBrush ImageSource="/NewOptics;component/Images/47105.png"/>
                            </Button.Background>
                        </Button>

                        <Label Content="Total Versements : " VerticalAlignment="Center" HorizontalAlignment="Left" Margin="-80,0,0,0" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF003366" Grid.Column="2" />
                        <Label Content="Total Ventes : " VerticalAlignment="Center" HorizontalAlignment="Left" Margin="-100,0,0,0" FontFamily="Tahoma" FontWeight="Bold" FontSize="14" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Column="1" />
                        <TextBox x:Name="TxtCreebit" HorizontalContentAlignment="Center" IsReadOnly="True" IsEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="60,0,0,0" DockPanel.Dock="Right"   Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="Red" BorderThickness="3" FontFamily="Tahoma" FontSize="14" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Grid.Column="2" Width="100" Height="25" SelectionBrush="#FF003366" VerticalContentAlignment="Center" />

                        <TextBox x:Name="txtDebit" HorizontalContentAlignment="Center" IsReadOnly="True" IsEnabled="False"  HorizontalAlignment="Left" VerticalAlignment="Center" DockPanel.Dock="Right"    Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="Red" BorderThickness="3" Margin="10,0,0,0" FontFamily="Tahoma" FontSize="14" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Grid.Column="1" Width="80" Height="25" SelectionBrush="#FF003366" VerticalContentAlignment="Center" />
                        <Label Content="Reste :" HorizontalAlignment="Left" Margin="0" FontFamily="Tahoma" FontWeight="Bold" VerticalAlignment="Center" FontSize="14" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Column="3" />

                        <TextBox x:Name="txtSolde" IsEnabled="False" HorizontalContentAlignment="Center"  IsReadOnly="True" HorizontalAlignment="Left" VerticalAlignment="Center" DockPanel.Dock="Right"   Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="Red" BorderThickness="3" FontSize="14" FontFamily="Tahoma" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Grid.Column="3" Margin="70,0,0,0" Width="100" Height="25" SelectionBrush="#FF003366" />

                    </Grid>

                    <DataGrid x:Name="PatientDataGrid"  AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="0,10,0,0" IsReadOnly="True" IsTextSearchCaseSensitive="True" Grid.ColumnSpan="2" FontFamily="Tahoma" GridLinesVisibility="None"  Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" SelectionMode="Single" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SelectionChanged="PatientDataGrid_SelectionChanged" MouseRightButtonDown="PatientDataGrid_MouseRightButtonDown">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="10,4,4,7"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                <Custom:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                                <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="SortDirection" Value="{x:Null}">
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="SortDirection" Value="{x:Null}"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                </MultiTrigger>
                                                <Trigger Property="SortDirection" Value="Ascending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                </Trigger>
                                                <Trigger Property="SortDirection" Value="Descending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                    <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                </Trigger>
                                                <Trigger Property="DisplayIndex" Value="0">
                                                    <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                        <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                        <Setter Property="FontWeight" Value="Bold"></Setter>
                                        <Setter Property="FontSize" Value="20"></Setter>
                                        <Setter Property="Background" Value="#CC119EDA" />
                                        <Setter Property="Foreground" Value="White"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>


                            <DataGridTextColumn Header="Date"
					Binding="{Binding date, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                            <DataGridTextColumn Header="N° Facture"
					Binding="{Binding nfact}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />

                            <DataGridTextColumn Header="Raison"
					Binding="{Binding raison}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                            <DataGridTextColumn Header="net"
					Binding="{Binding net}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" Foreground="#FF451571" />

                            <DataGridTextColumn Header="Versement"
					Binding="{Binding versement}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" Foreground="#FFFF008B" />
                            <DataGridTextColumn Header="Remise"
					Binding="{Binding remise}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" Foreground="#FF009E15" />
                            <DataGridTextColumn Header="Reste"
					Binding="{Binding reste}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" Foreground="#FF020402" />
                            <DataGridTextColumn Header="oper"
					Binding="{Binding oper}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                            <DataGridTextColumn Header="heure"
					Binding="{Binding heure}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />




                        </DataGrid.Columns>
                    </DataGrid>

                    <DataGrid x:Name="dETAILDatagrid" CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="True" IsReadOnly="True"  IsTextSearchCaseSensitive="True" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" HeadersVisibility="All" AutoGenerateColumns="False" Margin="0" FontWeight="Bold" FontSize="22" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" GridLinesVisibility="Horizontal" FontFamily="Tahoma" Grid.Row="3" Grid.ColumnSpan="4" Grid.RowSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"  >
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                <Setter Property="FontWeight" Value="Thin"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="10,4,4,7"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                                <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="SortDirection" Value="{x:Null}">
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="SortDirection" Value="{x:Null}"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                </MultiTrigger>
                                                <Trigger Property="SortDirection" Value="Ascending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                </Trigger>
                                                <Trigger Property="SortDirection" Value="Descending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                    <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                </Trigger>
                                                <Trigger Property="DisplayIndex" Value="0">
                                                    <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                        <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                                        <Setter Property="FontWeight" Value="Bold"></Setter>
                                        <Setter Property="FontSize" Value="20"></Setter>
                                        <Setter Property="Background" Value="#CC119EDA" />
                                        <Setter Property="Foreground" Value="White"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>

                            <DataGridTextColumn Header="code"
             Binding="{Binding codeprod}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="100" FontSize="22" Foreground="#FF451571" />
                            <DataGridTextColumn Header="design"
             Binding="{Binding design}" Width="Auto" CanUserSort="True" IsReadOnly="True" FontFamily="Tahoma"  MinWidth="200" FontSize="22" Foreground="#FF451571" />
                            <DataGridTextColumn Header="Prix vente" IsReadOnly="False"
             Binding="{Binding privente, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" FontSize="22" Foreground="#FFFF008B" />
                            <DataGridTextColumn Header="Quantite" IsReadOnly="False"
             Binding="{Binding quantite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" FontSize="22" Foreground="#FFFF008B" />
                            <DataGridTextColumn Header="total" IsReadOnly="True"
             Binding="{Binding Total, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"    MinWidth="50" FontSize="22" Foreground="#FFFF008B" />

                            <DataGridTextColumn Header="Péremption" IsReadOnly="True"
					Binding="{Binding perempt,StringFormat={}\{0:dd/MM/yyyy\}}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"   MinWidth="50" FontSize="22" Foreground="#FF451571" />
                            <DataGridTextColumn Header="lot" IsReadOnly="True"
             Binding="{Binding lot, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="50" FontSize="22" Foreground="#FF451571" />
                            <DataGridTextColumn Header="N° serie" IsReadOnly="True"
             Binding="{Binding serialnumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="Auto" CanUserSort="True" FontFamily="Tahoma"  MinWidth="120" FontSize="22" Foreground="#FF451571" />


                        </DataGrid.Columns>
                    </DataGrid>



                </Grid>
            </TabItem>
        </TabControl>
    </Grid>

</Window>
