<dx:DXWindow xmlns:dxco="http://schemas.devexpress.com/winfx/2008/xaml/controls"  x:Class="GestionClinique.EtatEtRapport.Dictionnaire"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
              xmlns:rv="clr-namespace:Microsoft.Reporting.WinForms;assembly=Microsoft.ReportViewer.WinForms" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GestionClinique.EtatEtRapport"
                          xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
     dx:ThemeManager.ThemeName="Office2010Black"
        mc:Ignorable="d"
        Title="LEXIQUE POUR LES DIABÉTIQUES" Height="500" Width="850"  ResizeMode="NoResize"  Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" ShowIcon="True" ShowTitle="True"  WindowStyle="ThreeDBorderWindow"  Icon="/Diabetosoft;component/Dent6.ico" WindowStartupLocation="CenterScreen"  BorderThickness="0"  BorderBrush="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" ShowInTaskbar="True"  >
    <Grid>
        
        <dx:DXTabControl >
            <dx:DXTabItem Header="Auto terminologie">
                <dxco:Book x:Name="BookDic" Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" FontFamily="Tahoma" AnimationSpeed="5" AnimationRate="24">
                    <dxco:Book.PageTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.Background>
                                    <ImageBrush Opacity="0.1" ImageSource="/Diabetosoft;component/Images/Dent6.ico"/>
                                </Grid.Background>
                                <Grid.ColumnDefinitions>

                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="80px"/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="1" Text="{Binding Mot}"  TextWrapping="Wrap" FontFamily="Tahoma" FontSize="36" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Foreground="Red" Margin="20,0,0,0" TextDecorations="Underline"/>

                                <TextBox Grid.Row="1" IsReadOnly="True" VerticalContentAlignment="Center" HorizontalAlignment="Center" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" AcceptsReturn="True" Grid.Column="1" Text="{Binding Explication}" Grid.RowSpan="4" FontFamily="Tahoma" FontSize="24" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" BorderBrush="{x:Null}" Background="{x:Null}" VerticalAlignment="Stretch" HorizontalContentAlignment="Left" MinHeight="280" MinWidth="400">
                                <TextBox.Template>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <ControlTemplate.Resources>
                                            <Storyboard x:Key="enterGotFocus">
                                                <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                            </Storyboard>
                                            <Storyboard x:Key="exitGotFocus">
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                            </Storyboard>
                                            <Storyboard x:Key="enterHasText">
                                                <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                            </Storyboard>
                                            <Storyboard x:Key="exitHasText">
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                            </Storyboard>
                                        </ControlTemplate.Resources>
                                        <Grid>
                                            <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Grid x:Name="PART_InnerGrid" Margin="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition x:Name="TextColumn" Width="*"/>
                                                    <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition x:Name="ButtonRow" Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
                                                <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                                <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <ContentControl x:Name="PART_FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                                                    <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </ContentControl>
                                                <Button x:Name="PART_ClearText" Content="{Binding (Controls:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Width="{Binding (Controls:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <Button.Visibility>
                                                        <Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                            <Binding.Converter>
                                                                <BooleanToVisibilityConverter/>
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </Button.Visibility>
                                                </Button>
                                            </Grid>
                                            <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Left">
                                                <Setter Property="Grid.Column" TargetName="PART_ClearText" Value="0"/>
                                                <Setter Property="Grid.Column" TargetName="PART_Message" Value="1"/>
                                                <Setter Property="Width" TargetName="TextColumn" Value="Auto"/>
                                                <Setter Property="Width" TargetName="ButtonColumn" Value="*"/>
                                                <Setter Property="Grid.Column" TargetName="PART_ContentHost" Value="1"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                                <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                                    <Condition Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiDataTrigger.EnterActions>
                                                <MultiDataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiDataTrigger.ExitActions>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Right"/>
                                                    <Condition Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                                <Setter Property="Grid.ColumnSpan" TargetName="PART_Message" Value="2"/>
                                            </MultiDataTrigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                            </Trigger>
                                            <Trigger Property="IsReadOnly" Value="True">
                                                <Setter Property="IsEnabled" TargetName="PART_ClearText" Value="False"/>
                                                <Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
                                            </Trigger>
                                            <Trigger Property="IsFocused" Value="True">

                                            </Trigger>
                                            <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">

                                            </Trigger>
                                            <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">

                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
                                                    <Condition Property="IsFocused" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <MultiTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiTrigger.EnterActions>
                                                <MultiTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiTrigger.ExitActions>
                                            </MultiTrigger>
                                            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation AutoReverse="True" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="Base"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Setter Property="Effect" TargetName="Base">
                                                    <Setter.Value>
                                                        <DropShadowEffect BlurRadius="10" Color="{DynamicResource BlackColor}" Opacity="0" ShadowDepth="0"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                                                <Setter Property="Effect" TargetName="Base" Value="{x:Null}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </TextBox.Template>
                                </TextBox>
                            </Grid>
                        </DataTemplate>
                    </dxco:Book.PageTemplate>
                </dxco:Book>
            </dx:DXTabItem>

            <dx:DXTabItem Header="Liste des terminologies" Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}">
                <Grid Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}">
               <Grid.RowDefinitions>
                    <RowDefinition Height="50px"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                    <DockPanel  Margin="15,6,6,4" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" Grid.ColumnSpan="2" Grid.Column="1">
                        <TextBlock x:Name="label" Text="Trouver :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="5,0,0,0" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                        <TextBox x:Name="txtRecherche" VerticalAlignment="Center" Margin="0" FontFamily="Tahoma" TextChanged="txtRecherche_TextChanged" />
                    </DockPanel>
                    <DataGrid x:Name="MotifDataGrid" MouseDoubleClick="ClientsDataGrid_MouseDoubleClick" Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="20,0,20,20" IsReadOnly="True" IsTextSearchCaseSensitive="True" FontSize="14" FontFamily="Arial" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="10,4,4,7"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                                <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="SortDirection" Value="{x:Null}">
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="SortDirection" Value="{x:Null}"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                </MultiTrigger>
                                                <Trigger Property="SortDirection" Value="Ascending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                </Trigger>
                                                <Trigger Property="SortDirection" Value="Descending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                    <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                </Trigger>
                                                <Trigger Property="DisplayIndex" Value="0">
                                                    <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id"
             Binding="{Binding Id}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                            <DataGridTemplateColumn  Width="Auto" Header="Mot">

                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock FontWeight="Bold" FontFamily="Tahoma" FontSize="16">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0}">

                                                    <Binding Path="Mot" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                            <DataGridTextColumn Header="Explication"
             Binding="{Binding Explication}" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />




                        </DataGrid.Columns>
                    </DataGrid>


                </Grid>
            </dx:DXTabItem>
        </dx:DXTabControl> 
    
    </Grid>
</dx:DXWindow>
