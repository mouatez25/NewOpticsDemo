<Controls:MetroWindow x:Class="GestionClinique.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                            xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:local="clr-namespace:GestionClinique"
        mc:Ignorable="d"
        Title="www.medicalogitech.com" Height="650" Width="1000" Icon="Images\Dent6.ico" ResizeMode="CanResizeWithGrip" WindowStartupLocation="CenterScreen"  Closed="MetroWindow_Closed" FontFamily="Times New Roman" TitleCaps="False" >
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands x:Name="ProgresseBar">

            <Button x:Name="chatbutton" Visibility="Hidden" Content="Discussion instantanée" Click="Button_Click_2" FontFamily="Century Schoolbook" FontSize="16" />

            <StackPanel x:Name="MenuStackPanel" Orientation="Horizontal" Visibility="Hidden">
                <StackPanel.Background>
                    <ImageBrush/>
                </StackPanel.Background>
                <Menu x:Name="MenuPrincipale" IsMainMenu="True" Grid.ColumnSpan="2" Grid.Column="1" HorizontalAlignment="Right" FontFamily="Century Schoolbook" FontSize="16">
                    <Menu.Background>
                        <ImageBrush/>
                    </Menu.Background>
                    <MenuItem Header="_Status" FontFamily="Century Schoolbook" FontSize="16">
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>


                        <MenuItem x:Name="statusmenu" Header="_Visible" IsCheckable="True"   FontFamily="Century Schoolbook" FontSize="16" Unchecked="MenuItem_Unchecked" Checked="MenuItem_Checked" >
                            <MenuItem.Background>
                                <ImageBrush/>
                            </MenuItem.Background>
                        </MenuItem>
                        <MenuItem Header="_Exit" FontFamily="Century Schoolbook" FontSize="16" Click="MenuItem_Click_17" >
                            <MenuItem.Background>
                                <ImageBrush/>
                            </MenuItem.Background>
                        </MenuItem>
                    </MenuItem>



                    <MenuItem Header="_Rendez vous" FontFamily="Century Schoolbook" FontSize="16">
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>
                        <MenuItem Header="_Prendre rendez vous" FontFamily="Century Schoolbook" FontSize="16" Click="MenuItem_Click_1">
                            <MenuItem.Background>
                                <ImageBrush/>
                            </MenuItem.Background>
                            <MenuItem.Icon>
                                <Image Source="Images/1459362267_stack_of_photos.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Agenda medecin" FontFamily="Century Schoolbook" FontSize="16" Click="MenuItem_Click_7">
                            <MenuItem.Background>
                                <ImageBrush/>
                            </MenuItem.Background>
                            <MenuItem.Icon>
                                <Image Source="Images/1459361047_calendar.png"/>
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator />
                        <MenuItem Header="_Nouvelle Fiche Patient" FontFamily="Century Schoolbook" FontSize="16" Click="MenuItem_Click_8">
                            <MenuItem.Background>
                                <ImageBrush/>
                            </MenuItem.Background>
                            <MenuItem.Icon>
                                <Image Source="Images/1459362267_stack_of_photos.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Liste des patients" FontFamily="Century Schoolbook" FontSize="16" Click="MenuItem_Click_9">
                            <MenuItem.Background>
                                <ImageBrush/>
                            </MenuItem.Background>
                            <MenuItem.Icon>
                                <Image Source="Images/1459362003_conference.png"/>
                            </MenuItem.Icon>
                        </MenuItem>


                    </MenuItem>
                  
                    


                    <MenuItem Header="_Stock" FontFamily="Century Schoolbook" FontSize="16">
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>
                        <MenuItem Header="_Mon Stock" FontFamily="Century Schoolbook" FontSize="16" Click="MenuItem_Click_3">
                            <MenuItem.Background>
                                <ImageBrush/>
                            </MenuItem.Background>
                            <MenuItem.Icon>
                                <Image Source="Images/1459362267_stack_of_photos.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Liste Dci" FontFamily="Century Schoolbook" FontSize="16" Click="MenuItem_Click_6"  >
                            <MenuItem.Background>
                                <ImageBrush/>
                            </MenuItem.Background>
                            <MenuItem.Icon>
                                <Image Source="Images/1459362267_stack_of_photos.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Liste produit" FontFamily="Century Schoolbook" FontSize="16" Click="MenuItem_Click_5" >
                            <MenuItem.Background>
                                <ImageBrush/>
                            </MenuItem.Background>
                            <MenuItem.Icon>
                                <Image Source="Images/1459362267_stack_of_photos.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Nomenclature produit" FontFamily="Century Schoolbook" FontSize="16" Click="MenuItem_Click_4">
                            <MenuItem.Background>
                                <ImageBrush/>
                            </MenuItem.Background>
                            <MenuItem.Icon>
                                <Image Source="Images/1459361047_calendar.png"/>
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator />
                        <MenuItem x:Name="fichef" Header="_Nouvelle fiche fournisseur" FontFamily="Century Schoolbook" FontSize="16" Click="fichef_Click">

                        </MenuItem>
                        <MenuItem Header="_Liste des fournisseurs" FontFamily="Century Schoolbook" FontSize="16" Click="MenuItem_Click_2">
                            <MenuItem.Background>
                                <ImageBrush/>
                            </MenuItem.Background>
                            <MenuItem.Icon>
                                <Image Source="Images/1459362003_conference.png"/>
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator />
                        <MenuItem x:Name="Achat" Header="_Nouvelle facture achat" FontFamily="Century Schoolbook" FontSize="16" Click="Achat_Click" >

                        </MenuItem>
                        <MenuItem x:Name="listachat" Header="_Liste des achats" FontFamily="Century Schoolbook" FontSize="16" Click="listachat_Click" >
                            <MenuItem.Background>
                                <ImageBrush/>
                            </MenuItem.Background>
                            <MenuItem.Icon>
                                <Image Source="Images/1459362003_conference.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem x:Name="AchatVVente" Header="_Achats et ventes d'un produit" FontFamily="Century Schoolbook" FontSize="16" Click="AchatVVente_Click" >
                            <MenuItem.Background>
                                <ImageBrush/>
                            </MenuItem.Background>
                            <MenuItem.Icon>
                                <Image Source="Images/1459362003_conference.png"/>
                            </MenuItem.Icon>
                        </MenuItem>


                    </MenuItem>









                    <MenuItem Header="_Rapport" FontFamily="Century Schoolbook" FontSize="16">
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>
                        <MenuItem x:Name="LettretEST" IsEnabled="True" Visibility="Collapsed"  Header="Lettre"  FontFamily="Century Schoolbook" FontSize="16" Click="LettretEST_Click"  />
                        <MenuItem x:Name="RéglementPatient" Header="Règlements Patients"  FontFamily="Century Schoolbook" FontSize="16" Click="RéglementPatient_Click"  />
                        <MenuItem x:Name="CasatraiterPatient" Header="Cas à traiter Patients"  FontFamily="Century Schoolbook" FontSize="16" Click="CasatraiterPatient_Click"    />
                        <Separator />
                        <MenuItem x:Name="Rapport" Header="Certificat/Attestation"  FontFamily="Century Schoolbook" FontSize="16" Click="Rapport_Click"    />

                        <Separator />
                        <MenuItem x:Name="Tableaudebord" Header="Tableau de bord"  FontFamily="Century Schoolbook" FontSize="16" Click="Tableaudebord_Click"    />

                    </MenuItem>
                    <MenuItem Header="_Réference" FontFamily="Century Schoolbook" FontSize="16">
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>
                       
                      
                        <MenuItem x:Name="test4" Header="l'alimentation de la personne diabétique"  FontFamily="Century Schoolbook" FontSize="16" Click="test4_Click"   />

                      

                    </MenuItem>
                    <MenuItem Header="_Paramétre" FontFamily="Century Schoolbook" FontSize="16">
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>
                        <MenuItem Header="Ouvrir" Click="MenuItem_Click" FontFamily="Century Schoolbook" FontSize="16"  />
                        <MenuItem x:Name="btnecran" Visibility="Collapsed" IsEnabled="False" Header="Ecran acceuil"  FontFamily="Century Schoolbook" FontSize="16" Click="btnecran_Click"  />
                        <!--Separator /!-->
                        <!--MenuItem x:Name="btnNavigateur" IsEnabled="True"  Header="Auto-formation video"  FontFamily="Times New Roman" FontSize="16" Click="btnNavigateur_Click"  /!-->

                    </MenuItem>

                </Menu>
                <Rectangle Width="20" Height="20"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" />
                    </Rectangle.OpacityMask>
                </Rectangle>
                <TextBlock x:Name="labelSession" Margin="4 0 0 0"
                   VerticalAlignment="Center" Foreground="Black"
                   />

            </StackPanel>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Grid>
     
        <Grid x:Name="gridAuthentification" ShowGridLines="False" Visibility="Visible">
            <Grid.Background>
                <ImageBrush ImageSource="Images/logo-v3.png"/>
            </Grid.Background>

            <Label x:Name="loginLabelUName" HorizontalAlignment="Left" Margin="155,180,0,0" VerticalAlignment="Top" FontFamily="Century Schoolbook" FontWeight="Bold" Content="Mot de passe:" FontSize="16"/>

            <PasswordBox x:Name="txtMotDePasse" Background="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Height="23" Margin="277,180,313,0" VerticalAlignment="Top" KeyUp="txtMotDePasse_KeyUp"/>



            <Label x:Name="loginLabelIP"  HorizontalAlignment="Left" Margin="160,220,0,255" FontFamily="Century Schoolbook" FontSize="16" FontWeight="Bold" VerticalAlignment="Top">Adresse IP:</Label>
            <TextBox x:Name="loginTxtBoxIP" Margin="277,220,313,0" Text="192.168.1.100" Height="23" VerticalAlignment="Top" FontFamily="Century Schoolbook"/>
            <Button x:Name="Confirmer" Margin="277,10,313,222" Click="buttonConnect_Click"  Height="23" VerticalAlignment="Bottom" Background="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}" Foreground="White" FontFamily="Century Schoolbook" FontSize="14.667" Content="Connexion">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush8}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush7}"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                                    <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
            </Button>
            <CheckBox x:Name="chboxstatus" Margin="277,0,0,170" IsChecked="True" VerticalAlignment="Bottom" HorizontalAlignment="Left" Content="Visible" FontFamily="Century Schoolbook" FontSize="18" />


            <Label x:Name="textBlock" Height="44" VerticalAlignment="Bottom" FontFamily="Times New Roman" FontSize="22" Foreground="#FF0068FF" HorizontalAlignment="Right"  Width="800" Margin="0,0,20,71" Background="{x:Null}" FontStyle="Italic" FontWeight="Bold" FlowDirection="RightToLeft">Déconnecté</Label>

            <Label x:Name="textBlockss" Height="57" FontFamily="Times New Roman" Visibility="Collapsed" FontSize="25" Foreground="Black" Margin="16,16,0,0"  VerticalAlignment="Top" HorizontalAlignment="Left" Width="450" Background="{x:Null}" FontWeight="Bold" FontStyle="Italic">
                Medicus</Label>
            <Polyline x:Name="loginPolyLine"  StrokeThickness="2" Points="140,90 140,300 700,300 700,90 140,90" Margin="30,50,50,100" />
            <TextBlock Text="{Binding ElementName=pbStatus, Path=Value, StringFormat={}{0:0}%}" HorizontalAlignment="Center"  VerticalAlignment="Bottom" Margin="0,0,0,20" />
            <Grid Grid.Column="0" Opacity="1" Height="150" VerticalAlignment="Bottom" Width="300" HorizontalAlignment="Left" Margin="10,0,0,0" Grid.Row="1">
                <Button x:Name="btnLogoDent" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="100" Height="100" BorderBrush="{x:Null}" Click="btnLogoDent_Click" Margin="0,0,0,10" >
                    <Button.Background>
                        <ImageBrush ImageSource="Images/Dent6.ico"/>
                    </Button.Background>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                    <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                    <Setter Property="Padding" Value="5,6"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">

                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Button.Style>

                </Button>
                <Label x:Name="lblLogiciel" FontFamily="Impact" Content="Logiciel de gestion cabinet medical" FontSize="14" VerticalAlignment="Bottom" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" HorizontalAlignment="Left" Margin="0,40,0,0" />
            </Grid>
        </Grid>



        <Grid x:Name="gridhome" ShowGridLines="False" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition  />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Vertical" Grid.Column="0" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Grid.RowSpan="2">
                <Button x:Name="btnHome"  Height="80" Width="80" Margin="0,20,0,0" Cursor="Hand" Foreground="Goldenrod" Click="Button_Click_3" Content="" FontSize="10" FontFamily="Times New Roman" TextOptions.TextHintingMode="Animated" TextOptions.TextFormattingMode="Display" FontStretch="Condensed" MouseMove="btnHome_MouseMove" MouseLeave="btnHome_MouseLeave" ToolTip="Acceuil" IsKeyboardFocusWithinChanged="btnHome_IsKeyboardFocusWithinChanged"  >
                    <Button.BorderBrush>
                        <ImageBrush/>
                    </Button.BorderBrush>
                    <Button.Background>
                        <ImageBrush ImageSource="Images/maison-maison-icone-3648-128.png" TileMode="FlipXY"/>
                    </Button.Background>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>

                                </Trigger>
                               
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    
                </Button>

                <Button x:Name="btnAgenda"  Height="80" Width="80" Margin="0,20,0,0" Cursor="Hand" Foreground="Goldenrod" Click="Button_Click" Content="" FontSize="10" FontFamily="Times New Roman" TextOptions.TextHintingMode="Animated" TextOptions.TextFormattingMode="Display" FontStretch="Condensed" ToolTip="Agenda" MouseMove="btnAgenda_MouseMove" MouseLeave="btnAgenda_MouseLeave"  >
                    <Button.BorderBrush>
                        <ImageBrush/>
                    </Button.BorderBrush>
                    <Button.Background>
                        <ImageBrush ImageSource="RendezVous/prisedeRDV2.png" TileMode="FlipXY"/>
                    </Button.Background>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>

                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>


                <Button x:Name="btnListePatient"  Height="80" Width="80" Margin="0,20,0,0" Cursor="Hand" Foreground="Goldenrod" Click="Button_Click_1" Content="" FontSize="10" FontFamily="Times New Roman" MouseMove="btnListePatient_MouseMove" MouseLeave="btnListePatient_MouseLeave" ToolTip="Liste des Patients">
                    <Button.BorderBrush>
                        <ImageBrush/>
                    </Button.BorderBrush>
                    <Button.Background>
                        <ImageBrush ImageSource="Images/contact-liste-preferences-icone-4360-128.png" TileMode="FlipXY"/>
                    </Button.Background>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">

                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>

                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>




                <Button x:Name="btnListeRendezVous"  Height="80" Width="80" Margin="0,20,0,0" Cursor="Hand" Foreground="Goldenrod" Click="btnListeRendezVous_Click" Content="" FontSize="10" FontFamily="Times New Roman" MouseMove="btnListeRendezVous_MouseMove" MouseLeave="btnListeRendezVous_MouseLeave" ToolTip="Rendez Vous">
                    <Button.BorderBrush>
                        <ImageBrush/>
                    </Button.BorderBrush>
                    <Button.Background>
                        <ImageBrush ImageSource="Images/24h-rendez-vous-nouveaux-icone-3660-128.png" TileMode="FlipXY"/>
                    </Button.Background>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">

                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>

                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="btnListeDepense"  Height="80" Width="80" Margin="0,20,0,0" Cursor="Hand" Click="btnListeDepense_Click" Content="" FontFamily="Times New Roman" FontSize="10" Foreground="Goldenrod" ToolTip="Caisse" MouseMove="btnListeDepense_MouseMove" MouseLeave="btnListeDepense_MouseLeave">
                    <Button.BorderBrush>
                        <ImageBrush/>
                    </Button.BorderBrush>
                    <Button.Background>
                        <ImageBrush ImageSource="Images/bookkeeping-accounting.png"/>
                    </Button.Background>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                              
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                    <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                    <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                    <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                    <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                 
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                               
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>


            </StackPanel>




            <Frame x:Name="FrameInterieur" 
 
  JournalOwnership="OwnsJournal" 
  NavigationUIVisibility="Hidden" Grid.Column="1" Grid.RowSpan="2" />



        </Grid>

    </Grid>
</Controls:MetroWindow>
