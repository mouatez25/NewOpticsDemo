//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewOptics.SVC {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Commande", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Commande : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AxeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CLEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CylindreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CylindreMoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CylindrePlusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCommandeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateReceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignProduitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EffectuéeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilleProduitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FournisseurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdFamilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdFournisseurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdProduitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OeilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrismeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> QuantiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RéceptionéeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SphèreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string clecabField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Add {
            get {
                return this.AddField;
            }
            set {
                if ((object.ReferenceEquals(this.AddField, value) != true)) {
                    this.AddField = value;
                    this.RaisePropertyChanged("Add");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Axe {
            get {
                return this.AxeField;
            }
            set {
                if ((object.ReferenceEquals(this.AxeField, value) != true)) {
                    this.AxeField = value;
                    this.RaisePropertyChanged("Axe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Base {
            get {
                return this.BaseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseField, value) != true)) {
                    this.BaseField = value;
                    this.RaisePropertyChanged("Base");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CLE {
            get {
                return this.CLEField;
            }
            set {
                if ((object.ReferenceEquals(this.CLEField, value) != true)) {
                    this.CLEField = value;
                    this.RaisePropertyChanged("CLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cylindre {
            get {
                return this.CylindreField;
            }
            set {
                if ((object.ReferenceEquals(this.CylindreField, value) != true)) {
                    this.CylindreField = value;
                    this.RaisePropertyChanged("Cylindre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CylindreMoin {
            get {
                return this.CylindreMoinField;
            }
            set {
                if ((this.CylindreMoinField.Equals(value) != true)) {
                    this.CylindreMoinField = value;
                    this.RaisePropertyChanged("CylindreMoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CylindrePlus {
            get {
                return this.CylindrePlusField;
            }
            set {
                if ((this.CylindrePlusField.Equals(value) != true)) {
                    this.CylindrePlusField = value;
                    this.RaisePropertyChanged("CylindrePlus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCommande {
            get {
                return this.DateCommandeField;
            }
            set {
                if ((this.DateCommandeField.Equals(value) != true)) {
                    this.DateCommandeField = value;
                    this.RaisePropertyChanged("DateCommande");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateReception {
            get {
                return this.DateReceptionField;
            }
            set {
                if ((this.DateReceptionField.Equals(value) != true)) {
                    this.DateReceptionField = value;
                    this.RaisePropertyChanged("DateReception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DesignProduit {
            get {
                return this.DesignProduitField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignProduitField, value) != true)) {
                    this.DesignProduitField = value;
                    this.RaisePropertyChanged("DesignProduit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Effectuée {
            get {
                return this.EffectuéeField;
            }
            set {
                if ((this.EffectuéeField.Equals(value) != true)) {
                    this.EffectuéeField = value;
                    this.RaisePropertyChanged("Effectuée");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilleProduit {
            get {
                return this.FamilleProduitField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilleProduitField, value) != true)) {
                    this.FamilleProduitField = value;
                    this.RaisePropertyChanged("FamilleProduit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fournisseur {
            get {
                return this.FournisseurField;
            }
            set {
                if ((object.ReferenceEquals(this.FournisseurField, value) != true)) {
                    this.FournisseurField = value;
                    this.RaisePropertyChanged("Fournisseur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdClient {
            get {
                return this.IdClientField;
            }
            set {
                if ((this.IdClientField.Equals(value) != true)) {
                    this.IdClientField = value;
                    this.RaisePropertyChanged("IdClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdFamille {
            get {
                return this.IdFamilleField;
            }
            set {
                if ((this.IdFamilleField.Equals(value) != true)) {
                    this.IdFamilleField = value;
                    this.RaisePropertyChanged("IdFamille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdFournisseur {
            get {
                return this.IdFournisseurField;
            }
            set {
                if ((this.IdFournisseurField.Equals(value) != true)) {
                    this.IdFournisseurField = value;
                    this.RaisePropertyChanged("IdFournisseur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdProduit {
            get {
                return this.IdProduitField;
            }
            set {
                if ((this.IdProduitField.Equals(value) != true)) {
                    this.IdProduitField = value;
                    this.RaisePropertyChanged("IdProduit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oeil {
            get {
                return this.OeilField;
            }
            set {
                if ((object.ReferenceEquals(this.OeilField, value) != true)) {
                    this.OeilField = value;
                    this.RaisePropertyChanged("Oeil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prisme {
            get {
                return this.PrismeField;
            }
            set {
                if ((object.ReferenceEquals(this.PrismeField, value) != true)) {
                    this.PrismeField = value;
                    this.RaisePropertyChanged("Prisme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixAchat {
            get {
                return this.PrixAchatField;
            }
            set {
                if ((this.PrixAchatField.Equals(value) != true)) {
                    this.PrixAchatField = value;
                    this.RaisePropertyChanged("PrixAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Quantite {
            get {
                return this.QuantiteField;
            }
            set {
                if ((this.QuantiteField.Equals(value) != true)) {
                    this.QuantiteField = value;
                    this.RaisePropertyChanged("Quantite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaisonClient {
            get {
                return this.RaisonClientField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonClientField, value) != true)) {
                    this.RaisonClientField = value;
                    this.RaisePropertyChanged("RaisonClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarque {
            get {
                return this.RemarqueField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarqueField, value) != true)) {
                    this.RemarqueField = value;
                    this.RaisePropertyChanged("Remarque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Réceptionée {
            get {
                return this.RéceptionéeField;
            }
            set {
                if ((this.RéceptionéeField.Equals(value) != true)) {
                    this.RéceptionéeField = value;
                    this.RaisePropertyChanged("Réceptionée");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sphère {
            get {
                return this.SphèreField;
            }
            set {
                if ((object.ReferenceEquals(this.SphèreField, value) != true)) {
                    this.SphèreField = value;
                    this.RaisePropertyChanged("Sphère");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string clecab {
            get {
                return this.clecabField;
            }
            set {
                if ((object.ReferenceEquals(this.clecabField, value) != true)) {
                    this.clecabField = value;
                    this.RaisePropertyChanged("clecab");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Recouf", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Recouf : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FournisseurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> NonfiscalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> avoirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> cmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int codefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datecreatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateecheanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> echeanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> fiscalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> htField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> netField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nfactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string opercreatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> remiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> resteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> soldéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> tvaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> versementField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fournisseur {
            get {
                return this.FournisseurField;
            }
            set {
                if ((object.ReferenceEquals(this.FournisseurField, value) != true)) {
                    this.FournisseurField = value;
                    this.RaisePropertyChanged("Fournisseur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Nonfiscal {
            get {
                return this.NonfiscalField;
            }
            set {
                if ((this.NonfiscalField.Equals(value) != true)) {
                    this.NonfiscalField = value;
                    this.RaisePropertyChanged("Nonfiscal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> avoir {
            get {
                return this.avoirField;
            }
            set {
                if ((this.avoirField.Equals(value) != true)) {
                    this.avoirField = value;
                    this.RaisePropertyChanged("avoir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> cmp {
            get {
                return this.cmpField;
            }
            set {
                if ((this.cmpField.Equals(value) != true)) {
                    this.cmpField = value;
                    this.RaisePropertyChanged("cmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int codef {
            get {
                return this.codefField;
            }
            set {
                if ((this.codefField.Equals(value) != true)) {
                    this.codefField = value;
                    this.RaisePropertyChanged("codef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> datecreat {
            get {
                return this.datecreatField;
            }
            set {
                if ((this.datecreatField.Equals(value) != true)) {
                    this.datecreatField = value;
                    this.RaisePropertyChanged("datecreat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dateecheance {
            get {
                return this.dateecheanceField;
            }
            set {
                if ((this.dateecheanceField.Equals(value) != true)) {
                    this.dateecheanceField = value;
                    this.RaisePropertyChanged("dateecheance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> echeance {
            get {
                return this.echeanceField;
            }
            set {
                if ((this.echeanceField.Equals(value) != true)) {
                    this.echeanceField = value;
                    this.RaisePropertyChanged("echeance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> fiscal {
            get {
                return this.fiscalField;
            }
            set {
                if ((this.fiscalField.Equals(value) != true)) {
                    this.fiscalField = value;
                    this.RaisePropertyChanged("fiscal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ht {
            get {
                return this.htField;
            }
            set {
                if ((this.htField.Equals(value) != true)) {
                    this.htField = value;
                    this.RaisePropertyChanged("ht");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> net {
            get {
                return this.netField;
            }
            set {
                if ((this.netField.Equals(value) != true)) {
                    this.netField = value;
                    this.RaisePropertyChanged("net");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nfact {
            get {
                return this.nfactField;
            }
            set {
                if ((object.ReferenceEquals(this.nfactField, value) != true)) {
                    this.nfactField = value;
                    this.RaisePropertyChanged("nfact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string opercreat {
            get {
                return this.opercreatField;
            }
            set {
                if ((object.ReferenceEquals(this.opercreatField, value) != true)) {
                    this.opercreatField = value;
                    this.RaisePropertyChanged("opercreat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> remise {
            get {
                return this.remiseField;
            }
            set {
                if ((this.remiseField.Equals(value) != true)) {
                    this.remiseField = value;
                    this.RaisePropertyChanged("remise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> reste {
            get {
                return this.resteField;
            }
            set {
                if ((this.resteField.Equals(value) != true)) {
                    this.resteField = value;
                    this.RaisePropertyChanged("reste");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> soldé {
            get {
                return this.soldéField;
            }
            set {
                if ((this.soldéField.Equals(value) != true)) {
                    this.soldéField = value;
                    this.RaisePropertyChanged("soldé");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> tva {
            get {
                return this.tvaField;
            }
            set {
                if ((this.tvaField.Equals(value) != true)) {
                    this.tvaField = value;
                    this.RaisePropertyChanged("tva");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> versement {
            get {
                return this.versementField;
            }
            set {
                if ((this.versementField.Equals(value) != true)) {
                    this.versementField = value;
                    this.RaisePropertyChanged("versement");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Recept", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Recept : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CommandeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CoutMoyenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FicheProdfAvoirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FournisseurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdFamilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cabField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> codeprodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> collisageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string designField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nfactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> peremptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> previentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> prixaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> prixbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> prixcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> quantiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> tvaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CommandeId {
            get {
                return this.CommandeIdField;
            }
            set {
                if ((this.CommandeIdField.Equals(value) != true)) {
                    this.CommandeIdField = value;
                    this.RaisePropertyChanged("CommandeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CoutMoyen {
            get {
                return this.CoutMoyenField;
            }
            set {
                if ((this.CoutMoyenField.Equals(value) != true)) {
                    this.CoutMoyenField = value;
                    this.RaisePropertyChanged("CoutMoyen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Famille {
            get {
                return this.FamilleField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilleField, value) != true)) {
                    this.FamilleField = value;
                    this.RaisePropertyChanged("Famille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FicheProdfAvoir {
            get {
                return this.FicheProdfAvoirField;
            }
            set {
                if ((this.FicheProdfAvoirField.Equals(value) != true)) {
                    this.FicheProdfAvoirField = value;
                    this.RaisePropertyChanged("FicheProdfAvoir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fournisseur {
            get {
                return this.FournisseurField;
            }
            set {
                if ((object.ReferenceEquals(this.FournisseurField, value) != true)) {
                    this.FournisseurField = value;
                    this.RaisePropertyChanged("Fournisseur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdFamille {
            get {
                return this.IdFamilleField;
            }
            set {
                if ((this.IdFamilleField.Equals(value) != true)) {
                    this.IdFamilleField = value;
                    this.RaisePropertyChanged("IdFamille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cab {
            get {
                return this.cabField;
            }
            set {
                if ((object.ReferenceEquals(this.cabField, value) != true)) {
                    this.cabField = value;
                    this.RaisePropertyChanged("cab");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cf {
            get {
                return this.cfField;
            }
            set {
                if ((this.cfField.Equals(value) != true)) {
                    this.cfField = value;
                    this.RaisePropertyChanged("cf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> codeprod {
            get {
                return this.codeprodField;
            }
            set {
                if ((this.codeprodField.Equals(value) != true)) {
                    this.codeprodField = value;
                    this.RaisePropertyChanged("codeprod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> collisage {
            get {
                return this.collisageField;
            }
            set {
                if ((this.collisageField.Equals(value) != true)) {
                    this.collisageField = value;
                    this.RaisePropertyChanged("collisage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string design {
            get {
                return this.designField;
            }
            set {
                if ((object.ReferenceEquals(this.designField, value) != true)) {
                    this.designField = value;
                    this.RaisePropertyChanged("design");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lot {
            get {
                return this.lotField;
            }
            set {
                if ((object.ReferenceEquals(this.lotField, value) != true)) {
                    this.lotField = value;
                    this.RaisePropertyChanged("lot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nfact {
            get {
                return this.nfactField;
            }
            set {
                if ((object.ReferenceEquals(this.nfactField, value) != true)) {
                    this.nfactField = value;
                    this.RaisePropertyChanged("nfact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> perempt {
            get {
                return this.peremptField;
            }
            set {
                if ((this.peremptField.Equals(value) != true)) {
                    this.peremptField = value;
                    this.RaisePropertyChanged("perempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> previent {
            get {
                return this.previentField;
            }
            set {
                if ((this.previentField.Equals(value) != true)) {
                    this.previentField = value;
                    this.RaisePropertyChanged("previent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> prixa {
            get {
                return this.prixaField;
            }
            set {
                if ((this.prixaField.Equals(value) != true)) {
                    this.prixaField = value;
                    this.RaisePropertyChanged("prixa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> prixb {
            get {
                return this.prixbField;
            }
            set {
                if ((this.prixbField.Equals(value) != true)) {
                    this.prixbField = value;
                    this.RaisePropertyChanged("prixb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> prixc {
            get {
                return this.prixcField;
            }
            set {
                if ((this.prixcField.Equals(value) != true)) {
                    this.prixcField = value;
                    this.RaisePropertyChanged("prixc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> quantite {
            get {
                return this.quantiteField;
            }
            set {
                if ((this.quantiteField.Equals(value) != true)) {
                    this.quantiteField = value;
                    this.RaisePropertyChanged("quantite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> tva {
            get {
                return this.tvaField;
            }
            set {
                if ((this.tvaField.Equals(value) != true)) {
                    this.tvaField = value;
                    this.RaisePropertyChanged("tva");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Actif {
            get {
                return this.ActifField;
            }
            set {
                if ((this.ActifField.Equals(value) != true)) {
                    this.ActifField = value;
                    this.RaisePropertyChanged("Actif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Chat {
            get {
                return this.ChatField;
            }
            set {
                if ((this.ChatField.Equals(value) != true)) {
                    this.ChatField = value;
                    this.RaisePropertyChanged("Chat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Gestion {
            get {
                return this.GestionField;
            }
            set {
                if ((this.GestionField.Equals(value) != true)) {
                    this.GestionField = value;
                    this.RaisePropertyChanged("Gestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Point {
            get {
                return this.PointField;
            }
            set {
                if ((this.PointField.Equals(value) != true)) {
                    this.PointField = value;
                    this.RaisePropertyChanged("Point");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileMessage", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class FileMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VerreAssocie", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class VerreAssocie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CleProduitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CleSupplementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ObligatoireField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CleProduit {
            get {
                return this.CleProduitField;
            }
            set {
                if ((object.ReferenceEquals(this.CleProduitField, value) != true)) {
                    this.CleProduitField = value;
                    this.RaisePropertyChanged("CleProduit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CleSupplement {
            get {
                return this.CleSupplementField;
            }
            set {
                if ((object.ReferenceEquals(this.CleSupplementField, value) != true)) {
                    this.CleSupplementField = value;
                    this.RaisePropertyChanged("CleSupplement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Designation {
            get {
                return this.DesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationField, value) != true)) {
                    this.DesignationField = value;
                    this.RaisePropertyChanged("Designation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Obligatoire {
            get {
                return this.ObligatoireField;
            }
            set {
                if ((this.ObligatoireField.Equals(value) != true)) {
                    this.ObligatoireField = value;
                    this.RaisePropertyChanged("Obligatoire");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Supplement", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Supplement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategorieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FournisseurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdCatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdFournField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncompatibilitésField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LibelleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixVenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RéfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VerresAssociésField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Categorie {
            get {
                return this.CategorieField;
            }
            set {
                if ((object.ReferenceEquals(this.CategorieField, value) != true)) {
                    this.CategorieField = value;
                    this.RaisePropertyChanged("Categorie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fournisseur {
            get {
                return this.FournisseurField;
            }
            set {
                if ((object.ReferenceEquals(this.FournisseurField, value) != true)) {
                    this.FournisseurField = value;
                    this.RaisePropertyChanged("Fournisseur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdCat {
            get {
                return this.IdCatField;
            }
            set {
                if ((this.IdCatField.Equals(value) != true)) {
                    this.IdCatField = value;
                    this.RaisePropertyChanged("IdCat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdFourn {
            get {
                return this.IdFournField;
            }
            set {
                if ((this.IdFournField.Equals(value) != true)) {
                    this.IdFournField = value;
                    this.RaisePropertyChanged("IdFourn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Incompatibilités {
            get {
                return this.IncompatibilitésField;
            }
            set {
                if ((object.ReferenceEquals(this.IncompatibilitésField, value) != true)) {
                    this.IncompatibilitésField = value;
                    this.RaisePropertyChanged("Incompatibilités");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Libelle {
            get {
                return this.LibelleField;
            }
            set {
                if ((object.ReferenceEquals(this.LibelleField, value) != true)) {
                    this.LibelleField = value;
                    this.RaisePropertyChanged("Libelle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixAchat {
            get {
                return this.PrixAchatField;
            }
            set {
                if ((this.PrixAchatField.Equals(value) != true)) {
                    this.PrixAchatField = value;
                    this.RaisePropertyChanged("PrixAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixVente {
            get {
                return this.PrixVenteField;
            }
            set {
                if ((this.PrixVenteField.Equals(value) != true)) {
                    this.PrixVenteField = value;
                    this.RaisePropertyChanged("PrixVente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarque {
            get {
                return this.RemarqueField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarqueField, value) != true)) {
                    this.RemarqueField = value;
                    this.RaisePropertyChanged("Remarque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Réf {
            get {
                return this.RéfField;
            }
            set {
                if ((object.ReferenceEquals(this.RéfField, value) != true)) {
                    this.RéfField = value;
                    this.RaisePropertyChanged("Réf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VerresAssociés {
            get {
                return this.VerresAssociésField;
            }
            set {
                if ((object.ReferenceEquals(this.VerresAssociésField, value) != true)) {
                    this.VerresAssociésField = value;
                    this.RaisePropertyChanged("VerresAssociés");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Verre", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Verre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AphaqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CletarifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CylField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiamètreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FournisseurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndiceVerreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LimiteAddFab0Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LimiteAddFab1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LimiteConnuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LimiteFab0Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LimiteFab1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatièreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PhotochromiqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixRevientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixVenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SphField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurfaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeinteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeVerreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VerreTeintéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleproduitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Aphaque {
            get {
                return this.AphaqueField;
            }
            set {
                if ((this.AphaqueField.Equals(value) != true)) {
                    this.AphaqueField = value;
                    this.RaisePropertyChanged("Aphaque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cletarif {
            get {
                return this.CletarifField;
            }
            set {
                if ((object.ReferenceEquals(this.CletarifField, value) != true)) {
                    this.CletarifField = value;
                    this.RaisePropertyChanged("Cletarif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Cyl {
            get {
                return this.CylField;
            }
            set {
                if ((this.CylField.Equals(value) != true)) {
                    this.CylField = value;
                    this.RaisePropertyChanged("Cyl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Design {
            get {
                return this.DesignField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignField, value) != true)) {
                    this.DesignField = value;
                    this.RaisePropertyChanged("Design");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Diamètre {
            get {
                return this.DiamètreField;
            }
            set {
                if ((object.ReferenceEquals(this.DiamètreField, value) != true)) {
                    this.DiamètreField = value;
                    this.RaisePropertyChanged("Diamètre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fournisseur {
            get {
                return this.FournisseurField;
            }
            set {
                if ((object.ReferenceEquals(this.FournisseurField, value) != true)) {
                    this.FournisseurField = value;
                    this.RaisePropertyChanged("Fournisseur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndiceVerre {
            get {
                return this.IndiceVerreField;
            }
            set {
                if ((object.ReferenceEquals(this.IndiceVerreField, value) != true)) {
                    this.IndiceVerreField = value;
                    this.RaisePropertyChanged("IndiceVerre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LimiteAddFab0 {
            get {
                return this.LimiteAddFab0Field;
            }
            set {
                if ((object.ReferenceEquals(this.LimiteAddFab0Field, value) != true)) {
                    this.LimiteAddFab0Field = value;
                    this.RaisePropertyChanged("LimiteAddFab0");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LimiteAddFab1 {
            get {
                return this.LimiteAddFab1Field;
            }
            set {
                if ((object.ReferenceEquals(this.LimiteAddFab1Field, value) != true)) {
                    this.LimiteAddFab1Field = value;
                    this.RaisePropertyChanged("LimiteAddFab1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> LimiteConnu {
            get {
                return this.LimiteConnuField;
            }
            set {
                if ((this.LimiteConnuField.Equals(value) != true)) {
                    this.LimiteConnuField = value;
                    this.RaisePropertyChanged("LimiteConnu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LimiteFab0 {
            get {
                return this.LimiteFab0Field;
            }
            set {
                if ((object.ReferenceEquals(this.LimiteFab0Field, value) != true)) {
                    this.LimiteFab0Field = value;
                    this.RaisePropertyChanged("LimiteFab0");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LimiteFab1 {
            get {
                return this.LimiteFab1Field;
            }
            set {
                if ((object.ReferenceEquals(this.LimiteFab1Field, value) != true)) {
                    this.LimiteFab1Field = value;
                    this.RaisePropertyChanged("LimiteFab1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Marque {
            get {
                return this.MarqueField;
            }
            set {
                if ((object.ReferenceEquals(this.MarqueField, value) != true)) {
                    this.MarqueField = value;
                    this.RaisePropertyChanged("Marque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Matière {
            get {
                return this.MatièreField;
            }
            set {
                if ((object.ReferenceEquals(this.MatièreField, value) != true)) {
                    this.MatièreField = value;
                    this.RaisePropertyChanged("Matière");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Photochromique {
            get {
                return this.PhotochromiqueField;
            }
            set {
                if ((this.PhotochromiqueField.Equals(value) != true)) {
                    this.PhotochromiqueField = value;
                    this.RaisePropertyChanged("Photochromique");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixRevient {
            get {
                return this.PrixRevientField;
            }
            set {
                if ((this.PrixRevientField.Equals(value) != true)) {
                    this.PrixRevientField = value;
                    this.RaisePropertyChanged("PrixRevient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixVente {
            get {
                return this.PrixVenteField;
            }
            set {
                if ((this.PrixVenteField.Equals(value) != true)) {
                    this.PrixVenteField = value;
                    this.RaisePropertyChanged("PrixVente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ref {
            get {
                return this.RefField;
            }
            set {
                if ((object.ReferenceEquals(this.RefField, value) != true)) {
                    this.RefField = value;
                    this.RaisePropertyChanged("Ref");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Sph {
            get {
                return this.SphField;
            }
            set {
                if ((this.SphField.Equals(value) != true)) {
                    this.SphField = value;
                    this.RaisePropertyChanged("Sph");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surface {
            get {
                return this.SurfaceField;
            }
            set {
                if ((object.ReferenceEquals(this.SurfaceField, value) != true)) {
                    this.SurfaceField = value;
                    this.RaisePropertyChanged("Surface");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Teinte {
            get {
                return this.TeinteField;
            }
            set {
                if ((object.ReferenceEquals(this.TeinteField, value) != true)) {
                    this.TeinteField = value;
                    this.RaisePropertyChanged("Teinte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeVerre {
            get {
                return this.TypeVerreField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeVerreField, value) != true)) {
                    this.TypeVerreField = value;
                    this.RaisePropertyChanged("TypeVerre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> VerreTeinté {
            get {
                return this.VerreTeintéField;
            }
            set {
                if ((this.VerreTeintéField.Equals(value) != true)) {
                    this.VerreTeintéField = value;
                    this.RaisePropertyChanged("VerreTeinté");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cleproduit {
            get {
                return this.cleproduitField;
            }
            set {
                if ((object.ReferenceEquals(this.cleproduitField, value) != true)) {
                    this.cleproduitField = value;
                    this.RaisePropertyChanged("cleproduit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TarifVerre", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class TarifVerre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> A1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> A2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> A3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> A4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> B1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> B2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> B3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> B4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> C1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> C2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> C3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> C4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CletarifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> D1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> D2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> D3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> D4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiamètreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> E1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> E2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> E3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> E4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> F1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> F2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> F3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> F4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> G1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> G2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> G3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> G4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> H1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> H2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> H3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> H4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PrixAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PrixVenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleproduitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> A1 {
            get {
                return this.A1Field;
            }
            set {
                if ((this.A1Field.Equals(value) != true)) {
                    this.A1Field = value;
                    this.RaisePropertyChanged("A1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> A2 {
            get {
                return this.A2Field;
            }
            set {
                if ((this.A2Field.Equals(value) != true)) {
                    this.A2Field = value;
                    this.RaisePropertyChanged("A2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> A3 {
            get {
                return this.A3Field;
            }
            set {
                if ((this.A3Field.Equals(value) != true)) {
                    this.A3Field = value;
                    this.RaisePropertyChanged("A3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> A4 {
            get {
                return this.A4Field;
            }
            set {
                if ((this.A4Field.Equals(value) != true)) {
                    this.A4Field = value;
                    this.RaisePropertyChanged("A4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> B1 {
            get {
                return this.B1Field;
            }
            set {
                if ((this.B1Field.Equals(value) != true)) {
                    this.B1Field = value;
                    this.RaisePropertyChanged("B1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> B2 {
            get {
                return this.B2Field;
            }
            set {
                if ((this.B2Field.Equals(value) != true)) {
                    this.B2Field = value;
                    this.RaisePropertyChanged("B2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> B3 {
            get {
                return this.B3Field;
            }
            set {
                if ((this.B3Field.Equals(value) != true)) {
                    this.B3Field = value;
                    this.RaisePropertyChanged("B3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> B4 {
            get {
                return this.B4Field;
            }
            set {
                if ((this.B4Field.Equals(value) != true)) {
                    this.B4Field = value;
                    this.RaisePropertyChanged("B4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> C1 {
            get {
                return this.C1Field;
            }
            set {
                if ((this.C1Field.Equals(value) != true)) {
                    this.C1Field = value;
                    this.RaisePropertyChanged("C1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> C2 {
            get {
                return this.C2Field;
            }
            set {
                if ((this.C2Field.Equals(value) != true)) {
                    this.C2Field = value;
                    this.RaisePropertyChanged("C2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> C3 {
            get {
                return this.C3Field;
            }
            set {
                if ((this.C3Field.Equals(value) != true)) {
                    this.C3Field = value;
                    this.RaisePropertyChanged("C3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> C4 {
            get {
                return this.C4Field;
            }
            set {
                if ((this.C4Field.Equals(value) != true)) {
                    this.C4Field = value;
                    this.RaisePropertyChanged("C4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cletarif {
            get {
                return this.CletarifField;
            }
            set {
                if ((object.ReferenceEquals(this.CletarifField, value) != true)) {
                    this.CletarifField = value;
                    this.RaisePropertyChanged("Cletarif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> D1 {
            get {
                return this.D1Field;
            }
            set {
                if ((this.D1Field.Equals(value) != true)) {
                    this.D1Field = value;
                    this.RaisePropertyChanged("D1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> D2 {
            get {
                return this.D2Field;
            }
            set {
                if ((this.D2Field.Equals(value) != true)) {
                    this.D2Field = value;
                    this.RaisePropertyChanged("D2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> D3 {
            get {
                return this.D3Field;
            }
            set {
                if ((this.D3Field.Equals(value) != true)) {
                    this.D3Field = value;
                    this.RaisePropertyChanged("D3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> D4 {
            get {
                return this.D4Field;
            }
            set {
                if ((this.D4Field.Equals(value) != true)) {
                    this.D4Field = value;
                    this.RaisePropertyChanged("D4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Diamètre {
            get {
                return this.DiamètreField;
            }
            set {
                if ((object.ReferenceEquals(this.DiamètreField, value) != true)) {
                    this.DiamètreField = value;
                    this.RaisePropertyChanged("Diamètre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> E1 {
            get {
                return this.E1Field;
            }
            set {
                if ((this.E1Field.Equals(value) != true)) {
                    this.E1Field = value;
                    this.RaisePropertyChanged("E1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> E2 {
            get {
                return this.E2Field;
            }
            set {
                if ((this.E2Field.Equals(value) != true)) {
                    this.E2Field = value;
                    this.RaisePropertyChanged("E2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> E3 {
            get {
                return this.E3Field;
            }
            set {
                if ((this.E3Field.Equals(value) != true)) {
                    this.E3Field = value;
                    this.RaisePropertyChanged("E3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> E4 {
            get {
                return this.E4Field;
            }
            set {
                if ((this.E4Field.Equals(value) != true)) {
                    this.E4Field = value;
                    this.RaisePropertyChanged("E4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> F1 {
            get {
                return this.F1Field;
            }
            set {
                if ((this.F1Field.Equals(value) != true)) {
                    this.F1Field = value;
                    this.RaisePropertyChanged("F1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> F2 {
            get {
                return this.F2Field;
            }
            set {
                if ((this.F2Field.Equals(value) != true)) {
                    this.F2Field = value;
                    this.RaisePropertyChanged("F2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> F3 {
            get {
                return this.F3Field;
            }
            set {
                if ((this.F3Field.Equals(value) != true)) {
                    this.F3Field = value;
                    this.RaisePropertyChanged("F3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> F4 {
            get {
                return this.F4Field;
            }
            set {
                if ((this.F4Field.Equals(value) != true)) {
                    this.F4Field = value;
                    this.RaisePropertyChanged("F4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> G1 {
            get {
                return this.G1Field;
            }
            set {
                if ((this.G1Field.Equals(value) != true)) {
                    this.G1Field = value;
                    this.RaisePropertyChanged("G1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> G2 {
            get {
                return this.G2Field;
            }
            set {
                if ((this.G2Field.Equals(value) != true)) {
                    this.G2Field = value;
                    this.RaisePropertyChanged("G2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> G3 {
            get {
                return this.G3Field;
            }
            set {
                if ((this.G3Field.Equals(value) != true)) {
                    this.G3Field = value;
                    this.RaisePropertyChanged("G3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> G4 {
            get {
                return this.G4Field;
            }
            set {
                if ((this.G4Field.Equals(value) != true)) {
                    this.G4Field = value;
                    this.RaisePropertyChanged("G4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> H1 {
            get {
                return this.H1Field;
            }
            set {
                if ((this.H1Field.Equals(value) != true)) {
                    this.H1Field = value;
                    this.RaisePropertyChanged("H1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> H2 {
            get {
                return this.H2Field;
            }
            set {
                if ((this.H2Field.Equals(value) != true)) {
                    this.H2Field = value;
                    this.RaisePropertyChanged("H2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> H3 {
            get {
                return this.H3Field;
            }
            set {
                if ((this.H3Field.Equals(value) != true)) {
                    this.H3Field = value;
                    this.RaisePropertyChanged("H3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> H4 {
            get {
                return this.H4Field;
            }
            set {
                if ((this.H4Field.Equals(value) != true)) {
                    this.H4Field = value;
                    this.RaisePropertyChanged("H4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PrixAchat {
            get {
                return this.PrixAchatField;
            }
            set {
                if ((this.PrixAchatField.Equals(value) != true)) {
                    this.PrixAchatField = value;
                    this.RaisePropertyChanged("PrixAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PrixVente {
            get {
                return this.PrixVenteField;
            }
            set {
                if ((this.PrixVenteField.Equals(value) != true)) {
                    this.PrixVenteField = value;
                    this.RaisePropertyChanged("PrixVente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cleproduit {
            get {
                return this.cleproduitField;
            }
            set {
                if ((object.ReferenceEquals(this.cleproduitField, value) != true)) {
                    this.cleproduitField = value;
                    this.RaisePropertyChanged("cleproduit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tcab", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Tcab : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cabField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleproduitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cab {
            get {
                return this.cabField;
            }
            set {
                if ((object.ReferenceEquals(this.cabField, value) != true)) {
                    this.cabField = value;
                    this.RaisePropertyChanged("cab");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cleproduit {
            get {
                return this.cleproduitField;
            }
            set {
                if ((object.ReferenceEquals(this.cleproduitField, value) != true)) {
                    this.cleproduitField = value;
                    this.RaisePropertyChanged("cleproduit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fourn", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Fourn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string adresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string autresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string raisonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> soldeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string adresse {
            get {
                return this.adresseField;
            }
            set {
                if ((object.ReferenceEquals(this.adresseField, value) != true)) {
                    this.adresseField = value;
                    this.RaisePropertyChanged("adresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string autres {
            get {
                return this.autresField;
            }
            set {
                if ((object.ReferenceEquals(this.autresField, value) != true)) {
                    this.autresField = value;
                    this.RaisePropertyChanged("autres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string raison {
            get {
                return this.raisonField;
            }
            set {
                if ((object.ReferenceEquals(this.raisonField, value) != true)) {
                    this.raisonField = value;
                    this.RaisePropertyChanged("raison");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> solde {
            get {
                return this.soldeField;
            }
            set {
                if ((this.soldeField.Equals(value) != true)) {
                    this.soldeField = value;
                    this.RaisePropertyChanged("solde");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="F1", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class F1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LentilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MontureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bcomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleDossierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> codeclientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datecheanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> echeanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> heureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> htField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> netField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nfactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string raisonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> remiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> resteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> soldéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> timbreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> tvaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> versementField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Auto {
            get {
                return this.AutoField;
            }
            set {
                if ((this.AutoField.Equals(value) != true)) {
                    this.AutoField = value;
                    this.RaisePropertyChanged("Auto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Lentille {
            get {
                return this.LentilleField;
            }
            set {
                if ((this.LentilleField.Equals(value) != true)) {
                    this.LentilleField = value;
                    this.RaisePropertyChanged("Lentille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Monture {
            get {
                return this.MontureField;
            }
            set {
                if ((this.MontureField.Equals(value) != true)) {
                    this.MontureField = value;
                    this.RaisePropertyChanged("Monture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bcom {
            get {
                return this.bcomField;
            }
            set {
                if ((object.ReferenceEquals(this.bcomField, value) != true)) {
                    this.bcomField = value;
                    this.RaisePropertyChanged("bcom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cleDossier {
            get {
                return this.cleDossierField;
            }
            set {
                if ((object.ReferenceEquals(this.cleDossierField, value) != true)) {
                    this.cleDossierField = value;
                    this.RaisePropertyChanged("cleDossier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> codeclient {
            get {
                return this.codeclientField;
            }
            set {
                if ((this.codeclientField.Equals(value) != true)) {
                    this.codeclientField = value;
                    this.RaisePropertyChanged("codeclient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> datecheance {
            get {
                return this.datecheanceField;
            }
            set {
                if ((this.datecheanceField.Equals(value) != true)) {
                    this.datecheanceField = value;
                    this.RaisePropertyChanged("datecheance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> echeance {
            get {
                return this.echeanceField;
            }
            set {
                if ((this.echeanceField.Equals(value) != true)) {
                    this.echeanceField = value;
                    this.RaisePropertyChanged("echeance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> heure {
            get {
                return this.heureField;
            }
            set {
                if ((this.heureField.Equals(value) != true)) {
                    this.heureField = value;
                    this.RaisePropertyChanged("heure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ht {
            get {
                return this.htField;
            }
            set {
                if ((this.htField.Equals(value) != true)) {
                    this.htField = value;
                    this.RaisePropertyChanged("ht");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string modep {
            get {
                return this.modepField;
            }
            set {
                if ((object.ReferenceEquals(this.modepField, value) != true)) {
                    this.modepField = value;
                    this.RaisePropertyChanged("modep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> net {
            get {
                return this.netField;
            }
            set {
                if ((this.netField.Equals(value) != true)) {
                    this.netField = value;
                    this.RaisePropertyChanged("net");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nfact {
            get {
                return this.nfactField;
            }
            set {
                if ((object.ReferenceEquals(this.nfactField, value) != true)) {
                    this.nfactField = value;
                    this.RaisePropertyChanged("nfact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oper {
            get {
                return this.operField;
            }
            set {
                if ((object.ReferenceEquals(this.operField, value) != true)) {
                    this.operField = value;
                    this.RaisePropertyChanged("oper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string raison {
            get {
                return this.raisonField;
            }
            set {
                if ((object.ReferenceEquals(this.raisonField, value) != true)) {
                    this.raisonField = value;
                    this.RaisePropertyChanged("raison");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> remise {
            get {
                return this.remiseField;
            }
            set {
                if ((this.remiseField.Equals(value) != true)) {
                    this.remiseField = value;
                    this.RaisePropertyChanged("remise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> reste {
            get {
                return this.resteField;
            }
            set {
                if ((this.resteField.Equals(value) != true)) {
                    this.resteField = value;
                    this.RaisePropertyChanged("reste");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> soldé {
            get {
                return this.soldéField;
            }
            set {
                if ((this.soldéField.Equals(value) != true)) {
                    this.soldéField = value;
                    this.RaisePropertyChanged("soldé");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> timbre {
            get {
                return this.timbreField;
            }
            set {
                if ((this.timbreField.Equals(value) != true)) {
                    this.timbreField = value;
                    this.RaisePropertyChanged("timbre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> tva {
            get {
                return this.tvaField;
            }
            set {
                if ((this.tvaField.Equals(value) != true)) {
                    this.tvaField = value;
                    this.RaisePropertyChanged("tva");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> versement {
            get {
                return this.versementField;
            }
            set {
                if ((this.versementField.Equals(value) != true)) {
                    this.versementField = value;
                    this.RaisePropertyChanged("versement");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Facture", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Facture : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FournisseurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ancienvaleurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cabField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> cmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> codeclientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> codeprodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> collisageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string designField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ficheproduitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nfactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> packField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> peremptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> previentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> priventeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> quantiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> remiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string serialnumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> tvaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Auto {
            get {
                return this.AutoField;
            }
            set {
                if ((this.AutoField.Equals(value) != true)) {
                    this.AutoField = value;
                    this.RaisePropertyChanged("Auto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fournisseur {
            get {
                return this.FournisseurField;
            }
            set {
                if ((object.ReferenceEquals(this.FournisseurField, value) != true)) {
                    this.FournisseurField = value;
                    this.RaisePropertyChanged("Fournisseur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ancienvaleur {
            get {
                return this.ancienvaleurField;
            }
            set {
                if ((this.ancienvaleurField.Equals(value) != true)) {
                    this.ancienvaleurField = value;
                    this.RaisePropertyChanged("ancienvaleur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cab {
            get {
                return this.cabField;
            }
            set {
                if ((object.ReferenceEquals(this.cabField, value) != true)) {
                    this.cabField = value;
                    this.RaisePropertyChanged("cab");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cf {
            get {
                return this.cfField;
            }
            set {
                if ((this.cfField.Equals(value) != true)) {
                    this.cfField = value;
                    this.RaisePropertyChanged("cf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> cmp {
            get {
                return this.cmpField;
            }
            set {
                if ((this.cmpField.Equals(value) != true)) {
                    this.cmpField = value;
                    this.RaisePropertyChanged("cmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> codeclient {
            get {
                return this.codeclientField;
            }
            set {
                if ((this.codeclientField.Equals(value) != true)) {
                    this.codeclientField = value;
                    this.RaisePropertyChanged("codeclient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> codeprod {
            get {
                return this.codeprodField;
            }
            set {
                if ((this.codeprodField.Equals(value) != true)) {
                    this.codeprodField = value;
                    this.RaisePropertyChanged("codeprod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> collisage {
            get {
                return this.collisageField;
            }
            set {
                if ((this.collisageField.Equals(value) != true)) {
                    this.collisageField = value;
                    this.RaisePropertyChanged("collisage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> datef {
            get {
                return this.datefField;
            }
            set {
                if ((this.datefField.Equals(value) != true)) {
                    this.datefField = value;
                    this.RaisePropertyChanged("datef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string design {
            get {
                return this.designField;
            }
            set {
                if ((object.ReferenceEquals(this.designField, value) != true)) {
                    this.designField = value;
                    this.RaisePropertyChanged("design");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ff {
            get {
                return this.ffField;
            }
            set {
                if ((object.ReferenceEquals(this.ffField, value) != true)) {
                    this.ffField = value;
                    this.RaisePropertyChanged("ff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ficheproduit {
            get {
                return this.ficheproduitField;
            }
            set {
                if ((this.ficheproduitField.Equals(value) != true)) {
                    this.ficheproduitField = value;
                    this.RaisePropertyChanged("ficheproduit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lot {
            get {
                return this.lotField;
            }
            set {
                if ((object.ReferenceEquals(this.lotField, value) != true)) {
                    this.lotField = value;
                    this.RaisePropertyChanged("lot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nfact {
            get {
                return this.nfactField;
            }
            set {
                if ((object.ReferenceEquals(this.nfactField, value) != true)) {
                    this.nfactField = value;
                    this.RaisePropertyChanged("nfact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oper {
            get {
                return this.operField;
            }
            set {
                if ((object.ReferenceEquals(this.operField, value) != true)) {
                    this.operField = value;
                    this.RaisePropertyChanged("oper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> pack {
            get {
                return this.packField;
            }
            set {
                if ((this.packField.Equals(value) != true)) {
                    this.packField = value;
                    this.RaisePropertyChanged("pack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> perempt {
            get {
                return this.peremptField;
            }
            set {
                if ((this.peremptField.Equals(value) != true)) {
                    this.peremptField = value;
                    this.RaisePropertyChanged("perempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> previent {
            get {
                return this.previentField;
            }
            set {
                if ((this.previentField.Equals(value) != true)) {
                    this.previentField = value;
                    this.RaisePropertyChanged("previent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> privente {
            get {
                return this.priventeField;
            }
            set {
                if ((this.priventeField.Equals(value) != true)) {
                    this.priventeField = value;
                    this.RaisePropertyChanged("privente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> quantite {
            get {
                return this.quantiteField;
            }
            set {
                if ((this.quantiteField.Equals(value) != true)) {
                    this.quantiteField = value;
                    this.RaisePropertyChanged("quantite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> remise {
            get {
                return this.remiseField;
            }
            set {
                if ((this.remiseField.Equals(value) != true)) {
                    this.remiseField = value;
                    this.RaisePropertyChanged("remise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serialnumber {
            get {
                return this.serialnumberField;
            }
            set {
                if ((object.ReferenceEquals(this.serialnumberField, value) != true)) {
                    this.serialnumberField = value;
                    this.RaisePropertyChanged("serialnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> tva {
            get {
                return this.tvaField;
            }
            set {
                if ((this.tvaField.Equals(value) != true)) {
                    this.tvaField = value;
                    this.RaisePropertyChanged("tva");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepeiementMultipleFournisseur", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class DepeiementMultipleFournisseur : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeFournField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonFournField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> amontantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string banqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleMultipleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleVisiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> enregField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> montantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nfactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string paiemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeFourn {
            get {
                return this.CodeFournField;
            }
            set {
                if ((this.CodeFournField.Equals(value) != true)) {
                    this.CodeFournField = value;
                    this.RaisePropertyChanged("CodeFourn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaisonFourn {
            get {
                return this.RaisonFournField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonFournField, value) != true)) {
                    this.RaisonFournField = value;
                    this.RaisePropertyChanged("RaisonFourn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> amontant {
            get {
                return this.amontantField;
            }
            set {
                if ((this.amontantField.Equals(value) != true)) {
                    this.amontantField = value;
                    this.RaisePropertyChanged("amontant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string banque {
            get {
                return this.banqueField;
            }
            set {
                if ((object.ReferenceEquals(this.banqueField, value) != true)) {
                    this.banqueField = value;
                    this.RaisePropertyChanged("banque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cleMultiple {
            get {
                return this.cleMultipleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleMultipleField, value) != true)) {
                    this.cleMultipleField = value;
                    this.RaisePropertyChanged("cleMultiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cleVisite {
            get {
                return this.cleVisiteField;
            }
            set {
                if ((object.ReferenceEquals(this.cleVisiteField, value) != true)) {
                    this.cleVisiteField = value;
                    this.RaisePropertyChanged("cleVisite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cp {
            get {
                return this.cpField;
            }
            set {
                if ((this.cpField.Equals(value) != true)) {
                    this.cpField = value;
                    this.RaisePropertyChanged("cp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> enreg {
            get {
                return this.enregField;
            }
            set {
                if ((this.enregField.Equals(value) != true)) {
                    this.enregField = value;
                    this.RaisePropertyChanged("enreg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> montant {
            get {
                return this.montantField;
            }
            set {
                if ((this.montantField.Equals(value) != true)) {
                    this.montantField = value;
                    this.RaisePropertyChanged("montant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nfact {
            get {
                return this.nfactField;
            }
            set {
                if ((object.ReferenceEquals(this.nfactField, value) != true)) {
                    this.nfactField = value;
                    this.RaisePropertyChanged("nfact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oper {
            get {
                return this.operField;
            }
            set {
                if ((object.ReferenceEquals(this.operField, value) != true)) {
                    this.operField = value;
                    this.RaisePropertyChanged("oper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string paiem {
            get {
                return this.paiemField;
            }
            set {
                if ((object.ReferenceEquals(this.paiemField, value) != true)) {
                    this.paiemField = value;
                    this.RaisePropertyChanged("paiem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepeiementMultiple", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class DepeiementMultiple : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> amontantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string banqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleMultipleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleVisiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> enregField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> montantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nfactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string paiemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeClient {
            get {
                return this.CodeClientField;
            }
            set {
                if ((this.CodeClientField.Equals(value) != true)) {
                    this.CodeClientField = value;
                    this.RaisePropertyChanged("CodeClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaisonClient {
            get {
                return this.RaisonClientField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonClientField, value) != true)) {
                    this.RaisonClientField = value;
                    this.RaisePropertyChanged("RaisonClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> amontant {
            get {
                return this.amontantField;
            }
            set {
                if ((this.amontantField.Equals(value) != true)) {
                    this.amontantField = value;
                    this.RaisePropertyChanged("amontant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string banque {
            get {
                return this.banqueField;
            }
            set {
                if ((object.ReferenceEquals(this.banqueField, value) != true)) {
                    this.banqueField = value;
                    this.RaisePropertyChanged("banque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cleMultiple {
            get {
                return this.cleMultipleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleMultipleField, value) != true)) {
                    this.cleMultipleField = value;
                    this.RaisePropertyChanged("cleMultiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cleVisite {
            get {
                return this.cleVisiteField;
            }
            set {
                if ((object.ReferenceEquals(this.cleVisiteField, value) != true)) {
                    this.cleVisiteField = value;
                    this.RaisePropertyChanged("cleVisite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cp {
            get {
                return this.cpField;
            }
            set {
                if ((this.cpField.Equals(value) != true)) {
                    this.cpField = value;
                    this.RaisePropertyChanged("cp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> enreg {
            get {
                return this.enregField;
            }
            set {
                if ((this.enregField.Equals(value) != true)) {
                    this.enregField = value;
                    this.RaisePropertyChanged("enreg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> montant {
            get {
                return this.montantField;
            }
            set {
                if ((this.montantField.Equals(value) != true)) {
                    this.montantField = value;
                    this.RaisePropertyChanged("montant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nfact {
            get {
                return this.nfactField;
            }
            set {
                if ((object.ReferenceEquals(this.nfactField, value) != true)) {
                    this.nfactField = value;
                    this.RaisePropertyChanged("nfact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oper {
            get {
                return this.operField;
            }
            set {
                if ((object.ReferenceEquals(this.operField, value) != true)) {
                    this.operField = value;
                    this.RaisePropertyChanged("oper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string paiem {
            get {
                return this.paiemField;
            }
            set {
                if ((object.ReferenceEquals(this.paiemField, value) != true)) {
                    this.paiemField = value;
                    this.RaisePropertyChanged("paiem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="depaief", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class depaief : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CleMultipleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeFournField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MultipleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonFournField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> amontantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string banqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> enregField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> montantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nfactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string paiemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CleMultiple {
            get {
                return this.CleMultipleField;
            }
            set {
                if ((object.ReferenceEquals(this.CleMultipleField, value) != true)) {
                    this.CleMultipleField = value;
                    this.RaisePropertyChanged("CleMultiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeFourn {
            get {
                return this.CodeFournField;
            }
            set {
                if ((this.CodeFournField.Equals(value) != true)) {
                    this.CodeFournField = value;
                    this.RaisePropertyChanged("CodeFourn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Multiple {
            get {
                return this.MultipleField;
            }
            set {
                if ((this.MultipleField.Equals(value) != true)) {
                    this.MultipleField = value;
                    this.RaisePropertyChanged("Multiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaisonFourn {
            get {
                return this.RaisonFournField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonFournField, value) != true)) {
                    this.RaisonFournField = value;
                    this.RaisePropertyChanged("RaisonFourn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> amontant {
            get {
                return this.amontantField;
            }
            set {
                if ((this.amontantField.Equals(value) != true)) {
                    this.amontantField = value;
                    this.RaisePropertyChanged("amontant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string banque {
            get {
                return this.banqueField;
            }
            set {
                if ((object.ReferenceEquals(this.banqueField, value) != true)) {
                    this.banqueField = value;
                    this.RaisePropertyChanged("banque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cf {
            get {
                return this.cfField;
            }
            set {
                if ((this.cfField.Equals(value) != true)) {
                    this.cfField = value;
                    this.RaisePropertyChanged("cf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> enreg {
            get {
                return this.enregField;
            }
            set {
                if ((this.enregField.Equals(value) != true)) {
                    this.enregField = value;
                    this.RaisePropertyChanged("enreg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> montant {
            get {
                return this.montantField;
            }
            set {
                if ((this.montantField.Equals(value) != true)) {
                    this.montantField = value;
                    this.RaisePropertyChanged("montant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nfact {
            get {
                return this.nfactField;
            }
            set {
                if ((object.ReferenceEquals(this.nfactField, value) != true)) {
                    this.nfactField = value;
                    this.RaisePropertyChanged("nfact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oper {
            get {
                return this.operField;
            }
            set {
                if ((object.ReferenceEquals(this.operField, value) != true)) {
                    this.operField = value;
                    this.RaisePropertyChanged("oper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string paiem {
            get {
                return this.paiemField;
            }
            set {
                if ((object.ReferenceEquals(this.paiemField, value) != true)) {
                    this.paiemField = value;
                    this.RaisePropertyChanged("paiem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Depeiment", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Depeiment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CleMultipleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MultipleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> amontantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string banqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> enregField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> montantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nfactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string paiemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CleMultiple {
            get {
                return this.CleMultipleField;
            }
            set {
                if ((object.ReferenceEquals(this.CleMultipleField, value) != true)) {
                    this.CleMultipleField = value;
                    this.RaisePropertyChanged("CleMultiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeClient {
            get {
                return this.CodeClientField;
            }
            set {
                if ((this.CodeClientField.Equals(value) != true)) {
                    this.CodeClientField = value;
                    this.RaisePropertyChanged("CodeClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Multiple {
            get {
                return this.MultipleField;
            }
            set {
                if ((this.MultipleField.Equals(value) != true)) {
                    this.MultipleField = value;
                    this.RaisePropertyChanged("Multiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaisonClient {
            get {
                return this.RaisonClientField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonClientField, value) != true)) {
                    this.RaisonClientField = value;
                    this.RaisePropertyChanged("RaisonClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> amontant {
            get {
                return this.amontantField;
            }
            set {
                if ((this.amontantField.Equals(value) != true)) {
                    this.amontantField = value;
                    this.RaisePropertyChanged("amontant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string banque {
            get {
                return this.banqueField;
            }
            set {
                if ((object.ReferenceEquals(this.banqueField, value) != true)) {
                    this.banqueField = value;
                    this.RaisePropertyChanged("banque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cp {
            get {
                return this.cpField;
            }
            set {
                if ((this.cpField.Equals(value) != true)) {
                    this.cpField = value;
                    this.RaisePropertyChanged("cp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> enreg {
            get {
                return this.enregField;
            }
            set {
                if ((this.enregField.Equals(value) != true)) {
                    this.enregField = value;
                    this.RaisePropertyChanged("enreg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> montant {
            get {
                return this.montantField;
            }
            set {
                if ((this.montantField.Equals(value) != true)) {
                    this.montantField = value;
                    this.RaisePropertyChanged("montant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nfact {
            get {
                return this.nfactField;
            }
            set {
                if ((object.ReferenceEquals(this.nfactField, value) != true)) {
                    this.nfactField = value;
                    this.RaisePropertyChanged("nfact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oper {
            get {
                return this.operField;
            }
            set {
                if ((object.ReferenceEquals(this.operField, value) != true)) {
                    this.operField = value;
                    this.RaisePropertyChanged("oper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string paiem {
            get {
                return this.paiemField;
            }
            set {
                if ((object.ReferenceEquals(this.paiemField, value) != true)) {
                    this.paiemField = value;
                    this.RaisePropertyChanged("paiem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MotifDepense", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class MotifDepense : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotifDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MotifD {
            get {
                return this.MotifDField;
            }
            set {
                if ((object.ReferenceEquals(this.MotifDField, value) != true)) {
                    this.MotifDField = value;
                    this.RaisePropertyChanged("MotifD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Depense", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Depense : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentairesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompteDébitéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CréditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateDebitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateSaisieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DébitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModePaiementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MontantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MontantCréditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumChequeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Num_FactureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RubriqueComptableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Auto {
            get {
                return this.AutoField;
            }
            set {
                if ((this.AutoField.Equals(value) != true)) {
                    this.AutoField = value;
                    this.RaisePropertyChanged("Auto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Commentaires {
            get {
                return this.CommentairesField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentairesField, value) != true)) {
                    this.CommentairesField = value;
                    this.RaisePropertyChanged("Commentaires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompteDébité {
            get {
                return this.CompteDébitéField;
            }
            set {
                if ((object.ReferenceEquals(this.CompteDébitéField, value) != true)) {
                    this.CompteDébitéField = value;
                    this.RaisePropertyChanged("CompteDébité");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Crédit {
            get {
                return this.CréditField;
            }
            set {
                if ((this.CréditField.Equals(value) != true)) {
                    this.CréditField = value;
                    this.RaisePropertyChanged("Crédit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateDebit {
            get {
                return this.DateDebitField;
            }
            set {
                if ((this.DateDebitField.Equals(value) != true)) {
                    this.DateDebitField = value;
                    this.RaisePropertyChanged("DateDebit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateSaisie {
            get {
                return this.DateSaisieField;
            }
            set {
                if ((this.DateSaisieField.Equals(value) != true)) {
                    this.DateSaisieField = value;
                    this.RaisePropertyChanged("DateSaisie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Débit {
            get {
                return this.DébitField;
            }
            set {
                if ((this.DébitField.Equals(value) != true)) {
                    this.DébitField = value;
                    this.RaisePropertyChanged("Débit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModePaiement {
            get {
                return this.ModePaiementField;
            }
            set {
                if ((object.ReferenceEquals(this.ModePaiementField, value) != true)) {
                    this.ModePaiementField = value;
                    this.RaisePropertyChanged("ModePaiement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Montant {
            get {
                return this.MontantField;
            }
            set {
                if ((this.MontantField.Equals(value) != true)) {
                    this.MontantField = value;
                    this.RaisePropertyChanged("Montant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MontantCrédit {
            get {
                return this.MontantCréditField;
            }
            set {
                if ((this.MontantCréditField.Equals(value) != true)) {
                    this.MontantCréditField = value;
                    this.RaisePropertyChanged("MontantCrédit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumCheque {
            get {
                return this.NumChequeField;
            }
            set {
                if ((object.ReferenceEquals(this.NumChequeField, value) != true)) {
                    this.NumChequeField = value;
                    this.RaisePropertyChanged("NumCheque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Num_Facture {
            get {
                return this.Num_FactureField;
            }
            set {
                if ((object.ReferenceEquals(this.Num_FactureField, value) != true)) {
                    this.Num_FactureField = value;
                    this.RaisePropertyChanged("Num_Facture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RubriqueComptable {
            get {
                return this.RubriqueComptableField;
            }
            set {
                if ((object.ReferenceEquals(this.RubriqueComptableField, value) != true)) {
                    this.RubriqueComptableField = value;
                    this.RaisePropertyChanged("RubriqueComptable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="am", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class am : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> codeprodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string designField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> déstockageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nfactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string observField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> previentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> quantiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> stockageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cf {
            get {
                return this.cfField;
            }
            set {
                if ((this.cfField.Equals(value) != true)) {
                    this.cfField = value;
                    this.RaisePropertyChanged("cf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> codeprod {
            get {
                return this.codeprodField;
            }
            set {
                if ((this.codeprodField.Equals(value) != true)) {
                    this.codeprodField = value;
                    this.RaisePropertyChanged("codeprod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> datef {
            get {
                return this.datefField;
            }
            set {
                if ((this.datefField.Equals(value) != true)) {
                    this.datefField = value;
                    this.RaisePropertyChanged("datef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string design {
            get {
                return this.designField;
            }
            set {
                if ((object.ReferenceEquals(this.designField, value) != true)) {
                    this.designField = value;
                    this.RaisePropertyChanged("design");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> déstockage {
            get {
                return this.déstockageField;
            }
            set {
                if ((this.déstockageField.Equals(value) != true)) {
                    this.déstockageField = value;
                    this.RaisePropertyChanged("déstockage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nfact {
            get {
                return this.nfactField;
            }
            set {
                if ((object.ReferenceEquals(this.nfactField, value) != true)) {
                    this.nfactField = value;
                    this.RaisePropertyChanged("nfact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string observ {
            get {
                return this.observField;
            }
            set {
                if ((object.ReferenceEquals(this.observField, value) != true)) {
                    this.observField = value;
                    this.RaisePropertyChanged("observ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oper {
            get {
                return this.operField;
            }
            set {
                if ((object.ReferenceEquals(this.operField, value) != true)) {
                    this.operField = value;
                    this.RaisePropertyChanged("oper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> previent {
            get {
                return this.previentField;
            }
            set {
                if ((this.previentField.Equals(value) != true)) {
                    this.previentField = value;
                    this.RaisePropertyChanged("previent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> quantite {
            get {
                return this.quantiteField;
            }
            set {
                if ((this.quantiteField.Equals(value) != true)) {
                    this.quantiteField = value;
                    this.RaisePropertyChanged("quantite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> stockage {
            get {
                return this.stockageField;
            }
            set {
                if ((this.stockageField.Equals(value) != true)) {
                    this.stockageField = value;
                    this.RaisePropertyChanged("stockage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientV", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class ClientV : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RemiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string adresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string aiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> soldeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> stvaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Raison {
            get {
                return this.RaisonField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonField, value) != true)) {
                    this.RaisonField = value;
                    this.RaisePropertyChanged("Raison");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ref {
            get {
                return this.RefField;
            }
            set {
                if ((object.ReferenceEquals(this.RefField, value) != true)) {
                    this.RefField = value;
                    this.RaisePropertyChanged("Ref");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Remise {
            get {
                return this.RemiseField;
            }
            set {
                if ((this.RemiseField.Equals(value) != true)) {
                    this.RemiseField = value;
                    this.RaisePropertyChanged("Remise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel {
            get {
                return this.TelField;
            }
            set {
                if ((object.ReferenceEquals(this.TelField, value) != true)) {
                    this.TelField = value;
                    this.RaisePropertyChanged("Tel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string adresse {
            get {
                return this.adresseField;
            }
            set {
                if ((object.ReferenceEquals(this.adresseField, value) != true)) {
                    this.adresseField = value;
                    this.RaisePropertyChanged("adresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ai {
            get {
                return this.aiField;
            }
            set {
                if ((object.ReferenceEquals(this.aiField, value) != true)) {
                    this.aiField = value;
                    this.RaisePropertyChanged("ai");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mf {
            get {
                return this.mfField;
            }
            set {
                if ((object.ReferenceEquals(this.mfField, value) != true)) {
                    this.mfField = value;
                    this.RaisePropertyChanged("mf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oper {
            get {
                return this.operField;
            }
            set {
                if ((object.ReferenceEquals(this.operField, value) != true)) {
                    this.operField = value;
                    this.RaisePropertyChanged("oper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rc {
            get {
                return this.rcField;
            }
            set {
                if ((object.ReferenceEquals(this.rcField, value) != true)) {
                    this.rcField = value;
                    this.RaisePropertyChanged("rc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> solde {
            get {
                return this.soldeField;
            }
            set {
                if ((this.soldeField.Equals(value) != true)) {
                    this.soldeField = value;
                    this.RaisePropertyChanged("solde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> stva {
            get {
                return this.stvaField;
            }
            set {
                if ((this.stvaField.Equals(value) != true)) {
                    this.stvaField = value;
                    this.RaisePropertyChanged("stva");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Marque", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Marque : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarqueProduitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarqueProduit {
            get {
                return this.MarqueProduitField;
            }
            set {
                if ((object.ReferenceEquals(this.MarqueProduitField, value) != true)) {
                    this.MarqueProduitField = value;
                    this.RaisePropertyChanged("MarqueProduit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Resource", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Resource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomField1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UniqueIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomField1 {
            get {
                return this.CustomField1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CustomField1Field, value) != true)) {
                    this.CustomField1Field = value;
                    this.RaisePropertyChanged("CustomField1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((this.ResourceIDField.Equals(value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceName {
            get {
                return this.ResourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceNameField, value) != true)) {
                    this.ResourceNameField = value;
                    this.RaisePropertyChanged("ResourceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UniqueID {
            get {
                return this.UniqueIDField;
            }
            set {
                if ((this.UniqueIDField.Equals(value) != true)) {
                    this.UniqueIDField = value;
                    this.RaisePropertyChanged("UniqueID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Appointment", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Appointment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AllDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomField1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecurrenceInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReminderInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UniqueIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AllDay {
            get {
                return this.AllDayField;
            }
            set {
                if ((this.AllDayField.Equals(value) != true)) {
                    this.AllDayField = value;
                    this.RaisePropertyChanged("AllDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomField1 {
            get {
                return this.CustomField1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CustomField1Field, value) != true)) {
                    this.CustomField1Field = value;
                    this.RaisePropertyChanged("CustomField1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Label {
            get {
                return this.LabelField;
            }
            set {
                if ((this.LabelField.Equals(value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecurrenceInfo {
            get {
                return this.RecurrenceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.RecurrenceInfoField, value) != true)) {
                    this.RecurrenceInfoField = value;
                    this.RaisePropertyChanged("RecurrenceInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReminderInfo {
            get {
                return this.ReminderInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ReminderInfoField, value) != true)) {
                    this.ReminderInfoField = value;
                    this.RaisePropertyChanged("ReminderInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((this.ResourceIDField.Equals(value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceIDs {
            get {
                return this.ResourceIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDsField, value) != true)) {
                    this.ResourceIDsField = value;
                    this.RaisePropertyChanged("ResourceIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UniqueID {
            get {
                return this.UniqueIDField;
            }
            set {
                if ((this.UniqueIDField.Equals(value) != true)) {
                    this.UniqueIDField = value;
                    this.RaisePropertyChanged("UniqueID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Statu", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Statu : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MotifTable", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class MotifTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotifField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Motif {
            get {
                return this.MotifField;
            }
            set {
                if ((object.ReferenceEquals(this.MotifField, value) != true)) {
                    this.MotifField = value;
                    this.RaisePropertyChanged("Motif");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatSupp", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class CatSupp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cat {
            get {
                return this.CatField;
            }
            set {
                if ((object.ReferenceEquals(this.CatField, value) != true)) {
                    this.CatField = value;
                    this.RaisePropertyChanged("Cat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FamilleProduit", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class FamilleProduit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilleProduit1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string couleurField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilleProduit1 {
            get {
                return this.FamilleProduit1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FamilleProduit1Field, value) != true)) {
                    this.FamilleProduit1Field = value;
                    this.RaisePropertyChanged("FamilleProduit1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string couleur {
            get {
                return this.couleurField;
            }
            set {
                if ((object.ReferenceEquals(this.couleurField, value) != true)) {
                    this.couleurField = value;
                    this.RaisePropertyChanged("couleur");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Prodf", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Prodf : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CommandeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdFamilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cabField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> collisageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string designField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string familleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fournField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nfactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> peremptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> previentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> priventeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> prixaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> prixbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> prixcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> quantiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> tvaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CommandeId {
            get {
                return this.CommandeIdField;
            }
            set {
                if ((this.CommandeIdField.Equals(value) != true)) {
                    this.CommandeIdField = value;
                    this.RaisePropertyChanged("CommandeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdFamille {
            get {
                return this.IdFamilleField;
            }
            set {
                if ((this.IdFamilleField.Equals(value) != true)) {
                    this.IdFamilleField = value;
                    this.RaisePropertyChanged("IdFamille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cab {
            get {
                return this.cabField;
            }
            set {
                if ((object.ReferenceEquals(this.cabField, value) != true)) {
                    this.cabField = value;
                    this.RaisePropertyChanged("cab");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cf {
            get {
                return this.cfField;
            }
            set {
                if ((this.cfField.Equals(value) != true)) {
                    this.cfField = value;
                    this.RaisePropertyChanged("cf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> collisage {
            get {
                return this.collisageField;
            }
            set {
                if ((this.collisageField.Equals(value) != true)) {
                    this.collisageField = value;
                    this.RaisePropertyChanged("collisage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cp {
            get {
                return this.cpField;
            }
            set {
                if ((this.cpField.Equals(value) != true)) {
                    this.cpField = value;
                    this.RaisePropertyChanged("cp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> datef {
            get {
                return this.datefField;
            }
            set {
                if ((this.datefField.Equals(value) != true)) {
                    this.datefField = value;
                    this.RaisePropertyChanged("datef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string design {
            get {
                return this.designField;
            }
            set {
                if ((object.ReferenceEquals(this.designField, value) != true)) {
                    this.designField = value;
                    this.RaisePropertyChanged("design");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string famille {
            get {
                return this.familleField;
            }
            set {
                if ((object.ReferenceEquals(this.familleField, value) != true)) {
                    this.familleField = value;
                    this.RaisePropertyChanged("famille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fourn {
            get {
                return this.fournField;
            }
            set {
                if ((object.ReferenceEquals(this.fournField, value) != true)) {
                    this.fournField = value;
                    this.RaisePropertyChanged("fourn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lot {
            get {
                return this.lotField;
            }
            set {
                if ((object.ReferenceEquals(this.lotField, value) != true)) {
                    this.lotField = value;
                    this.RaisePropertyChanged("lot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nfact {
            get {
                return this.nfactField;
            }
            set {
                if ((object.ReferenceEquals(this.nfactField, value) != true)) {
                    this.nfactField = value;
                    this.RaisePropertyChanged("nfact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> perempt {
            get {
                return this.peremptField;
            }
            set {
                if ((this.peremptField.Equals(value) != true)) {
                    this.peremptField = value;
                    this.RaisePropertyChanged("perempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> previent {
            get {
                return this.previentField;
            }
            set {
                if ((this.previentField.Equals(value) != true)) {
                    this.previentField = value;
                    this.RaisePropertyChanged("previent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> privente {
            get {
                return this.priventeField;
            }
            set {
                if ((this.priventeField.Equals(value) != true)) {
                    this.priventeField = value;
                    this.RaisePropertyChanged("privente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> prixa {
            get {
                return this.prixaField;
            }
            set {
                if ((this.prixaField.Equals(value) != true)) {
                    this.prixaField = value;
                    this.RaisePropertyChanged("prixa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> prixb {
            get {
                return this.prixbField;
            }
            set {
                if ((this.prixbField.Equals(value) != true)) {
                    this.prixbField = value;
                    this.RaisePropertyChanged("prixb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> prixc {
            get {
                return this.prixcField;
            }
            set {
                if ((this.prixcField.Equals(value) != true)) {
                    this.prixcField = value;
                    this.RaisePropertyChanged("prixc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> quantite {
            get {
                return this.quantiteField;
            }
            set {
                if ((this.quantiteField.Equals(value) != true)) {
                    this.quantiteField = value;
                    this.RaisePropertyChanged("quantite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> tva {
            get {
                return this.tvaField;
            }
            set {
                if ((this.tvaField.Equals(value) != true)) {
                    this.tvaField = value;
                    this.RaisePropertyChanged("tva");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipOptic", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class MembershipOptic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CreationAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CreationAmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CreationCaisseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CreationCommandeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CreationDossierClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CreationFichierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CreationPlanningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CreationRecouvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DernierAccésField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> DernierAccésHeureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DiscussionPrivéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EnvoiReceptMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EnvoiRécéptFichierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionAmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionCaisseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionCommandeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionDossierClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionFichierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionPlanningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionRecouvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationAmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationCaisseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationCommandeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationDossierClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationFichierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationPlanningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationRecouvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleAmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleCaisseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleChatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleCommandeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleDossierClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleFichierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleParametreAccesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModulePlanningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleRecouvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleStatistiqueAccesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleVenteCompoirAccesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotDePasseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SuppressinAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SuppressionAmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SuppressionCaisseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SuppressionFichierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SuppressionPlanningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SuppressionRecouvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SupressionCommandeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SupressionDossierClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Actif {
            get {
                return this.ActifField;
            }
            set {
                if ((this.ActifField.Equals(value) != true)) {
                    this.ActifField = value;
                    this.RaisePropertyChanged("Actif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ActiveServer {
            get {
                return this.ActiveServerField;
            }
            set {
                if ((this.ActiveServerField.Equals(value) != true)) {
                    this.ActiveServerField = value;
                    this.RaisePropertyChanged("ActiveServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CreationAchat {
            get {
                return this.CreationAchatField;
            }
            set {
                if ((this.CreationAchatField.Equals(value) != true)) {
                    this.CreationAchatField = value;
                    this.RaisePropertyChanged("CreationAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CreationAms {
            get {
                return this.CreationAmsField;
            }
            set {
                if ((this.CreationAmsField.Equals(value) != true)) {
                    this.CreationAmsField = value;
                    this.RaisePropertyChanged("CreationAms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CreationCaisse {
            get {
                return this.CreationCaisseField;
            }
            set {
                if ((this.CreationCaisseField.Equals(value) != true)) {
                    this.CreationCaisseField = value;
                    this.RaisePropertyChanged("CreationCaisse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CreationCommande {
            get {
                return this.CreationCommandeField;
            }
            set {
                if ((this.CreationCommandeField.Equals(value) != true)) {
                    this.CreationCommandeField = value;
                    this.RaisePropertyChanged("CreationCommande");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CreationDossierClient {
            get {
                return this.CreationDossierClientField;
            }
            set {
                if ((this.CreationDossierClientField.Equals(value) != true)) {
                    this.CreationDossierClientField = value;
                    this.RaisePropertyChanged("CreationDossierClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CreationFichier {
            get {
                return this.CreationFichierField;
            }
            set {
                if ((this.CreationFichierField.Equals(value) != true)) {
                    this.CreationFichierField = value;
                    this.RaisePropertyChanged("CreationFichier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CreationPlanning {
            get {
                return this.CreationPlanningField;
            }
            set {
                if ((this.CreationPlanningField.Equals(value) != true)) {
                    this.CreationPlanningField = value;
                    this.RaisePropertyChanged("CreationPlanning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CreationRecouv {
            get {
                return this.CreationRecouvField;
            }
            set {
                if ((this.CreationRecouvField.Equals(value) != true)) {
                    this.CreationRecouvField = value;
                    this.RaisePropertyChanged("CreationRecouv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DernierAccés {
            get {
                return this.DernierAccésField;
            }
            set {
                if ((this.DernierAccésField.Equals(value) != true)) {
                    this.DernierAccésField = value;
                    this.RaisePropertyChanged("DernierAccés");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> DernierAccésHeure {
            get {
                return this.DernierAccésHeureField;
            }
            set {
                if ((this.DernierAccésHeureField.Equals(value) != true)) {
                    this.DernierAccésHeureField = value;
                    this.RaisePropertyChanged("DernierAccésHeure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DiscussionPrivé {
            get {
                return this.DiscussionPrivéField;
            }
            set {
                if ((this.DiscussionPrivéField.Equals(value) != true)) {
                    this.DiscussionPrivéField = value;
                    this.RaisePropertyChanged("DiscussionPrivé");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EnvoiReceptMessage {
            get {
                return this.EnvoiReceptMessageField;
            }
            set {
                if ((this.EnvoiReceptMessageField.Equals(value) != true)) {
                    this.EnvoiReceptMessageField = value;
                    this.RaisePropertyChanged("EnvoiReceptMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EnvoiRécéptFichier {
            get {
                return this.EnvoiRécéptFichierField;
            }
            set {
                if ((this.EnvoiRécéptFichierField.Equals(value) != true)) {
                    this.EnvoiRécéptFichierField = value;
                    this.RaisePropertyChanged("EnvoiRécéptFichier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionAchat {
            get {
                return this.ImpressionAchatField;
            }
            set {
                if ((this.ImpressionAchatField.Equals(value) != true)) {
                    this.ImpressionAchatField = value;
                    this.RaisePropertyChanged("ImpressionAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionAms {
            get {
                return this.ImpressionAmsField;
            }
            set {
                if ((this.ImpressionAmsField.Equals(value) != true)) {
                    this.ImpressionAmsField = value;
                    this.RaisePropertyChanged("ImpressionAms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionCaisse {
            get {
                return this.ImpressionCaisseField;
            }
            set {
                if ((this.ImpressionCaisseField.Equals(value) != true)) {
                    this.ImpressionCaisseField = value;
                    this.RaisePropertyChanged("ImpressionCaisse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionCommande {
            get {
                return this.ImpressionCommandeField;
            }
            set {
                if ((this.ImpressionCommandeField.Equals(value) != true)) {
                    this.ImpressionCommandeField = value;
                    this.RaisePropertyChanged("ImpressionCommande");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionDossierClient {
            get {
                return this.ImpressionDossierClientField;
            }
            set {
                if ((this.ImpressionDossierClientField.Equals(value) != true)) {
                    this.ImpressionDossierClientField = value;
                    this.RaisePropertyChanged("ImpressionDossierClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionFichier {
            get {
                return this.ImpressionFichierField;
            }
            set {
                if ((this.ImpressionFichierField.Equals(value) != true)) {
                    this.ImpressionFichierField = value;
                    this.RaisePropertyChanged("ImpressionFichier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionPlanning {
            get {
                return this.ImpressionPlanningField;
            }
            set {
                if ((this.ImpressionPlanningField.Equals(value) != true)) {
                    this.ImpressionPlanningField = value;
                    this.RaisePropertyChanged("ImpressionPlanning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionRecouv {
            get {
                return this.ImpressionRecouvField;
            }
            set {
                if ((this.ImpressionRecouvField.Equals(value) != true)) {
                    this.ImpressionRecouvField = value;
                    this.RaisePropertyChanged("ImpressionRecouv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationAchat {
            get {
                return this.ModificationAchatField;
            }
            set {
                if ((this.ModificationAchatField.Equals(value) != true)) {
                    this.ModificationAchatField = value;
                    this.RaisePropertyChanged("ModificationAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationAms {
            get {
                return this.ModificationAmsField;
            }
            set {
                if ((this.ModificationAmsField.Equals(value) != true)) {
                    this.ModificationAmsField = value;
                    this.RaisePropertyChanged("ModificationAms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationCaisse {
            get {
                return this.ModificationCaisseField;
            }
            set {
                if ((this.ModificationCaisseField.Equals(value) != true)) {
                    this.ModificationCaisseField = value;
                    this.RaisePropertyChanged("ModificationCaisse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationCommande {
            get {
                return this.ModificationCommandeField;
            }
            set {
                if ((this.ModificationCommandeField.Equals(value) != true)) {
                    this.ModificationCommandeField = value;
                    this.RaisePropertyChanged("ModificationCommande");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationDossierClient {
            get {
                return this.ModificationDossierClientField;
            }
            set {
                if ((this.ModificationDossierClientField.Equals(value) != true)) {
                    this.ModificationDossierClientField = value;
                    this.RaisePropertyChanged("ModificationDossierClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationFichier {
            get {
                return this.ModificationFichierField;
            }
            set {
                if ((this.ModificationFichierField.Equals(value) != true)) {
                    this.ModificationFichierField = value;
                    this.RaisePropertyChanged("ModificationFichier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationPlanning {
            get {
                return this.ModificationPlanningField;
            }
            set {
                if ((this.ModificationPlanningField.Equals(value) != true)) {
                    this.ModificationPlanningField = value;
                    this.RaisePropertyChanged("ModificationPlanning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationRecouv {
            get {
                return this.ModificationRecouvField;
            }
            set {
                if ((this.ModificationRecouvField.Equals(value) != true)) {
                    this.ModificationRecouvField = value;
                    this.RaisePropertyChanged("ModificationRecouv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleAchat {
            get {
                return this.ModuleAchatField;
            }
            set {
                if ((this.ModuleAchatField.Equals(value) != true)) {
                    this.ModuleAchatField = value;
                    this.RaisePropertyChanged("ModuleAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleAms {
            get {
                return this.ModuleAmsField;
            }
            set {
                if ((this.ModuleAmsField.Equals(value) != true)) {
                    this.ModuleAmsField = value;
                    this.RaisePropertyChanged("ModuleAms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleCaisse {
            get {
                return this.ModuleCaisseField;
            }
            set {
                if ((this.ModuleCaisseField.Equals(value) != true)) {
                    this.ModuleCaisseField = value;
                    this.RaisePropertyChanged("ModuleCaisse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleChat {
            get {
                return this.ModuleChatField;
            }
            set {
                if ((this.ModuleChatField.Equals(value) != true)) {
                    this.ModuleChatField = value;
                    this.RaisePropertyChanged("ModuleChat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleCommande {
            get {
                return this.ModuleCommandeField;
            }
            set {
                if ((this.ModuleCommandeField.Equals(value) != true)) {
                    this.ModuleCommandeField = value;
                    this.RaisePropertyChanged("ModuleCommande");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleDossierClient {
            get {
                return this.ModuleDossierClientField;
            }
            set {
                if ((this.ModuleDossierClientField.Equals(value) != true)) {
                    this.ModuleDossierClientField = value;
                    this.RaisePropertyChanged("ModuleDossierClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleFichier {
            get {
                return this.ModuleFichierField;
            }
            set {
                if ((this.ModuleFichierField.Equals(value) != true)) {
                    this.ModuleFichierField = value;
                    this.RaisePropertyChanged("ModuleFichier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleParametreAcces {
            get {
                return this.ModuleParametreAccesField;
            }
            set {
                if ((this.ModuleParametreAccesField.Equals(value) != true)) {
                    this.ModuleParametreAccesField = value;
                    this.RaisePropertyChanged("ModuleParametreAcces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModulePlanning {
            get {
                return this.ModulePlanningField;
            }
            set {
                if ((this.ModulePlanningField.Equals(value) != true)) {
                    this.ModulePlanningField = value;
                    this.RaisePropertyChanged("ModulePlanning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleRecouv {
            get {
                return this.ModuleRecouvField;
            }
            set {
                if ((this.ModuleRecouvField.Equals(value) != true)) {
                    this.ModuleRecouvField = value;
                    this.RaisePropertyChanged("ModuleRecouv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleStatistiqueAcces {
            get {
                return this.ModuleStatistiqueAccesField;
            }
            set {
                if ((this.ModuleStatistiqueAccesField.Equals(value) != true)) {
                    this.ModuleStatistiqueAccesField = value;
                    this.RaisePropertyChanged("ModuleStatistiqueAcces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleVenteCompoirAcces {
            get {
                return this.ModuleVenteCompoirAccesField;
            }
            set {
                if ((this.ModuleVenteCompoirAccesField.Equals(value) != true)) {
                    this.ModuleVenteCompoirAccesField = value;
                    this.RaisePropertyChanged("ModuleVenteCompoirAcces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MotDePasse {
            get {
                return this.MotDePasseField;
            }
            set {
                if ((object.ReferenceEquals(this.MotDePasseField, value) != true)) {
                    this.MotDePasseField = value;
                    this.RaisePropertyChanged("MotDePasse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SuppressinAchat {
            get {
                return this.SuppressinAchatField;
            }
            set {
                if ((this.SuppressinAchatField.Equals(value) != true)) {
                    this.SuppressinAchatField = value;
                    this.RaisePropertyChanged("SuppressinAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SuppressionAms {
            get {
                return this.SuppressionAmsField;
            }
            set {
                if ((this.SuppressionAmsField.Equals(value) != true)) {
                    this.SuppressionAmsField = value;
                    this.RaisePropertyChanged("SuppressionAms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SuppressionCaisse {
            get {
                return this.SuppressionCaisseField;
            }
            set {
                if ((this.SuppressionCaisseField.Equals(value) != true)) {
                    this.SuppressionCaisseField = value;
                    this.RaisePropertyChanged("SuppressionCaisse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SuppressionFichier {
            get {
                return this.SuppressionFichierField;
            }
            set {
                if ((this.SuppressionFichierField.Equals(value) != true)) {
                    this.SuppressionFichierField = value;
                    this.RaisePropertyChanged("SuppressionFichier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SuppressionPlanning {
            get {
                return this.SuppressionPlanningField;
            }
            set {
                if ((this.SuppressionPlanningField.Equals(value) != true)) {
                    this.SuppressionPlanningField = value;
                    this.RaisePropertyChanged("SuppressionPlanning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SuppressionRecouv {
            get {
                return this.SuppressionRecouvField;
            }
            set {
                if ((this.SuppressionRecouvField.Equals(value) != true)) {
                    this.SuppressionRecouvField = value;
                    this.RaisePropertyChanged("SuppressionRecouv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SupressionCommande {
            get {
                return this.SupressionCommandeField;
            }
            set {
                if ((this.SupressionCommandeField.Equals(value) != true)) {
                    this.SupressionCommandeField = value;
                    this.RaisePropertyChanged("SupressionCommande");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SupressionDossierClient {
            get {
                return this.SupressionDossierClientField;
            }
            set {
                if ((this.SupressionDossierClientField.Equals(value) != true)) {
                    this.SupressionDossierClientField = value;
                    this.RaisePropertyChanged("SupressionDossierClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DicomFichier", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class DicomFichier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChemainFichierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomFichierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChemainFichier {
            get {
                return this.ChemainFichierField;
            }
            set {
                if ((object.ReferenceEquals(this.ChemainFichierField, value) != true)) {
                    this.ChemainFichierField = value;
                    this.RaisePropertyChanged("ChemainFichier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdClient {
            get {
                return this.IdClientField;
            }
            set {
                if ((this.IdClientField.Equals(value) != true)) {
                    this.IdClientField = value;
                    this.RaisePropertyChanged("IdClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomFichier {
            get {
                return this.NomFichierField;
            }
            set {
                if ((object.ReferenceEquals(this.NomFichierField, value) != true)) {
                    this.NomFichierField = value;
                    this.RaisePropertyChanged("NomFichier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Raison {
            get {
                return this.RaisonField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonField, value) != true)) {
                    this.RaisonField = value;
                    this.RaisePropertyChanged("Raison");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Param", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Param : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AffichPrixAchatVenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FactureSansTvaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionCollisageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LimonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModiPrixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModifTarifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MontantFactureProvisoireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> affibenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> affisoldeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> comptavoirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> comptbonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> comptboncommandefournField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> comptcaissecomptoirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> comptcavoirbonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> comptfactureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> comptfacturerouteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> comptproformaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> coutmoyenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string entete1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string entete2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string entete3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> interdirperemptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string logoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> maxremiseventeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> modidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ppage1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ppage2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ppage3Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AffichPrixAchatVente {
            get {
                return this.AffichPrixAchatVenteField;
            }
            set {
                if ((this.AffichPrixAchatVenteField.Equals(value) != true)) {
                    this.AffichPrixAchatVenteField = value;
                    this.RaisePropertyChanged("AffichPrixAchatVente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comon {
            get {
                return this.ComonField;
            }
            set {
                if ((object.ReferenceEquals(this.ComonField, value) != true)) {
                    this.ComonField = value;
                    this.RaisePropertyChanged("Comon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FactureSansTva {
            get {
                return this.FactureSansTvaField;
            }
            set {
                if ((this.FactureSansTvaField.Equals(value) != true)) {
                    this.FactureSansTvaField = value;
                    this.RaisePropertyChanged("FactureSansTva");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionCollisage {
            get {
                return this.ImpressionCollisageField;
            }
            set {
                if ((this.ImpressionCollisageField.Equals(value) != true)) {
                    this.ImpressionCollisageField = value;
                    this.RaisePropertyChanged("ImpressionCollisage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Limon {
            get {
                return this.LimonField;
            }
            set {
                if ((object.ReferenceEquals(this.LimonField, value) != true)) {
                    this.LimonField = value;
                    this.RaisePropertyChanged("Limon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModiPrix {
            get {
                return this.ModiPrixField;
            }
            set {
                if ((this.ModiPrixField.Equals(value) != true)) {
                    this.ModiPrixField = value;
                    this.RaisePropertyChanged("ModiPrix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModifTarif {
            get {
                return this.ModifTarifField;
            }
            set {
                if ((this.ModifTarifField.Equals(value) != true)) {
                    this.ModifTarifField = value;
                    this.RaisePropertyChanged("ModifTarif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> MontantFactureProvisoire {
            get {
                return this.MontantFactureProvisoireField;
            }
            set {
                if ((this.MontantFactureProvisoireField.Equals(value) != true)) {
                    this.MontantFactureProvisoireField = value;
                    this.RaisePropertyChanged("MontantFactureProvisoire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pays {
            get {
                return this.PaysField;
            }
            set {
                if ((object.ReferenceEquals(this.PaysField, value) != true)) {
                    this.PaysField = value;
                    this.RaisePropertyChanged("Pays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> affiben {
            get {
                return this.affibenField;
            }
            set {
                if ((this.affibenField.Equals(value) != true)) {
                    this.affibenField = value;
                    this.RaisePropertyChanged("affiben");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> affisolde {
            get {
                return this.affisoldeField;
            }
            set {
                if ((this.affisoldeField.Equals(value) != true)) {
                    this.affisoldeField = value;
                    this.RaisePropertyChanged("affisolde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> comptavoir {
            get {
                return this.comptavoirField;
            }
            set {
                if ((this.comptavoirField.Equals(value) != true)) {
                    this.comptavoirField = value;
                    this.RaisePropertyChanged("comptavoir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> comptbon {
            get {
                return this.comptbonField;
            }
            set {
                if ((this.comptbonField.Equals(value) != true)) {
                    this.comptbonField = value;
                    this.RaisePropertyChanged("comptbon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> comptboncommandefourn {
            get {
                return this.comptboncommandefournField;
            }
            set {
                if ((this.comptboncommandefournField.Equals(value) != true)) {
                    this.comptboncommandefournField = value;
                    this.RaisePropertyChanged("comptboncommandefourn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> comptcaissecomptoir {
            get {
                return this.comptcaissecomptoirField;
            }
            set {
                if ((this.comptcaissecomptoirField.Equals(value) != true)) {
                    this.comptcaissecomptoirField = value;
                    this.RaisePropertyChanged("comptcaissecomptoir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> comptcavoirbon {
            get {
                return this.comptcavoirbonField;
            }
            set {
                if ((this.comptcavoirbonField.Equals(value) != true)) {
                    this.comptcavoirbonField = value;
                    this.RaisePropertyChanged("comptcavoirbon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> comptfacture {
            get {
                return this.comptfactureField;
            }
            set {
                if ((this.comptfactureField.Equals(value) != true)) {
                    this.comptfactureField = value;
                    this.RaisePropertyChanged("comptfacture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> comptfactureroute {
            get {
                return this.comptfacturerouteField;
            }
            set {
                if ((this.comptfacturerouteField.Equals(value) != true)) {
                    this.comptfacturerouteField = value;
                    this.RaisePropertyChanged("comptfactureroute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> comptproforma {
            get {
                return this.comptproformaField;
            }
            set {
                if ((this.comptproformaField.Equals(value) != true)) {
                    this.comptproformaField = value;
                    this.RaisePropertyChanged("comptproforma");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> coutmoyen {
            get {
                return this.coutmoyenField;
            }
            set {
                if ((this.coutmoyenField.Equals(value) != true)) {
                    this.coutmoyenField = value;
                    this.RaisePropertyChanged("coutmoyen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string entete1 {
            get {
                return this.entete1Field;
            }
            set {
                if ((object.ReferenceEquals(this.entete1Field, value) != true)) {
                    this.entete1Field = value;
                    this.RaisePropertyChanged("entete1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string entete2 {
            get {
                return this.entete2Field;
            }
            set {
                if ((object.ReferenceEquals(this.entete2Field, value) != true)) {
                    this.entete2Field = value;
                    this.RaisePropertyChanged("entete2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string entete3 {
            get {
                return this.entete3Field;
            }
            set {
                if ((object.ReferenceEquals(this.entete3Field, value) != true)) {
                    this.entete3Field = value;
                    this.RaisePropertyChanged("entete3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> interdirperempt {
            get {
                return this.interdirperemptField;
            }
            set {
                if ((this.interdirperemptField.Equals(value) != true)) {
                    this.interdirperemptField = value;
                    this.RaisePropertyChanged("interdirperempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string logo {
            get {
                return this.logoField;
            }
            set {
                if ((object.ReferenceEquals(this.logoField, value) != true)) {
                    this.logoField = value;
                    this.RaisePropertyChanged("logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> maxremisevente {
            get {
                return this.maxremiseventeField;
            }
            set {
                if ((this.maxremiseventeField.Equals(value) != true)) {
                    this.maxremiseventeField = value;
                    this.RaisePropertyChanged("maxremisevente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> modidate {
            get {
                return this.modidateField;
            }
            set {
                if ((this.modidateField.Equals(value) != true)) {
                    this.modidateField = value;
                    this.RaisePropertyChanged("modidate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ppage1 {
            get {
                return this.ppage1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ppage1Field, value) != true)) {
                    this.ppage1Field = value;
                    this.RaisePropertyChanged("ppage1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ppage2 {
            get {
                return this.ppage2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ppage2Field, value) != true)) {
                    this.ppage2Field = value;
                    this.RaisePropertyChanged("ppage2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ppage3 {
            get {
                return this.ppage3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ppage3Field, value) != true)) {
                    this.ppage3Field = value;
                    this.RaisePropertyChanged("ppage3");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Produit", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Produit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CatalogueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdFamilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdMarqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixRevientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixVenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StockAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cabField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string clecabField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string designField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string familleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string marqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string photoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> typeventeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Catalogue {
            get {
                return this.CatalogueField;
            }
            set {
                if ((this.CatalogueField.Equals(value) != true)) {
                    this.CatalogueField = value;
                    this.RaisePropertyChanged("Catalogue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdFamille {
            get {
                return this.IdFamilleField;
            }
            set {
                if ((this.IdFamilleField.Equals(value) != true)) {
                    this.IdFamilleField = value;
                    this.RaisePropertyChanged("IdFamille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdMarque {
            get {
                return this.IdMarqueField;
            }
            set {
                if ((this.IdMarqueField.Equals(value) != true)) {
                    this.IdMarqueField = value;
                    this.RaisePropertyChanged("IdMarque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixRevient {
            get {
                return this.PrixRevientField;
            }
            set {
                if ((this.PrixRevientField.Equals(value) != true)) {
                    this.PrixRevientField = value;
                    this.RaisePropertyChanged("PrixRevient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixVente {
            get {
                return this.PrixVenteField;
            }
            set {
                if ((this.PrixVenteField.Equals(value) != true)) {
                    this.PrixVenteField = value;
                    this.RaisePropertyChanged("PrixVente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> StockAlert {
            get {
                return this.StockAlertField;
            }
            set {
                if ((this.StockAlertField.Equals(value) != true)) {
                    this.StockAlertField = value;
                    this.RaisePropertyChanged("StockAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cab {
            get {
                return this.cabField;
            }
            set {
                if ((object.ReferenceEquals(this.cabField, value) != true)) {
                    this.cabField = value;
                    this.RaisePropertyChanged("cab");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string clecab {
            get {
                return this.clecabField;
            }
            set {
                if ((object.ReferenceEquals(this.clecabField, value) != true)) {
                    this.clecabField = value;
                    this.RaisePropertyChanged("clecab");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string design {
            get {
                return this.designField;
            }
            set {
                if ((object.ReferenceEquals(this.designField, value) != true)) {
                    this.designField = value;
                    this.RaisePropertyChanged("design");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string famille {
            get {
                return this.familleField;
            }
            set {
                if ((object.ReferenceEquals(this.familleField, value) != true)) {
                    this.familleField = value;
                    this.RaisePropertyChanged("famille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string marque {
            get {
                return this.marqueField;
            }
            set {
                if ((object.ReferenceEquals(this.marqueField, value) != true)) {
                    this.marqueField = value;
                    this.RaisePropertyChanged("marque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string photo {
            get {
                return this.photoField;
            }
            set {
                if ((object.ReferenceEquals(this.photoField, value) != true)) {
                    this.photoField = value;
                    this.RaisePropertyChanged("photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> typevente {
            get {
                return this.typeventeField;
            }
            set {
                if ((this.typeventeField.Equals(value) != true)) {
                    this.typeventeField = value;
                    this.RaisePropertyChanged("typevente");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdaptationLentille", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class AdaptationLentille : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AmplitudeDroiteCompletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AmplitudeDroiteIncompletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AmplitudeGaucheCompletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AmplitudeGaucheIncompletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ButDroitesecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ButGauchesecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DroiteVal1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DroiteVal2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EtatDroiteValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EtatGaucheValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FrequenceDroiteFrequentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FrequenceDroiteLentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FrequenceDroiteNormalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FrequenceGaucheFrequentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FrequenceGaucheLentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FrequenceGaucheNormalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GaucheVal1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GaucheVal2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ReactionDroiteLenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ReactionDroiteNormalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ReactionDroiteRapideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ReactionGaucheLenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ReactionGaucheNormalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ReactionGaucheRapideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarquesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecretionDroitemmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecretionGauchemmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TonusDroiteFaibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TonusDroiteFortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TonusDroiteNormalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TonusGaucheFaibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TonusGaucheFortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TonusGaucheNormalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AmplitudeDroiteComplet {
            get {
                return this.AmplitudeDroiteCompletField;
            }
            set {
                if ((this.AmplitudeDroiteCompletField.Equals(value) != true)) {
                    this.AmplitudeDroiteCompletField = value;
                    this.RaisePropertyChanged("AmplitudeDroiteComplet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AmplitudeDroiteIncomplet {
            get {
                return this.AmplitudeDroiteIncompletField;
            }
            set {
                if ((this.AmplitudeDroiteIncompletField.Equals(value) != true)) {
                    this.AmplitudeDroiteIncompletField = value;
                    this.RaisePropertyChanged("AmplitudeDroiteIncomplet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AmplitudeGaucheComplet {
            get {
                return this.AmplitudeGaucheCompletField;
            }
            set {
                if ((this.AmplitudeGaucheCompletField.Equals(value) != true)) {
                    this.AmplitudeGaucheCompletField = value;
                    this.RaisePropertyChanged("AmplitudeGaucheComplet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AmplitudeGaucheIncomplet {
            get {
                return this.AmplitudeGaucheIncompletField;
            }
            set {
                if ((this.AmplitudeGaucheIncompletField.Equals(value) != true)) {
                    this.AmplitudeGaucheIncompletField = value;
                    this.RaisePropertyChanged("AmplitudeGaucheIncomplet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ButDroitesec {
            get {
                return this.ButDroitesecField;
            }
            set {
                if ((object.ReferenceEquals(this.ButDroitesecField, value) != true)) {
                    this.ButDroitesecField = value;
                    this.RaisePropertyChanged("ButDroitesec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ButGauchesec {
            get {
                return this.ButGauchesecField;
            }
            set {
                if ((object.ReferenceEquals(this.ButGauchesecField, value) != true)) {
                    this.ButGauchesecField = value;
                    this.RaisePropertyChanged("ButGauchesec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DroiteVal1 {
            get {
                return this.DroiteVal1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DroiteVal1Field, value) != true)) {
                    this.DroiteVal1Field = value;
                    this.RaisePropertyChanged("DroiteVal1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DroiteVal2 {
            get {
                return this.DroiteVal2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DroiteVal2Field, value) != true)) {
                    this.DroiteVal2Field = value;
                    this.RaisePropertyChanged("DroiteVal2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EtatDroiteVal {
            get {
                return this.EtatDroiteValField;
            }
            set {
                if ((object.ReferenceEquals(this.EtatDroiteValField, value) != true)) {
                    this.EtatDroiteValField = value;
                    this.RaisePropertyChanged("EtatDroiteVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EtatGaucheVal {
            get {
                return this.EtatGaucheValField;
            }
            set {
                if ((object.ReferenceEquals(this.EtatGaucheValField, value) != true)) {
                    this.EtatGaucheValField = value;
                    this.RaisePropertyChanged("EtatGaucheVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FrequenceDroiteFrequent {
            get {
                return this.FrequenceDroiteFrequentField;
            }
            set {
                if ((this.FrequenceDroiteFrequentField.Equals(value) != true)) {
                    this.FrequenceDroiteFrequentField = value;
                    this.RaisePropertyChanged("FrequenceDroiteFrequent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FrequenceDroiteLent {
            get {
                return this.FrequenceDroiteLentField;
            }
            set {
                if ((this.FrequenceDroiteLentField.Equals(value) != true)) {
                    this.FrequenceDroiteLentField = value;
                    this.RaisePropertyChanged("FrequenceDroiteLent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FrequenceDroiteNormal {
            get {
                return this.FrequenceDroiteNormalField;
            }
            set {
                if ((this.FrequenceDroiteNormalField.Equals(value) != true)) {
                    this.FrequenceDroiteNormalField = value;
                    this.RaisePropertyChanged("FrequenceDroiteNormal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FrequenceGaucheFrequent {
            get {
                return this.FrequenceGaucheFrequentField;
            }
            set {
                if ((this.FrequenceGaucheFrequentField.Equals(value) != true)) {
                    this.FrequenceGaucheFrequentField = value;
                    this.RaisePropertyChanged("FrequenceGaucheFrequent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FrequenceGaucheLent {
            get {
                return this.FrequenceGaucheLentField;
            }
            set {
                if ((this.FrequenceGaucheLentField.Equals(value) != true)) {
                    this.FrequenceGaucheLentField = value;
                    this.RaisePropertyChanged("FrequenceGaucheLent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FrequenceGaucheNormal {
            get {
                return this.FrequenceGaucheNormalField;
            }
            set {
                if ((this.FrequenceGaucheNormalField.Equals(value) != true)) {
                    this.FrequenceGaucheNormalField = value;
                    this.RaisePropertyChanged("FrequenceGaucheNormal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GaucheVal1 {
            get {
                return this.GaucheVal1Field;
            }
            set {
                if ((object.ReferenceEquals(this.GaucheVal1Field, value) != true)) {
                    this.GaucheVal1Field = value;
                    this.RaisePropertyChanged("GaucheVal1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GaucheVal2 {
            get {
                return this.GaucheVal2Field;
            }
            set {
                if ((object.ReferenceEquals(this.GaucheVal2Field, value) != true)) {
                    this.GaucheVal2Field = value;
                    this.RaisePropertyChanged("GaucheVal2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdClient {
            get {
                return this.IdClientField;
            }
            set {
                if ((this.IdClientField.Equals(value) != true)) {
                    this.IdClientField = value;
                    this.RaisePropertyChanged("IdClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaisonClient {
            get {
                return this.RaisonClientField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonClientField, value) != true)) {
                    this.RaisonClientField = value;
                    this.RaisePropertyChanged("RaisonClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ReactionDroiteLente {
            get {
                return this.ReactionDroiteLenteField;
            }
            set {
                if ((this.ReactionDroiteLenteField.Equals(value) != true)) {
                    this.ReactionDroiteLenteField = value;
                    this.RaisePropertyChanged("ReactionDroiteLente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ReactionDroiteNormal {
            get {
                return this.ReactionDroiteNormalField;
            }
            set {
                if ((this.ReactionDroiteNormalField.Equals(value) != true)) {
                    this.ReactionDroiteNormalField = value;
                    this.RaisePropertyChanged("ReactionDroiteNormal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ReactionDroiteRapide {
            get {
                return this.ReactionDroiteRapideField;
            }
            set {
                if ((this.ReactionDroiteRapideField.Equals(value) != true)) {
                    this.ReactionDroiteRapideField = value;
                    this.RaisePropertyChanged("ReactionDroiteRapide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ReactionGaucheLente {
            get {
                return this.ReactionGaucheLenteField;
            }
            set {
                if ((this.ReactionGaucheLenteField.Equals(value) != true)) {
                    this.ReactionGaucheLenteField = value;
                    this.RaisePropertyChanged("ReactionGaucheLente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ReactionGaucheNormal {
            get {
                return this.ReactionGaucheNormalField;
            }
            set {
                if ((this.ReactionGaucheNormalField.Equals(value) != true)) {
                    this.ReactionGaucheNormalField = value;
                    this.RaisePropertyChanged("ReactionGaucheNormal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ReactionGaucheRapide {
            get {
                return this.ReactionGaucheRapideField;
            }
            set {
                if ((this.ReactionGaucheRapideField.Equals(value) != true)) {
                    this.ReactionGaucheRapideField = value;
                    this.RaisePropertyChanged("ReactionGaucheRapide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarques {
            get {
                return this.RemarquesField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarquesField, value) != true)) {
                    this.RemarquesField = value;
                    this.RaisePropertyChanged("Remarques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecretionDroitemm {
            get {
                return this.SecretionDroitemmField;
            }
            set {
                if ((object.ReferenceEquals(this.SecretionDroitemmField, value) != true)) {
                    this.SecretionDroitemmField = value;
                    this.RaisePropertyChanged("SecretionDroitemm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecretionGauchemm {
            get {
                return this.SecretionGauchemmField;
            }
            set {
                if ((object.ReferenceEquals(this.SecretionGauchemmField, value) != true)) {
                    this.SecretionGauchemmField = value;
                    this.RaisePropertyChanged("SecretionGauchemm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> TonusDroiteFaible {
            get {
                return this.TonusDroiteFaibleField;
            }
            set {
                if ((this.TonusDroiteFaibleField.Equals(value) != true)) {
                    this.TonusDroiteFaibleField = value;
                    this.RaisePropertyChanged("TonusDroiteFaible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> TonusDroiteFort {
            get {
                return this.TonusDroiteFortField;
            }
            set {
                if ((this.TonusDroiteFortField.Equals(value) != true)) {
                    this.TonusDroiteFortField = value;
                    this.RaisePropertyChanged("TonusDroiteFort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> TonusDroiteNormal {
            get {
                return this.TonusDroiteNormalField;
            }
            set {
                if ((this.TonusDroiteNormalField.Equals(value) != true)) {
                    this.TonusDroiteNormalField = value;
                    this.RaisePropertyChanged("TonusDroiteNormal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> TonusGaucheFaible {
            get {
                return this.TonusGaucheFaibleField;
            }
            set {
                if ((this.TonusGaucheFaibleField.Equals(value) != true)) {
                    this.TonusGaucheFaibleField = value;
                    this.RaisePropertyChanged("TonusGaucheFaible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> TonusGaucheFort {
            get {
                return this.TonusGaucheFortField;
            }
            set {
                if ((this.TonusGaucheFortField.Equals(value) != true)) {
                    this.TonusGaucheFortField = value;
                    this.RaisePropertyChanged("TonusGaucheFort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> TonusGaucheNormal {
            get {
                return this.TonusGaucheNormalField;
            }
            set {
                if ((this.TonusGaucheNormalField.Equals(value) != true)) {
                    this.TonusGaucheNormalField = value;
                    this.RaisePropertyChanged("TonusGaucheNormal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RendezVou", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class RendezVou : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FirstVisitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RendezVousAvecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FirstVisit {
            get {
                return this.FirstVisitField;
            }
            set {
                if ((this.FirstVisitField.Equals(value) != true)) {
                    this.FirstVisitField = value;
                    this.RaisePropertyChanged("FirstVisit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdClient {
            get {
                return this.IdClientField;
            }
            set {
                if ((this.IdClientField.Equals(value) != true)) {
                    this.IdClientField = value;
                    this.RaisePropertyChanged("IdClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaisonClient {
            get {
                return this.RaisonClientField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonClientField, value) != true)) {
                    this.RaisonClientField = value;
                    this.RaisePropertyChanged("RaisonClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RendezVousAvec {
            get {
                return this.RendezVousAvecField;
            }
            set {
                if ((object.ReferenceEquals(this.RendezVousAvecField, value) != true)) {
                    this.RendezVousAvecField = value;
                    this.RaisePropertyChanged("RendezVousAvec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Paint", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Paint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentaireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] InkCanvasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Commentaire {
            get {
                return this.CommentaireField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentaireField, value) != true)) {
                    this.CommentaireField = value;
                    this.RaisePropertyChanged("Commentaire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdClient {
            get {
                return this.IdClientField;
            }
            set {
                if ((this.IdClientField.Equals(value) != true)) {
                    this.IdClientField = value;
                    this.RaisePropertyChanged("IdClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] InkCanvas {
            get {
                return this.InkCanvasField;
            }
            set {
                if ((object.ReferenceEquals(this.InkCanvasField, value) != true)) {
                    this.InkCanvasField = value;
                    this.RaisePropertyChanged("InkCanvas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaisonClient {
            get {
                return this.RaisonClientField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonClientField, value) != true)) {
                    this.RaisonClientField = value;
                    this.RaisePropertyChanged("RaisonClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Anamnese", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Anamnese : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllergiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EtatDeSanteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LentillePrNonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LentillePrOuiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LentillePrRigidesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LentillePrSansSuccesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LentillePrSouplesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LentillePrSuccesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotivationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefereParField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SportHobbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Allergies {
            get {
                return this.AllergiesField;
            }
            set {
                if ((object.ReferenceEquals(this.AllergiesField, value) != true)) {
                    this.AllergiesField = value;
                    this.RaisePropertyChanged("Allergies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Autres {
            get {
                return this.AutresField;
            }
            set {
                if ((object.ReferenceEquals(this.AutresField, value) != true)) {
                    this.AutresField = value;
                    this.RaisePropertyChanged("Autres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EtatDeSante {
            get {
                return this.EtatDeSanteField;
            }
            set {
                if ((object.ReferenceEquals(this.EtatDeSanteField, value) != true)) {
                    this.EtatDeSanteField = value;
                    this.RaisePropertyChanged("EtatDeSante");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdClient {
            get {
                return this.IdClientField;
            }
            set {
                if ((this.IdClientField.Equals(value) != true)) {
                    this.IdClientField = value;
                    this.RaisePropertyChanged("IdClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> LentillePrNon {
            get {
                return this.LentillePrNonField;
            }
            set {
                if ((this.LentillePrNonField.Equals(value) != true)) {
                    this.LentillePrNonField = value;
                    this.RaisePropertyChanged("LentillePrNon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> LentillePrOui {
            get {
                return this.LentillePrOuiField;
            }
            set {
                if ((this.LentillePrOuiField.Equals(value) != true)) {
                    this.LentillePrOuiField = value;
                    this.RaisePropertyChanged("LentillePrOui");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> LentillePrRigides {
            get {
                return this.LentillePrRigidesField;
            }
            set {
                if ((this.LentillePrRigidesField.Equals(value) != true)) {
                    this.LentillePrRigidesField = value;
                    this.RaisePropertyChanged("LentillePrRigides");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> LentillePrSansSucces {
            get {
                return this.LentillePrSansSuccesField;
            }
            set {
                if ((this.LentillePrSansSuccesField.Equals(value) != true)) {
                    this.LentillePrSansSuccesField = value;
                    this.RaisePropertyChanged("LentillePrSansSucces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> LentillePrSouples {
            get {
                return this.LentillePrSouplesField;
            }
            set {
                if ((this.LentillePrSouplesField.Equals(value) != true)) {
                    this.LentillePrSouplesField = value;
                    this.RaisePropertyChanged("LentillePrSouples");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> LentillePrSucces {
            get {
                return this.LentillePrSuccesField;
            }
            set {
                if ((this.LentillePrSuccesField.Equals(value) != true)) {
                    this.LentillePrSuccesField = value;
                    this.RaisePropertyChanged("LentillePrSucces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Medicalments {
            get {
                return this.MedicalmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalmentsField, value) != true)) {
                    this.MedicalmentsField = value;
                    this.RaisePropertyChanged("Medicalments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Motivation {
            get {
                return this.MotivationField;
            }
            set {
                if ((object.ReferenceEquals(this.MotivationField, value) != true)) {
                    this.MotivationField = value;
                    this.RaisePropertyChanged("Motivation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Profession {
            get {
                return this.ProfessionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionField, value) != true)) {
                    this.ProfessionField = value;
                    this.RaisePropertyChanged("Profession");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaisonClient {
            get {
                return this.RaisonClientField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonClientField, value) != true)) {
                    this.RaisonClientField = value;
                    this.RaisePropertyChanged("RaisonClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferePar {
            get {
                return this.RefereParField;
            }
            set {
                if ((object.ReferenceEquals(this.RefereParField, value) != true)) {
                    this.RefereParField = value;
                    this.RaisePropertyChanged("ReferePar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SportHobby {
            get {
                return this.SportHobbyField;
            }
            set {
                if ((object.ReferenceEquals(this.SportHobbyField, value) != true)) {
                    this.SportHobbyField = value;
                    this.RaisePropertyChanged("SportHobby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExamenBinoculaire", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class ExamenBinoculaire : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccomodationACAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccomodationFlexibiliteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutreInformationsOeilDominantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutreInformationsPPCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutreInformationsPupilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutreInformationsStereoscopieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverTestLoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverTestPresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Motricite1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Motricite2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Motricite3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Motricite4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Motricite5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Motricite6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Motricite7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Motricite8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PhorieLoinHorizontaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhorieLoinHorizontaleStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhorieLoinVerticalStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PhorieLoinVerticaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PhoriePresHorizontaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoriePresHorizontaleStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PressionMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PressionMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PressionMoyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaccadiqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VergenceBaseExt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VergenceBaseExt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VergenceBaseExt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VergenceBaseInt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VergenceBaseInt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VergencePresBaseExt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VergencePresBaseExt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VergencePresBaseExt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VergencePresBaseInt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VergencePresBaseInt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VergencePresBaseInt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VergenceVerticale1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VergenceVerticale2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VisionDesCouleursBleuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VisionDesCouleursChromatopsieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VisionDesCouleursRougeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VisionDesCouleursVertField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccomodationACA {
            get {
                return this.AccomodationACAField;
            }
            set {
                if ((object.ReferenceEquals(this.AccomodationACAField, value) != true)) {
                    this.AccomodationACAField = value;
                    this.RaisePropertyChanged("AccomodationACA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccomodationFlexibilite {
            get {
                return this.AccomodationFlexibiliteField;
            }
            set {
                if ((object.ReferenceEquals(this.AccomodationFlexibiliteField, value) != true)) {
                    this.AccomodationFlexibiliteField = value;
                    this.RaisePropertyChanged("AccomodationFlexibilite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutreInformationsOeilDominant {
            get {
                return this.AutreInformationsOeilDominantField;
            }
            set {
                if ((object.ReferenceEquals(this.AutreInformationsOeilDominantField, value) != true)) {
                    this.AutreInformationsOeilDominantField = value;
                    this.RaisePropertyChanged("AutreInformationsOeilDominant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutreInformationsPPC {
            get {
                return this.AutreInformationsPPCField;
            }
            set {
                if ((object.ReferenceEquals(this.AutreInformationsPPCField, value) != true)) {
                    this.AutreInformationsPPCField = value;
                    this.RaisePropertyChanged("AutreInformationsPPC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutreInformationsPupiles {
            get {
                return this.AutreInformationsPupilesField;
            }
            set {
                if ((object.ReferenceEquals(this.AutreInformationsPupilesField, value) != true)) {
                    this.AutreInformationsPupilesField = value;
                    this.RaisePropertyChanged("AutreInformationsPupiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutreInformationsStereoscopie {
            get {
                return this.AutreInformationsStereoscopieField;
            }
            set {
                if ((object.ReferenceEquals(this.AutreInformationsStereoscopieField, value) != true)) {
                    this.AutreInformationsStereoscopieField = value;
                    this.RaisePropertyChanged("AutreInformationsStereoscopie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverTestLoin {
            get {
                return this.CoverTestLoinField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverTestLoinField, value) != true)) {
                    this.CoverTestLoinField = value;
                    this.RaisePropertyChanged("CoverTestLoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverTestPres {
            get {
                return this.CoverTestPresField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverTestPresField, value) != true)) {
                    this.CoverTestPresField = value;
                    this.RaisePropertyChanged("CoverTestPres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdClient {
            get {
                return this.IdClientField;
            }
            set {
                if ((this.IdClientField.Equals(value) != true)) {
                    this.IdClientField = value;
                    this.RaisePropertyChanged("IdClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Motricite1 {
            get {
                return this.Motricite1Field;
            }
            set {
                if ((this.Motricite1Field.Equals(value) != true)) {
                    this.Motricite1Field = value;
                    this.RaisePropertyChanged("Motricite1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Motricite2 {
            get {
                return this.Motricite2Field;
            }
            set {
                if ((this.Motricite2Field.Equals(value) != true)) {
                    this.Motricite2Field = value;
                    this.RaisePropertyChanged("Motricite2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Motricite3 {
            get {
                return this.Motricite3Field;
            }
            set {
                if ((this.Motricite3Field.Equals(value) != true)) {
                    this.Motricite3Field = value;
                    this.RaisePropertyChanged("Motricite3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Motricite4 {
            get {
                return this.Motricite4Field;
            }
            set {
                if ((this.Motricite4Field.Equals(value) != true)) {
                    this.Motricite4Field = value;
                    this.RaisePropertyChanged("Motricite4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Motricite5 {
            get {
                return this.Motricite5Field;
            }
            set {
                if ((this.Motricite5Field.Equals(value) != true)) {
                    this.Motricite5Field = value;
                    this.RaisePropertyChanged("Motricite5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Motricite6 {
            get {
                return this.Motricite6Field;
            }
            set {
                if ((this.Motricite6Field.Equals(value) != true)) {
                    this.Motricite6Field = value;
                    this.RaisePropertyChanged("Motricite6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Motricite7 {
            get {
                return this.Motricite7Field;
            }
            set {
                if ((this.Motricite7Field.Equals(value) != true)) {
                    this.Motricite7Field = value;
                    this.RaisePropertyChanged("Motricite7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Motricite8 {
            get {
                return this.Motricite8Field;
            }
            set {
                if ((this.Motricite8Field.Equals(value) != true)) {
                    this.Motricite8Field = value;
                    this.RaisePropertyChanged("Motricite8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PhorieLoinHorizontale {
            get {
                return this.PhorieLoinHorizontaleField;
            }
            set {
                if ((this.PhorieLoinHorizontaleField.Equals(value) != true)) {
                    this.PhorieLoinHorizontaleField = value;
                    this.RaisePropertyChanged("PhorieLoinHorizontale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhorieLoinHorizontaleString {
            get {
                return this.PhorieLoinHorizontaleStringField;
            }
            set {
                if ((object.ReferenceEquals(this.PhorieLoinHorizontaleStringField, value) != true)) {
                    this.PhorieLoinHorizontaleStringField = value;
                    this.RaisePropertyChanged("PhorieLoinHorizontaleString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhorieLoinVerticalString {
            get {
                return this.PhorieLoinVerticalStringField;
            }
            set {
                if ((object.ReferenceEquals(this.PhorieLoinVerticalStringField, value) != true)) {
                    this.PhorieLoinVerticalStringField = value;
                    this.RaisePropertyChanged("PhorieLoinVerticalString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PhorieLoinVerticale {
            get {
                return this.PhorieLoinVerticaleField;
            }
            set {
                if ((this.PhorieLoinVerticaleField.Equals(value) != true)) {
                    this.PhorieLoinVerticaleField = value;
                    this.RaisePropertyChanged("PhorieLoinVerticale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PhoriePresHorizontale {
            get {
                return this.PhoriePresHorizontaleField;
            }
            set {
                if ((this.PhoriePresHorizontaleField.Equals(value) != true)) {
                    this.PhoriePresHorizontaleField = value;
                    this.RaisePropertyChanged("PhoriePresHorizontale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoriePresHorizontaleString {
            get {
                return this.PhoriePresHorizontaleStringField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoriePresHorizontaleStringField, value) != true)) {
                    this.PhoriePresHorizontaleStringField = value;
                    this.RaisePropertyChanged("PhoriePresHorizontaleString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PressionMax {
            get {
                return this.PressionMaxField;
            }
            set {
                if ((object.ReferenceEquals(this.PressionMaxField, value) != true)) {
                    this.PressionMaxField = value;
                    this.RaisePropertyChanged("PressionMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PressionMin {
            get {
                return this.PressionMinField;
            }
            set {
                if ((object.ReferenceEquals(this.PressionMinField, value) != true)) {
                    this.PressionMinField = value;
                    this.RaisePropertyChanged("PressionMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PressionMoy {
            get {
                return this.PressionMoyField;
            }
            set {
                if ((object.ReferenceEquals(this.PressionMoyField, value) != true)) {
                    this.PressionMoyField = value;
                    this.RaisePropertyChanged("PressionMoy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaisonClient {
            get {
                return this.RaisonClientField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonClientField, value) != true)) {
                    this.RaisonClientField = value;
                    this.RaisePropertyChanged("RaisonClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarque {
            get {
                return this.RemarqueField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarqueField, value) != true)) {
                    this.RemarqueField = value;
                    this.RaisePropertyChanged("Remarque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Saccadique {
            get {
                return this.SaccadiqueField;
            }
            set {
                if ((object.ReferenceEquals(this.SaccadiqueField, value) != true)) {
                    this.SaccadiqueField = value;
                    this.RaisePropertyChanged("Saccadique");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VergenceBaseExt1 {
            get {
                return this.VergenceBaseExt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VergenceBaseExt1Field, value) != true)) {
                    this.VergenceBaseExt1Field = value;
                    this.RaisePropertyChanged("VergenceBaseExt1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VergenceBaseExt2 {
            get {
                return this.VergenceBaseExt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VergenceBaseExt2Field, value) != true)) {
                    this.VergenceBaseExt2Field = value;
                    this.RaisePropertyChanged("VergenceBaseExt2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VergenceBaseExt3 {
            get {
                return this.VergenceBaseExt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VergenceBaseExt3Field, value) != true)) {
                    this.VergenceBaseExt3Field = value;
                    this.RaisePropertyChanged("VergenceBaseExt3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VergenceBaseInt1 {
            get {
                return this.VergenceBaseInt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VergenceBaseInt1Field, value) != true)) {
                    this.VergenceBaseInt1Field = value;
                    this.RaisePropertyChanged("VergenceBaseInt1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VergenceBaseInt2 {
            get {
                return this.VergenceBaseInt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VergenceBaseInt2Field, value) != true)) {
                    this.VergenceBaseInt2Field = value;
                    this.RaisePropertyChanged("VergenceBaseInt2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VergencePresBaseExt1 {
            get {
                return this.VergencePresBaseExt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VergencePresBaseExt1Field, value) != true)) {
                    this.VergencePresBaseExt1Field = value;
                    this.RaisePropertyChanged("VergencePresBaseExt1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VergencePresBaseExt2 {
            get {
                return this.VergencePresBaseExt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VergencePresBaseExt2Field, value) != true)) {
                    this.VergencePresBaseExt2Field = value;
                    this.RaisePropertyChanged("VergencePresBaseExt2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VergencePresBaseExt3 {
            get {
                return this.VergencePresBaseExt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VergencePresBaseExt3Field, value) != true)) {
                    this.VergencePresBaseExt3Field = value;
                    this.RaisePropertyChanged("VergencePresBaseExt3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VergencePresBaseInt1 {
            get {
                return this.VergencePresBaseInt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VergencePresBaseInt1Field, value) != true)) {
                    this.VergencePresBaseInt1Field = value;
                    this.RaisePropertyChanged("VergencePresBaseInt1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VergencePresBaseInt2 {
            get {
                return this.VergencePresBaseInt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VergencePresBaseInt2Field, value) != true)) {
                    this.VergencePresBaseInt2Field = value;
                    this.RaisePropertyChanged("VergencePresBaseInt2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VergencePresBaseInt3 {
            get {
                return this.VergencePresBaseInt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VergencePresBaseInt3Field, value) != true)) {
                    this.VergencePresBaseInt3Field = value;
                    this.RaisePropertyChanged("VergencePresBaseInt3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VergenceVerticale1 {
            get {
                return this.VergenceVerticale1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VergenceVerticale1Field, value) != true)) {
                    this.VergenceVerticale1Field = value;
                    this.RaisePropertyChanged("VergenceVerticale1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VergenceVerticale2 {
            get {
                return this.VergenceVerticale2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VergenceVerticale2Field, value) != true)) {
                    this.VergenceVerticale2Field = value;
                    this.RaisePropertyChanged("VergenceVerticale2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> VisionDesCouleursBleu {
            get {
                return this.VisionDesCouleursBleuField;
            }
            set {
                if ((this.VisionDesCouleursBleuField.Equals(value) != true)) {
                    this.VisionDesCouleursBleuField = value;
                    this.RaisePropertyChanged("VisionDesCouleursBleu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> VisionDesCouleursChromatopsie {
            get {
                return this.VisionDesCouleursChromatopsieField;
            }
            set {
                if ((this.VisionDesCouleursChromatopsieField.Equals(value) != true)) {
                    this.VisionDesCouleursChromatopsieField = value;
                    this.RaisePropertyChanged("VisionDesCouleursChromatopsie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> VisionDesCouleursRouge {
            get {
                return this.VisionDesCouleursRougeField;
            }
            set {
                if ((this.VisionDesCouleursRougeField.Equals(value) != true)) {
                    this.VisionDesCouleursRougeField = value;
                    this.RaisePropertyChanged("VisionDesCouleursRouge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> VisionDesCouleursVert {
            get {
                return this.VisionDesCouleursVertField;
            }
            set {
                if ((this.VisionDesCouleursVertField.Equals(value) != true)) {
                    this.VisionDesCouleursVertField = value;
                    this.RaisePropertyChanged("VisionDesCouleursVert");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="examenopto", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class examenopto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienAcDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienAcGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienAddDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienAddGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienAxeDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienAxeGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienCylindreDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienCylindreGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienSphereDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienSphereGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CylindreMoinODOGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CylindreMoinRefraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CylindrePlusODOGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CylindrePlusRefraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DIP1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DIP2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DioptrieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocteurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPLoinDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPLointGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieDroiteAxe1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieDroiteAxe2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieDroiteH1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieDroiteH2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieDroiteV1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieDroiteV2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieDroitemoy1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieDroitemoy2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieGaucheAxe1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieGaucheAxe2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieGaucheH1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieGaucheH2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieGaucheV1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieGaucheV2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieGauchemoy1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieGauchemoy2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObservField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PrescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraOBJAxeDroite1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraOBJAxeDroite2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraOBJAxeGauche1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraOBJAxeGauche2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraOBJCYLDroite1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraOBJCYLDroite2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraOBJCYLGauche1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraOBJCYLGauche2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraOBJSPHDroite1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraOBJSPHDroite2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraOBJSPHGauche1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraOBJSPHGauche2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubADDDroite1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubADDDroite2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubADDGauche1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubADDGauche2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubAVDroite1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubAVGauche1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubAVGauche2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubAXEDroite1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubAXEDroite2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubAXEGauche1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubAXEGauche2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubCYLDroite1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubCYLDroite2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubCYLGauche1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubCYLGauche2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubSPHDroite1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubSPHDroite2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubSPHGauche1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefraSubSPHGauche2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> mmField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienAcDroite {
            get {
                return this.AncienAcDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienAcDroiteField, value) != true)) {
                    this.AncienAcDroiteField = value;
                    this.RaisePropertyChanged("AncienAcDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienAcGauche {
            get {
                return this.AncienAcGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienAcGaucheField, value) != true)) {
                    this.AncienAcGaucheField = value;
                    this.RaisePropertyChanged("AncienAcGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienAddDroite {
            get {
                return this.AncienAddDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienAddDroiteField, value) != true)) {
                    this.AncienAddDroiteField = value;
                    this.RaisePropertyChanged("AncienAddDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienAddGauche {
            get {
                return this.AncienAddGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienAddGaucheField, value) != true)) {
                    this.AncienAddGaucheField = value;
                    this.RaisePropertyChanged("AncienAddGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienAxeDroite {
            get {
                return this.AncienAxeDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienAxeDroiteField, value) != true)) {
                    this.AncienAxeDroiteField = value;
                    this.RaisePropertyChanged("AncienAxeDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienAxeGauche {
            get {
                return this.AncienAxeGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienAxeGaucheField, value) != true)) {
                    this.AncienAxeGaucheField = value;
                    this.RaisePropertyChanged("AncienAxeGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienCylindreDroite {
            get {
                return this.AncienCylindreDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienCylindreDroiteField, value) != true)) {
                    this.AncienCylindreDroiteField = value;
                    this.RaisePropertyChanged("AncienCylindreDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienCylindreGauche {
            get {
                return this.AncienCylindreGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienCylindreGaucheField, value) != true)) {
                    this.AncienCylindreGaucheField = value;
                    this.RaisePropertyChanged("AncienCylindreGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienSphereDroite {
            get {
                return this.AncienSphereDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienSphereDroiteField, value) != true)) {
                    this.AncienSphereDroiteField = value;
                    this.RaisePropertyChanged("AncienSphereDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienSphereGauche {
            get {
                return this.AncienSphereGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienSphereGaucheField, value) != true)) {
                    this.AncienSphereGaucheField = value;
                    this.RaisePropertyChanged("AncienSphereGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cle {
            get {
                return this.CleField;
            }
            set {
                if ((object.ReferenceEquals(this.CleField, value) != true)) {
                    this.CleField = value;
                    this.RaisePropertyChanged("Cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CylindreMoinODOG {
            get {
                return this.CylindreMoinODOGField;
            }
            set {
                if ((this.CylindreMoinODOGField.Equals(value) != true)) {
                    this.CylindreMoinODOGField = value;
                    this.RaisePropertyChanged("CylindreMoinODOG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CylindreMoinRefra {
            get {
                return this.CylindreMoinRefraField;
            }
            set {
                if ((this.CylindreMoinRefraField.Equals(value) != true)) {
                    this.CylindreMoinRefraField = value;
                    this.RaisePropertyChanged("CylindreMoinRefra");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CylindrePlusODOG {
            get {
                return this.CylindrePlusODOGField;
            }
            set {
                if ((this.CylindrePlusODOGField.Equals(value) != true)) {
                    this.CylindrePlusODOGField = value;
                    this.RaisePropertyChanged("CylindrePlusODOG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CylindrePlusRefra {
            get {
                return this.CylindrePlusRefraField;
            }
            set {
                if ((this.CylindrePlusRefraField.Equals(value) != true)) {
                    this.CylindrePlusRefraField = value;
                    this.RaisePropertyChanged("CylindrePlusRefra");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DIP1 {
            get {
                return this.DIP1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DIP1Field, value) != true)) {
                    this.DIP1Field = value;
                    this.RaisePropertyChanged("DIP1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DIP2 {
            get {
                return this.DIP2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DIP2Field, value) != true)) {
                    this.DIP2Field = value;
                    this.RaisePropertyChanged("DIP2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Dates {
            get {
                return this.DatesField;
            }
            set {
                if ((this.DatesField.Equals(value) != true)) {
                    this.DatesField = value;
                    this.RaisePropertyChanged("Dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Dioptrie {
            get {
                return this.DioptrieField;
            }
            set {
                if ((this.DioptrieField.Equals(value) != true)) {
                    this.DioptrieField = value;
                    this.RaisePropertyChanged("Dioptrie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Docteur {
            get {
                return this.DocteurField;
            }
            set {
                if ((object.ReferenceEquals(this.DocteurField, value) != true)) {
                    this.DocteurField = value;
                    this.RaisePropertyChanged("Docteur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPLoinDroite {
            get {
                return this.EPLoinDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.EPLoinDroiteField, value) != true)) {
                    this.EPLoinDroiteField = value;
                    this.RaisePropertyChanged("EPLoinDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPLointGauche {
            get {
                return this.EPLointGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.EPLointGaucheField, value) != true)) {
                    this.EPLointGaucheField = value;
                    this.RaisePropertyChanged("EPLointGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdClient {
            get {
                return this.IdClientField;
            }
            set {
                if ((this.IdClientField.Equals(value) != true)) {
                    this.IdClientField = value;
                    this.RaisePropertyChanged("IdClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieDroiteAxe1 {
            get {
                return this.KeratometrieDroiteAxe1Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieDroiteAxe1Field, value) != true)) {
                    this.KeratometrieDroiteAxe1Field = value;
                    this.RaisePropertyChanged("KeratometrieDroiteAxe1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieDroiteAxe2 {
            get {
                return this.KeratometrieDroiteAxe2Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieDroiteAxe2Field, value) != true)) {
                    this.KeratometrieDroiteAxe2Field = value;
                    this.RaisePropertyChanged("KeratometrieDroiteAxe2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieDroiteH1 {
            get {
                return this.KeratometrieDroiteH1Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieDroiteH1Field, value) != true)) {
                    this.KeratometrieDroiteH1Field = value;
                    this.RaisePropertyChanged("KeratometrieDroiteH1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieDroiteH2 {
            get {
                return this.KeratometrieDroiteH2Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieDroiteH2Field, value) != true)) {
                    this.KeratometrieDroiteH2Field = value;
                    this.RaisePropertyChanged("KeratometrieDroiteH2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieDroiteV1 {
            get {
                return this.KeratometrieDroiteV1Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieDroiteV1Field, value) != true)) {
                    this.KeratometrieDroiteV1Field = value;
                    this.RaisePropertyChanged("KeratometrieDroiteV1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieDroiteV2 {
            get {
                return this.KeratometrieDroiteV2Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieDroiteV2Field, value) != true)) {
                    this.KeratometrieDroiteV2Field = value;
                    this.RaisePropertyChanged("KeratometrieDroiteV2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieDroitemoy1 {
            get {
                return this.KeratometrieDroitemoy1Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieDroitemoy1Field, value) != true)) {
                    this.KeratometrieDroitemoy1Field = value;
                    this.RaisePropertyChanged("KeratometrieDroitemoy1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieDroitemoy2 {
            get {
                return this.KeratometrieDroitemoy2Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieDroitemoy2Field, value) != true)) {
                    this.KeratometrieDroitemoy2Field = value;
                    this.RaisePropertyChanged("KeratometrieDroitemoy2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieGaucheAxe1 {
            get {
                return this.KeratometrieGaucheAxe1Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieGaucheAxe1Field, value) != true)) {
                    this.KeratometrieGaucheAxe1Field = value;
                    this.RaisePropertyChanged("KeratometrieGaucheAxe1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieGaucheAxe2 {
            get {
                return this.KeratometrieGaucheAxe2Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieGaucheAxe2Field, value) != true)) {
                    this.KeratometrieGaucheAxe2Field = value;
                    this.RaisePropertyChanged("KeratometrieGaucheAxe2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieGaucheH1 {
            get {
                return this.KeratometrieGaucheH1Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieGaucheH1Field, value) != true)) {
                    this.KeratometrieGaucheH1Field = value;
                    this.RaisePropertyChanged("KeratometrieGaucheH1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieGaucheH2 {
            get {
                return this.KeratometrieGaucheH2Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieGaucheH2Field, value) != true)) {
                    this.KeratometrieGaucheH2Field = value;
                    this.RaisePropertyChanged("KeratometrieGaucheH2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieGaucheV1 {
            get {
                return this.KeratometrieGaucheV1Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieGaucheV1Field, value) != true)) {
                    this.KeratometrieGaucheV1Field = value;
                    this.RaisePropertyChanged("KeratometrieGaucheV1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieGaucheV2 {
            get {
                return this.KeratometrieGaucheV2Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieGaucheV2Field, value) != true)) {
                    this.KeratometrieGaucheV2Field = value;
                    this.RaisePropertyChanged("KeratometrieGaucheV2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieGauchemoy1 {
            get {
                return this.KeratometrieGauchemoy1Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieGauchemoy1Field, value) != true)) {
                    this.KeratometrieGauchemoy1Field = value;
                    this.RaisePropertyChanged("KeratometrieGauchemoy1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieGauchemoy2 {
            get {
                return this.KeratometrieGauchemoy2Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieGauchemoy2Field, value) != true)) {
                    this.KeratometrieGauchemoy2Field = value;
                    this.RaisePropertyChanged("KeratometrieGauchemoy2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Observ {
            get {
                return this.ObservField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservField, value) != true)) {
                    this.ObservField = value;
                    this.RaisePropertyChanged("Observ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresDroite {
            get {
                return this.PresDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.PresDroiteField, value) != true)) {
                    this.PresDroiteField = value;
                    this.RaisePropertyChanged("PresDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresGauche {
            get {
                return this.PresGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.PresGaucheField, value) != true)) {
                    this.PresGaucheField = value;
                    this.RaisePropertyChanged("PresGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Prescription {
            get {
                return this.PrescriptionField;
            }
            set {
                if ((this.PrescriptionField.Equals(value) != true)) {
                    this.PrescriptionField = value;
                    this.RaisePropertyChanged("Prescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaisonClient {
            get {
                return this.RaisonClientField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonClientField, value) != true)) {
                    this.RaisonClientField = value;
                    this.RaisePropertyChanged("RaisonClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraOBJAxeDroite1 {
            get {
                return this.RefraOBJAxeDroite1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraOBJAxeDroite1Field, value) != true)) {
                    this.RefraOBJAxeDroite1Field = value;
                    this.RaisePropertyChanged("RefraOBJAxeDroite1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraOBJAxeDroite2 {
            get {
                return this.RefraOBJAxeDroite2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraOBJAxeDroite2Field, value) != true)) {
                    this.RefraOBJAxeDroite2Field = value;
                    this.RaisePropertyChanged("RefraOBJAxeDroite2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraOBJAxeGauche1 {
            get {
                return this.RefraOBJAxeGauche1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraOBJAxeGauche1Field, value) != true)) {
                    this.RefraOBJAxeGauche1Field = value;
                    this.RaisePropertyChanged("RefraOBJAxeGauche1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraOBJAxeGauche2 {
            get {
                return this.RefraOBJAxeGauche2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraOBJAxeGauche2Field, value) != true)) {
                    this.RefraOBJAxeGauche2Field = value;
                    this.RaisePropertyChanged("RefraOBJAxeGauche2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraOBJCYLDroite1 {
            get {
                return this.RefraOBJCYLDroite1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraOBJCYLDroite1Field, value) != true)) {
                    this.RefraOBJCYLDroite1Field = value;
                    this.RaisePropertyChanged("RefraOBJCYLDroite1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraOBJCYLDroite2 {
            get {
                return this.RefraOBJCYLDroite2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraOBJCYLDroite2Field, value) != true)) {
                    this.RefraOBJCYLDroite2Field = value;
                    this.RaisePropertyChanged("RefraOBJCYLDroite2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraOBJCYLGauche1 {
            get {
                return this.RefraOBJCYLGauche1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraOBJCYLGauche1Field, value) != true)) {
                    this.RefraOBJCYLGauche1Field = value;
                    this.RaisePropertyChanged("RefraOBJCYLGauche1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraOBJCYLGauche2 {
            get {
                return this.RefraOBJCYLGauche2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraOBJCYLGauche2Field, value) != true)) {
                    this.RefraOBJCYLGauche2Field = value;
                    this.RaisePropertyChanged("RefraOBJCYLGauche2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraOBJSPHDroite1 {
            get {
                return this.RefraOBJSPHDroite1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraOBJSPHDroite1Field, value) != true)) {
                    this.RefraOBJSPHDroite1Field = value;
                    this.RaisePropertyChanged("RefraOBJSPHDroite1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraOBJSPHDroite2 {
            get {
                return this.RefraOBJSPHDroite2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraOBJSPHDroite2Field, value) != true)) {
                    this.RefraOBJSPHDroite2Field = value;
                    this.RaisePropertyChanged("RefraOBJSPHDroite2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraOBJSPHGauche1 {
            get {
                return this.RefraOBJSPHGauche1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraOBJSPHGauche1Field, value) != true)) {
                    this.RefraOBJSPHGauche1Field = value;
                    this.RaisePropertyChanged("RefraOBJSPHGauche1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraOBJSPHGauche2 {
            get {
                return this.RefraOBJSPHGauche2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraOBJSPHGauche2Field, value) != true)) {
                    this.RefraOBJSPHGauche2Field = value;
                    this.RaisePropertyChanged("RefraOBJSPHGauche2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubADDDroite1 {
            get {
                return this.RefraSubADDDroite1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubADDDroite1Field, value) != true)) {
                    this.RefraSubADDDroite1Field = value;
                    this.RaisePropertyChanged("RefraSubADDDroite1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubADDDroite2 {
            get {
                return this.RefraSubADDDroite2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubADDDroite2Field, value) != true)) {
                    this.RefraSubADDDroite2Field = value;
                    this.RaisePropertyChanged("RefraSubADDDroite2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubADDGauche1 {
            get {
                return this.RefraSubADDGauche1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubADDGauche1Field, value) != true)) {
                    this.RefraSubADDGauche1Field = value;
                    this.RaisePropertyChanged("RefraSubADDGauche1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubADDGauche2 {
            get {
                return this.RefraSubADDGauche2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubADDGauche2Field, value) != true)) {
                    this.RefraSubADDGauche2Field = value;
                    this.RaisePropertyChanged("RefraSubADDGauche2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubAVDroite1 {
            get {
                return this.RefraSubAVDroite1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubAVDroite1Field, value) != true)) {
                    this.RefraSubAVDroite1Field = value;
                    this.RaisePropertyChanged("RefraSubAVDroite1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubAVGauche1 {
            get {
                return this.RefraSubAVGauche1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubAVGauche1Field, value) != true)) {
                    this.RefraSubAVGauche1Field = value;
                    this.RaisePropertyChanged("RefraSubAVGauche1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubAVGauche2 {
            get {
                return this.RefraSubAVGauche2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubAVGauche2Field, value) != true)) {
                    this.RefraSubAVGauche2Field = value;
                    this.RaisePropertyChanged("RefraSubAVGauche2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubAXEDroite1 {
            get {
                return this.RefraSubAXEDroite1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubAXEDroite1Field, value) != true)) {
                    this.RefraSubAXEDroite1Field = value;
                    this.RaisePropertyChanged("RefraSubAXEDroite1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubAXEDroite2 {
            get {
                return this.RefraSubAXEDroite2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubAXEDroite2Field, value) != true)) {
                    this.RefraSubAXEDroite2Field = value;
                    this.RaisePropertyChanged("RefraSubAXEDroite2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubAXEGauche1 {
            get {
                return this.RefraSubAXEGauche1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubAXEGauche1Field, value) != true)) {
                    this.RefraSubAXEGauche1Field = value;
                    this.RaisePropertyChanged("RefraSubAXEGauche1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubAXEGauche2 {
            get {
                return this.RefraSubAXEGauche2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubAXEGauche2Field, value) != true)) {
                    this.RefraSubAXEGauche2Field = value;
                    this.RaisePropertyChanged("RefraSubAXEGauche2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubCYLDroite1 {
            get {
                return this.RefraSubCYLDroite1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubCYLDroite1Field, value) != true)) {
                    this.RefraSubCYLDroite1Field = value;
                    this.RaisePropertyChanged("RefraSubCYLDroite1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubCYLDroite2 {
            get {
                return this.RefraSubCYLDroite2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubCYLDroite2Field, value) != true)) {
                    this.RefraSubCYLDroite2Field = value;
                    this.RaisePropertyChanged("RefraSubCYLDroite2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubCYLGauche1 {
            get {
                return this.RefraSubCYLGauche1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubCYLGauche1Field, value) != true)) {
                    this.RefraSubCYLGauche1Field = value;
                    this.RaisePropertyChanged("RefraSubCYLGauche1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubCYLGauche2 {
            get {
                return this.RefraSubCYLGauche2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubCYLGauche2Field, value) != true)) {
                    this.RefraSubCYLGauche2Field = value;
                    this.RaisePropertyChanged("RefraSubCYLGauche2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubSPHDroite1 {
            get {
                return this.RefraSubSPHDroite1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubSPHDroite1Field, value) != true)) {
                    this.RefraSubSPHDroite1Field = value;
                    this.RaisePropertyChanged("RefraSubSPHDroite1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubSPHDroite2 {
            get {
                return this.RefraSubSPHDroite2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubSPHDroite2Field, value) != true)) {
                    this.RefraSubSPHDroite2Field = value;
                    this.RaisePropertyChanged("RefraSubSPHDroite2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubSPHGauche1 {
            get {
                return this.RefraSubSPHGauche1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubSPHGauche1Field, value) != true)) {
                    this.RefraSubSPHGauche1Field = value;
                    this.RaisePropertyChanged("RefraSubSPHGauche1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefraSubSPHGauche2 {
            get {
                return this.RefraSubSPHGauche2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RefraSubSPHGauche2Field, value) != true)) {
                    this.RefraSubSPHGauche2Field = value;
                    this.RaisePropertyChanged("RefraSubSPHGauche2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> mm {
            get {
                return this.mmField;
            }
            set {
                if ((this.mmField.Equals(value) != true)) {
                    this.mmField = value;
                    this.RaisePropertyChanged("mm");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MontureSupplement", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class MontureSupplement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LibelleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixVenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> interfaceMontureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Libelle {
            get {
                return this.LibelleField;
            }
            set {
                if ((object.ReferenceEquals(this.LibelleField, value) != true)) {
                    this.LibelleField = value;
                    this.RaisePropertyChanged("Libelle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixAchat {
            get {
                return this.PrixAchatField;
            }
            set {
                if ((this.PrixAchatField.Equals(value) != true)) {
                    this.PrixAchatField = value;
                    this.RaisePropertyChanged("PrixAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixVente {
            get {
                return this.PrixVenteField;
            }
            set {
                if ((this.PrixVenteField.Equals(value) != true)) {
                    this.PrixVenteField = value;
                    this.RaisePropertyChanged("PrixVente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> interfaceMonture {
            get {
                return this.interfaceMontureField;
            }
            set {
                if ((this.interfaceMontureField.Equals(value) != true)) {
                    this.interfaceMontureField = value;
                    this.RaisePropertyChanged("interfaceMonture");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Monture", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Monture : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Accessoires1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Accessoires1StatutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Accessoires2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Accessoires2StatutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AccessoiresPrix1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AccessoiresPrix2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AccessoiresQuantite1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AccessoiresQuantite2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocteurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DroitPrixVerreLoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DroitPrixVerrePresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DroiteCylindreMoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DroiteCylindrePlusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DroiteFleshBasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DroiteFleshDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DroiteFleshGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DroiteFleshHautField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DroiteStatutLoinMontureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DroiteStatutLoinVerreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DroiteStatutPresMontureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DroiteStatutPresVerreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DroiteValeurGaucheDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DroiteValeurHautBasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DroiteVerreLoinDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DroiteVerreLoinStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DroiteVerrePresDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DroiteVerrePresStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DélivreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EcartsDroite1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EcartsDroite2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EcartsGauche1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EcartsGauche2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EnMontageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EncaisséField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GaucheCylindreMoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GaucheCylindrePlusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GaucheFleshBasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GaucheFleshDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GaucheFleshGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GaucheFleshHautField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> GauchePrixVerreLoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> GauchePrixVerrePresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GaucheStatutLoinMontureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GaucheStatutLoinVerreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GaucheStatutPresMontureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GaucheStatutPresVerreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GaucheValeurGaucheDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GaucheValeurHautBasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GaucheVerreLoinDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GaucheVerreLoinStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GaucheVerrePresDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GaucheVerrePresStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HtDoite1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HtDoite2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HtGauche1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HtGauche2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdAccessoires1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdAccessoires2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdDroiteVerreLoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdDroiteVerrePresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdGaucheVerreLoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdGaucheVerrePresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdMontureLoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdMonturePresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IntermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermAddDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermAddGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermAxeDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermAxeGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermBaseDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermBaseGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermCylindreDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermCylindreGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermPrismeDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermPrismeGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermSphereDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermSphereGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LivraisonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoinAddDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoinAddGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoinAxeDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoinAxeGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoinBaseDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoinBaseGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoinCylindreDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoinCylindreGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoinPrismeDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoinPrismeGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoinSphereDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoinSphereGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeVenteLoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeVentePresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MontantTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MonteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MontureDesignationLoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MontureDesignationPresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NCommandeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObservField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresAddDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresAddGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresAxeDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresAxeGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresBaseDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresBaseGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresCylindreDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresCylindreGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresPrismeDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresPrismeGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresSphereDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresSphereGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PrescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixMontureLoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixMonturePresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RemiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ResteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StatutDevisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StatutVenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Accessoires1 {
            get {
                return this.Accessoires1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Accessoires1Field, value) != true)) {
                    this.Accessoires1Field = value;
                    this.RaisePropertyChanged("Accessoires1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Accessoires1Statut {
            get {
                return this.Accessoires1StatutField;
            }
            set {
                if ((this.Accessoires1StatutField.Equals(value) != true)) {
                    this.Accessoires1StatutField = value;
                    this.RaisePropertyChanged("Accessoires1Statut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Accessoires2 {
            get {
                return this.Accessoires2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Accessoires2Field, value) != true)) {
                    this.Accessoires2Field = value;
                    this.RaisePropertyChanged("Accessoires2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Accessoires2Statut {
            get {
                return this.Accessoires2StatutField;
            }
            set {
                if ((this.Accessoires2StatutField.Equals(value) != true)) {
                    this.Accessoires2StatutField = value;
                    this.RaisePropertyChanged("Accessoires2Statut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AccessoiresPrix1 {
            get {
                return this.AccessoiresPrix1Field;
            }
            set {
                if ((this.AccessoiresPrix1Field.Equals(value) != true)) {
                    this.AccessoiresPrix1Field = value;
                    this.RaisePropertyChanged("AccessoiresPrix1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AccessoiresPrix2 {
            get {
                return this.AccessoiresPrix2Field;
            }
            set {
                if ((this.AccessoiresPrix2Field.Equals(value) != true)) {
                    this.AccessoiresPrix2Field = value;
                    this.RaisePropertyChanged("AccessoiresPrix2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AccessoiresQuantite1 {
            get {
                return this.AccessoiresQuantite1Field;
            }
            set {
                if ((this.AccessoiresQuantite1Field.Equals(value) != true)) {
                    this.AccessoiresQuantite1Field = value;
                    this.RaisePropertyChanged("AccessoiresQuantite1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AccessoiresQuantite2 {
            get {
                return this.AccessoiresQuantite2Field;
            }
            set {
                if ((this.AccessoiresQuantite2Field.Equals(value) != true)) {
                    this.AccessoiresQuantite2Field = value;
                    this.RaisePropertyChanged("AccessoiresQuantite2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cle {
            get {
                return this.CleField;
            }
            set {
                if ((object.ReferenceEquals(this.CleField, value) != true)) {
                    this.CleField = value;
                    this.RaisePropertyChanged("Cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Dates {
            get {
                return this.DatesField;
            }
            set {
                if ((this.DatesField.Equals(value) != true)) {
                    this.DatesField = value;
                    this.RaisePropertyChanged("Dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Docteur {
            get {
                return this.DocteurField;
            }
            set {
                if ((object.ReferenceEquals(this.DocteurField, value) != true)) {
                    this.DocteurField = value;
                    this.RaisePropertyChanged("Docteur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DroitPrixVerreLoin {
            get {
                return this.DroitPrixVerreLoinField;
            }
            set {
                if ((this.DroitPrixVerreLoinField.Equals(value) != true)) {
                    this.DroitPrixVerreLoinField = value;
                    this.RaisePropertyChanged("DroitPrixVerreLoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DroitPrixVerrePres {
            get {
                return this.DroitPrixVerrePresField;
            }
            set {
                if ((this.DroitPrixVerrePresField.Equals(value) != true)) {
                    this.DroitPrixVerrePresField = value;
                    this.RaisePropertyChanged("DroitPrixVerrePres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DroiteCylindreMoin {
            get {
                return this.DroiteCylindreMoinField;
            }
            set {
                if ((this.DroiteCylindreMoinField.Equals(value) != true)) {
                    this.DroiteCylindreMoinField = value;
                    this.RaisePropertyChanged("DroiteCylindreMoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DroiteCylindrePlus {
            get {
                return this.DroiteCylindrePlusField;
            }
            set {
                if ((this.DroiteCylindrePlusField.Equals(value) != true)) {
                    this.DroiteCylindrePlusField = value;
                    this.RaisePropertyChanged("DroiteCylindrePlus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DroiteFleshBas {
            get {
                return this.DroiteFleshBasField;
            }
            set {
                if ((this.DroiteFleshBasField.Equals(value) != true)) {
                    this.DroiteFleshBasField = value;
                    this.RaisePropertyChanged("DroiteFleshBas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DroiteFleshDroite {
            get {
                return this.DroiteFleshDroiteField;
            }
            set {
                if ((this.DroiteFleshDroiteField.Equals(value) != true)) {
                    this.DroiteFleshDroiteField = value;
                    this.RaisePropertyChanged("DroiteFleshDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DroiteFleshGauche {
            get {
                return this.DroiteFleshGaucheField;
            }
            set {
                if ((this.DroiteFleshGaucheField.Equals(value) != true)) {
                    this.DroiteFleshGaucheField = value;
                    this.RaisePropertyChanged("DroiteFleshGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DroiteFleshHaut {
            get {
                return this.DroiteFleshHautField;
            }
            set {
                if ((this.DroiteFleshHautField.Equals(value) != true)) {
                    this.DroiteFleshHautField = value;
                    this.RaisePropertyChanged("DroiteFleshHaut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DroiteStatutLoinMonture {
            get {
                return this.DroiteStatutLoinMontureField;
            }
            set {
                if ((this.DroiteStatutLoinMontureField.Equals(value) != true)) {
                    this.DroiteStatutLoinMontureField = value;
                    this.RaisePropertyChanged("DroiteStatutLoinMonture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DroiteStatutLoinVerre {
            get {
                return this.DroiteStatutLoinVerreField;
            }
            set {
                if ((this.DroiteStatutLoinVerreField.Equals(value) != true)) {
                    this.DroiteStatutLoinVerreField = value;
                    this.RaisePropertyChanged("DroiteStatutLoinVerre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DroiteStatutPresMonture {
            get {
                return this.DroiteStatutPresMontureField;
            }
            set {
                if ((this.DroiteStatutPresMontureField.Equals(value) != true)) {
                    this.DroiteStatutPresMontureField = value;
                    this.RaisePropertyChanged("DroiteStatutPresMonture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DroiteStatutPresVerre {
            get {
                return this.DroiteStatutPresVerreField;
            }
            set {
                if ((this.DroiteStatutPresVerreField.Equals(value) != true)) {
                    this.DroiteStatutPresVerreField = value;
                    this.RaisePropertyChanged("DroiteStatutPresVerre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DroiteValeurGaucheDroite {
            get {
                return this.DroiteValeurGaucheDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.DroiteValeurGaucheDroiteField, value) != true)) {
                    this.DroiteValeurGaucheDroiteField = value;
                    this.RaisePropertyChanged("DroiteValeurGaucheDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DroiteValeurHautBas {
            get {
                return this.DroiteValeurHautBasField;
            }
            set {
                if ((object.ReferenceEquals(this.DroiteValeurHautBasField, value) != true)) {
                    this.DroiteValeurHautBasField = value;
                    this.RaisePropertyChanged("DroiteValeurHautBas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DroiteVerreLoinDesignation {
            get {
                return this.DroiteVerreLoinDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.DroiteVerreLoinDesignationField, value) != true)) {
                    this.DroiteVerreLoinDesignationField = value;
                    this.RaisePropertyChanged("DroiteVerreLoinDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DroiteVerreLoinStock {
            get {
                return this.DroiteVerreLoinStockField;
            }
            set {
                if ((this.DroiteVerreLoinStockField.Equals(value) != true)) {
                    this.DroiteVerreLoinStockField = value;
                    this.RaisePropertyChanged("DroiteVerreLoinStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DroiteVerrePresDesignation {
            get {
                return this.DroiteVerrePresDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.DroiteVerrePresDesignationField, value) != true)) {
                    this.DroiteVerrePresDesignationField = value;
                    this.RaisePropertyChanged("DroiteVerrePresDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DroiteVerrePresStock {
            get {
                return this.DroiteVerrePresStockField;
            }
            set {
                if ((this.DroiteVerrePresStockField.Equals(value) != true)) {
                    this.DroiteVerrePresStockField = value;
                    this.RaisePropertyChanged("DroiteVerrePresStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Délivre {
            get {
                return this.DélivreField;
            }
            set {
                if ((this.DélivreField.Equals(value) != true)) {
                    this.DélivreField = value;
                    this.RaisePropertyChanged("Délivre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EcartsDroite1 {
            get {
                return this.EcartsDroite1Field;
            }
            set {
                if ((object.ReferenceEquals(this.EcartsDroite1Field, value) != true)) {
                    this.EcartsDroite1Field = value;
                    this.RaisePropertyChanged("EcartsDroite1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EcartsDroite2 {
            get {
                return this.EcartsDroite2Field;
            }
            set {
                if ((object.ReferenceEquals(this.EcartsDroite2Field, value) != true)) {
                    this.EcartsDroite2Field = value;
                    this.RaisePropertyChanged("EcartsDroite2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EcartsGauche1 {
            get {
                return this.EcartsGauche1Field;
            }
            set {
                if ((object.ReferenceEquals(this.EcartsGauche1Field, value) != true)) {
                    this.EcartsGauche1Field = value;
                    this.RaisePropertyChanged("EcartsGauche1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EcartsGauche2 {
            get {
                return this.EcartsGauche2Field;
            }
            set {
                if ((object.ReferenceEquals(this.EcartsGauche2Field, value) != true)) {
                    this.EcartsGauche2Field = value;
                    this.RaisePropertyChanged("EcartsGauche2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EnMontage {
            get {
                return this.EnMontageField;
            }
            set {
                if ((this.EnMontageField.Equals(value) != true)) {
                    this.EnMontageField = value;
                    this.RaisePropertyChanged("EnMontage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Encaissé {
            get {
                return this.EncaisséField;
            }
            set {
                if ((this.EncaisséField.Equals(value) != true)) {
                    this.EncaisséField = value;
                    this.RaisePropertyChanged("Encaissé");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GaucheCylindreMoin {
            get {
                return this.GaucheCylindreMoinField;
            }
            set {
                if ((this.GaucheCylindreMoinField.Equals(value) != true)) {
                    this.GaucheCylindreMoinField = value;
                    this.RaisePropertyChanged("GaucheCylindreMoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GaucheCylindrePlus {
            get {
                return this.GaucheCylindrePlusField;
            }
            set {
                if ((this.GaucheCylindrePlusField.Equals(value) != true)) {
                    this.GaucheCylindrePlusField = value;
                    this.RaisePropertyChanged("GaucheCylindrePlus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GaucheFleshBas {
            get {
                return this.GaucheFleshBasField;
            }
            set {
                if ((this.GaucheFleshBasField.Equals(value) != true)) {
                    this.GaucheFleshBasField = value;
                    this.RaisePropertyChanged("GaucheFleshBas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GaucheFleshDroite {
            get {
                return this.GaucheFleshDroiteField;
            }
            set {
                if ((this.GaucheFleshDroiteField.Equals(value) != true)) {
                    this.GaucheFleshDroiteField = value;
                    this.RaisePropertyChanged("GaucheFleshDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GaucheFleshGauche {
            get {
                return this.GaucheFleshGaucheField;
            }
            set {
                if ((this.GaucheFleshGaucheField.Equals(value) != true)) {
                    this.GaucheFleshGaucheField = value;
                    this.RaisePropertyChanged("GaucheFleshGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GaucheFleshHaut {
            get {
                return this.GaucheFleshHautField;
            }
            set {
                if ((this.GaucheFleshHautField.Equals(value) != true)) {
                    this.GaucheFleshHautField = value;
                    this.RaisePropertyChanged("GaucheFleshHaut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> GauchePrixVerreLoin {
            get {
                return this.GauchePrixVerreLoinField;
            }
            set {
                if ((this.GauchePrixVerreLoinField.Equals(value) != true)) {
                    this.GauchePrixVerreLoinField = value;
                    this.RaisePropertyChanged("GauchePrixVerreLoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> GauchePrixVerrePres {
            get {
                return this.GauchePrixVerrePresField;
            }
            set {
                if ((this.GauchePrixVerrePresField.Equals(value) != true)) {
                    this.GauchePrixVerrePresField = value;
                    this.RaisePropertyChanged("GauchePrixVerrePres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GaucheStatutLoinMonture {
            get {
                return this.GaucheStatutLoinMontureField;
            }
            set {
                if ((this.GaucheStatutLoinMontureField.Equals(value) != true)) {
                    this.GaucheStatutLoinMontureField = value;
                    this.RaisePropertyChanged("GaucheStatutLoinMonture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GaucheStatutLoinVerre {
            get {
                return this.GaucheStatutLoinVerreField;
            }
            set {
                if ((this.GaucheStatutLoinVerreField.Equals(value) != true)) {
                    this.GaucheStatutLoinVerreField = value;
                    this.RaisePropertyChanged("GaucheStatutLoinVerre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GaucheStatutPresMonture {
            get {
                return this.GaucheStatutPresMontureField;
            }
            set {
                if ((this.GaucheStatutPresMontureField.Equals(value) != true)) {
                    this.GaucheStatutPresMontureField = value;
                    this.RaisePropertyChanged("GaucheStatutPresMonture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GaucheStatutPresVerre {
            get {
                return this.GaucheStatutPresVerreField;
            }
            set {
                if ((this.GaucheStatutPresVerreField.Equals(value) != true)) {
                    this.GaucheStatutPresVerreField = value;
                    this.RaisePropertyChanged("GaucheStatutPresVerre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GaucheValeurGaucheDroite {
            get {
                return this.GaucheValeurGaucheDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.GaucheValeurGaucheDroiteField, value) != true)) {
                    this.GaucheValeurGaucheDroiteField = value;
                    this.RaisePropertyChanged("GaucheValeurGaucheDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GaucheValeurHautBas {
            get {
                return this.GaucheValeurHautBasField;
            }
            set {
                if ((object.ReferenceEquals(this.GaucheValeurHautBasField, value) != true)) {
                    this.GaucheValeurHautBasField = value;
                    this.RaisePropertyChanged("GaucheValeurHautBas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GaucheVerreLoinDesignation {
            get {
                return this.GaucheVerreLoinDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.GaucheVerreLoinDesignationField, value) != true)) {
                    this.GaucheVerreLoinDesignationField = value;
                    this.RaisePropertyChanged("GaucheVerreLoinDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GaucheVerreLoinStock {
            get {
                return this.GaucheVerreLoinStockField;
            }
            set {
                if ((this.GaucheVerreLoinStockField.Equals(value) != true)) {
                    this.GaucheVerreLoinStockField = value;
                    this.RaisePropertyChanged("GaucheVerreLoinStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GaucheVerrePresDesignation {
            get {
                return this.GaucheVerrePresDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.GaucheVerrePresDesignationField, value) != true)) {
                    this.GaucheVerrePresDesignationField = value;
                    this.RaisePropertyChanged("GaucheVerrePresDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GaucheVerrePresStock {
            get {
                return this.GaucheVerrePresStockField;
            }
            set {
                if ((this.GaucheVerrePresStockField.Equals(value) != true)) {
                    this.GaucheVerrePresStockField = value;
                    this.RaisePropertyChanged("GaucheVerrePresStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HtDoite1 {
            get {
                return this.HtDoite1Field;
            }
            set {
                if ((object.ReferenceEquals(this.HtDoite1Field, value) != true)) {
                    this.HtDoite1Field = value;
                    this.RaisePropertyChanged("HtDoite1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HtDoite2 {
            get {
                return this.HtDoite2Field;
            }
            set {
                if ((object.ReferenceEquals(this.HtDoite2Field, value) != true)) {
                    this.HtDoite2Field = value;
                    this.RaisePropertyChanged("HtDoite2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HtGauche1 {
            get {
                return this.HtGauche1Field;
            }
            set {
                if ((object.ReferenceEquals(this.HtGauche1Field, value) != true)) {
                    this.HtGauche1Field = value;
                    this.RaisePropertyChanged("HtGauche1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HtGauche2 {
            get {
                return this.HtGauche2Field;
            }
            set {
                if ((object.ReferenceEquals(this.HtGauche2Field, value) != true)) {
                    this.HtGauche2Field = value;
                    this.RaisePropertyChanged("HtGauche2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdAccessoires1 {
            get {
                return this.IdAccessoires1Field;
            }
            set {
                if ((this.IdAccessoires1Field.Equals(value) != true)) {
                    this.IdAccessoires1Field = value;
                    this.RaisePropertyChanged("IdAccessoires1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdAccessoires2 {
            get {
                return this.IdAccessoires2Field;
            }
            set {
                if ((this.IdAccessoires2Field.Equals(value) != true)) {
                    this.IdAccessoires2Field = value;
                    this.RaisePropertyChanged("IdAccessoires2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdClient {
            get {
                return this.IdClientField;
            }
            set {
                if ((this.IdClientField.Equals(value) != true)) {
                    this.IdClientField = value;
                    this.RaisePropertyChanged("IdClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdDroiteVerreLoin {
            get {
                return this.IdDroiteVerreLoinField;
            }
            set {
                if ((this.IdDroiteVerreLoinField.Equals(value) != true)) {
                    this.IdDroiteVerreLoinField = value;
                    this.RaisePropertyChanged("IdDroiteVerreLoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdDroiteVerrePres {
            get {
                return this.IdDroiteVerrePresField;
            }
            set {
                if ((this.IdDroiteVerrePresField.Equals(value) != true)) {
                    this.IdDroiteVerrePresField = value;
                    this.RaisePropertyChanged("IdDroiteVerrePres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdGaucheVerreLoin {
            get {
                return this.IdGaucheVerreLoinField;
            }
            set {
                if ((this.IdGaucheVerreLoinField.Equals(value) != true)) {
                    this.IdGaucheVerreLoinField = value;
                    this.RaisePropertyChanged("IdGaucheVerreLoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdGaucheVerrePres {
            get {
                return this.IdGaucheVerrePresField;
            }
            set {
                if ((this.IdGaucheVerrePresField.Equals(value) != true)) {
                    this.IdGaucheVerrePresField = value;
                    this.RaisePropertyChanged("IdGaucheVerrePres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdMontureLoin {
            get {
                return this.IdMontureLoinField;
            }
            set {
                if ((this.IdMontureLoinField.Equals(value) != true)) {
                    this.IdMontureLoinField = value;
                    this.RaisePropertyChanged("IdMontureLoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdMonturePres {
            get {
                return this.IdMonturePresField;
            }
            set {
                if ((this.IdMonturePresField.Equals(value) != true)) {
                    this.IdMonturePresField = value;
                    this.RaisePropertyChanged("IdMonturePres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Interm {
            get {
                return this.IntermField;
            }
            set {
                if ((this.IntermField.Equals(value) != true)) {
                    this.IntermField = value;
                    this.RaisePropertyChanged("Interm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermAddDroite {
            get {
                return this.IntermAddDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermAddDroiteField, value) != true)) {
                    this.IntermAddDroiteField = value;
                    this.RaisePropertyChanged("IntermAddDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermAddGauche {
            get {
                return this.IntermAddGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermAddGaucheField, value) != true)) {
                    this.IntermAddGaucheField = value;
                    this.RaisePropertyChanged("IntermAddGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermAxeDroite {
            get {
                return this.IntermAxeDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermAxeDroiteField, value) != true)) {
                    this.IntermAxeDroiteField = value;
                    this.RaisePropertyChanged("IntermAxeDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermAxeGauche {
            get {
                return this.IntermAxeGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermAxeGaucheField, value) != true)) {
                    this.IntermAxeGaucheField = value;
                    this.RaisePropertyChanged("IntermAxeGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermBaseDroite {
            get {
                return this.IntermBaseDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermBaseDroiteField, value) != true)) {
                    this.IntermBaseDroiteField = value;
                    this.RaisePropertyChanged("IntermBaseDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermBaseGauche {
            get {
                return this.IntermBaseGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermBaseGaucheField, value) != true)) {
                    this.IntermBaseGaucheField = value;
                    this.RaisePropertyChanged("IntermBaseGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermCylindreDroite {
            get {
                return this.IntermCylindreDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermCylindreDroiteField, value) != true)) {
                    this.IntermCylindreDroiteField = value;
                    this.RaisePropertyChanged("IntermCylindreDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermCylindreGauche {
            get {
                return this.IntermCylindreGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermCylindreGaucheField, value) != true)) {
                    this.IntermCylindreGaucheField = value;
                    this.RaisePropertyChanged("IntermCylindreGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermPrismeDroite {
            get {
                return this.IntermPrismeDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermPrismeDroiteField, value) != true)) {
                    this.IntermPrismeDroiteField = value;
                    this.RaisePropertyChanged("IntermPrismeDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermPrismeGauche {
            get {
                return this.IntermPrismeGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermPrismeGaucheField, value) != true)) {
                    this.IntermPrismeGaucheField = value;
                    this.RaisePropertyChanged("IntermPrismeGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermSphereDroite {
            get {
                return this.IntermSphereDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermSphereDroiteField, value) != true)) {
                    this.IntermSphereDroiteField = value;
                    this.RaisePropertyChanged("IntermSphereDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermSphereGauche {
            get {
                return this.IntermSphereGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermSphereGaucheField, value) != true)) {
                    this.IntermSphereGaucheField = value;
                    this.RaisePropertyChanged("IntermSphereGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Livraison {
            get {
                return this.LivraisonField;
            }
            set {
                if ((this.LivraisonField.Equals(value) != true)) {
                    this.LivraisonField = value;
                    this.RaisePropertyChanged("Livraison");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Loin {
            get {
                return this.LoinField;
            }
            set {
                if ((this.LoinField.Equals(value) != true)) {
                    this.LoinField = value;
                    this.RaisePropertyChanged("Loin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoinAddDroite {
            get {
                return this.LoinAddDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.LoinAddDroiteField, value) != true)) {
                    this.LoinAddDroiteField = value;
                    this.RaisePropertyChanged("LoinAddDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoinAddGauche {
            get {
                return this.LoinAddGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.LoinAddGaucheField, value) != true)) {
                    this.LoinAddGaucheField = value;
                    this.RaisePropertyChanged("LoinAddGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoinAxeDroite {
            get {
                return this.LoinAxeDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.LoinAxeDroiteField, value) != true)) {
                    this.LoinAxeDroiteField = value;
                    this.RaisePropertyChanged("LoinAxeDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoinAxeGauche {
            get {
                return this.LoinAxeGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.LoinAxeGaucheField, value) != true)) {
                    this.LoinAxeGaucheField = value;
                    this.RaisePropertyChanged("LoinAxeGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoinBaseDroite {
            get {
                return this.LoinBaseDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.LoinBaseDroiteField, value) != true)) {
                    this.LoinBaseDroiteField = value;
                    this.RaisePropertyChanged("LoinBaseDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoinBaseGauche {
            get {
                return this.LoinBaseGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.LoinBaseGaucheField, value) != true)) {
                    this.LoinBaseGaucheField = value;
                    this.RaisePropertyChanged("LoinBaseGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoinCylindreDroite {
            get {
                return this.LoinCylindreDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.LoinCylindreDroiteField, value) != true)) {
                    this.LoinCylindreDroiteField = value;
                    this.RaisePropertyChanged("LoinCylindreDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoinCylindreGauche {
            get {
                return this.LoinCylindreGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.LoinCylindreGaucheField, value) != true)) {
                    this.LoinCylindreGaucheField = value;
                    this.RaisePropertyChanged("LoinCylindreGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoinPrismeDroite {
            get {
                return this.LoinPrismeDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.LoinPrismeDroiteField, value) != true)) {
                    this.LoinPrismeDroiteField = value;
                    this.RaisePropertyChanged("LoinPrismeDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoinPrismeGauche {
            get {
                return this.LoinPrismeGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.LoinPrismeGaucheField, value) != true)) {
                    this.LoinPrismeGaucheField = value;
                    this.RaisePropertyChanged("LoinPrismeGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoinSphereDroite {
            get {
                return this.LoinSphereDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.LoinSphereDroiteField, value) != true)) {
                    this.LoinSphereDroiteField = value;
                    this.RaisePropertyChanged("LoinSphereDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoinSphereGauche {
            get {
                return this.LoinSphereGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.LoinSphereGaucheField, value) != true)) {
                    this.LoinSphereGaucheField = value;
                    this.RaisePropertyChanged("LoinSphereGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModeVenteLoin {
            get {
                return this.ModeVenteLoinField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeVenteLoinField, value) != true)) {
                    this.ModeVenteLoinField = value;
                    this.RaisePropertyChanged("ModeVenteLoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModeVentePres {
            get {
                return this.ModeVentePresField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeVentePresField, value) != true)) {
                    this.ModeVentePresField = value;
                    this.RaisePropertyChanged("ModeVentePres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MontantTotal {
            get {
                return this.MontantTotalField;
            }
            set {
                if ((this.MontantTotalField.Equals(value) != true)) {
                    this.MontantTotalField = value;
                    this.RaisePropertyChanged("MontantTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Monte {
            get {
                return this.MonteField;
            }
            set {
                if ((this.MonteField.Equals(value) != true)) {
                    this.MonteField = value;
                    this.RaisePropertyChanged("Monte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MontureDesignationLoin {
            get {
                return this.MontureDesignationLoinField;
            }
            set {
                if ((object.ReferenceEquals(this.MontureDesignationLoinField, value) != true)) {
                    this.MontureDesignationLoinField = value;
                    this.RaisePropertyChanged("MontureDesignationLoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MontureDesignationPres {
            get {
                return this.MontureDesignationPresField;
            }
            set {
                if ((object.ReferenceEquals(this.MontureDesignationPresField, value) != true)) {
                    this.MontureDesignationPresField = value;
                    this.RaisePropertyChanged("MontureDesignationPres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NCommande {
            get {
                return this.NCommandeField;
            }
            set {
                if ((object.ReferenceEquals(this.NCommandeField, value) != true)) {
                    this.NCommandeField = value;
                    this.RaisePropertyChanged("NCommande");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Observ {
            get {
                return this.ObservField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservField, value) != true)) {
                    this.ObservField = value;
                    this.RaisePropertyChanged("Observ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Pres {
            get {
                return this.PresField;
            }
            set {
                if ((this.PresField.Equals(value) != true)) {
                    this.PresField = value;
                    this.RaisePropertyChanged("Pres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresAddDroite {
            get {
                return this.PresAddDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.PresAddDroiteField, value) != true)) {
                    this.PresAddDroiteField = value;
                    this.RaisePropertyChanged("PresAddDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresAddGauche {
            get {
                return this.PresAddGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.PresAddGaucheField, value) != true)) {
                    this.PresAddGaucheField = value;
                    this.RaisePropertyChanged("PresAddGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresAxeDroite {
            get {
                return this.PresAxeDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.PresAxeDroiteField, value) != true)) {
                    this.PresAxeDroiteField = value;
                    this.RaisePropertyChanged("PresAxeDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresAxeGauche {
            get {
                return this.PresAxeGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.PresAxeGaucheField, value) != true)) {
                    this.PresAxeGaucheField = value;
                    this.RaisePropertyChanged("PresAxeGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresBaseDroite {
            get {
                return this.PresBaseDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.PresBaseDroiteField, value) != true)) {
                    this.PresBaseDroiteField = value;
                    this.RaisePropertyChanged("PresBaseDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresBaseGauche {
            get {
                return this.PresBaseGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.PresBaseGaucheField, value) != true)) {
                    this.PresBaseGaucheField = value;
                    this.RaisePropertyChanged("PresBaseGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresCylindreDroite {
            get {
                return this.PresCylindreDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.PresCylindreDroiteField, value) != true)) {
                    this.PresCylindreDroiteField = value;
                    this.RaisePropertyChanged("PresCylindreDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresCylindreGauche {
            get {
                return this.PresCylindreGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.PresCylindreGaucheField, value) != true)) {
                    this.PresCylindreGaucheField = value;
                    this.RaisePropertyChanged("PresCylindreGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresPrismeDroite {
            get {
                return this.PresPrismeDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.PresPrismeDroiteField, value) != true)) {
                    this.PresPrismeDroiteField = value;
                    this.RaisePropertyChanged("PresPrismeDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresPrismeGauche {
            get {
                return this.PresPrismeGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.PresPrismeGaucheField, value) != true)) {
                    this.PresPrismeGaucheField = value;
                    this.RaisePropertyChanged("PresPrismeGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresSphereDroite {
            get {
                return this.PresSphereDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.PresSphereDroiteField, value) != true)) {
                    this.PresSphereDroiteField = value;
                    this.RaisePropertyChanged("PresSphereDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresSphereGauche {
            get {
                return this.PresSphereGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.PresSphereGaucheField, value) != true)) {
                    this.PresSphereGaucheField = value;
                    this.RaisePropertyChanged("PresSphereGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Prescription {
            get {
                return this.PrescriptionField;
            }
            set {
                if ((this.PrescriptionField.Equals(value) != true)) {
                    this.PrescriptionField = value;
                    this.RaisePropertyChanged("Prescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixMontureLoin {
            get {
                return this.PrixMontureLoinField;
            }
            set {
                if ((this.PrixMontureLoinField.Equals(value) != true)) {
                    this.PrixMontureLoinField = value;
                    this.RaisePropertyChanged("PrixMontureLoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixMonturePres {
            get {
                return this.PrixMonturePresField;
            }
            set {
                if ((this.PrixMonturePresField.Equals(value) != true)) {
                    this.PrixMonturePresField = value;
                    this.RaisePropertyChanged("PrixMonturePres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaisonClient {
            get {
                return this.RaisonClientField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonClientField, value) != true)) {
                    this.RaisonClientField = value;
                    this.RaisePropertyChanged("RaisonClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Remise {
            get {
                return this.RemiseField;
            }
            set {
                if ((this.RemiseField.Equals(value) != true)) {
                    this.RemiseField = value;
                    this.RaisePropertyChanged("Remise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Reste {
            get {
                return this.ResteField;
            }
            set {
                if ((this.ResteField.Equals(value) != true)) {
                    this.ResteField = value;
                    this.RaisePropertyChanged("Reste");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> StatutDevis {
            get {
                return this.StatutDevisField;
            }
            set {
                if ((this.StatutDevisField.Equals(value) != true)) {
                    this.StatutDevisField = value;
                    this.RaisePropertyChanged("StatutDevis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> StatutVente {
            get {
                return this.StatutVenteField;
            }
            set {
                if ((this.StatutVenteField.Equals(value) != true)) {
                    this.StatutVenteField = value;
                    this.RaisePropertyChanged("StatutVente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LentilleClient", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class LentilleClient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Accessoires1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Accessoires2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AccessoiresPrix1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AccessoiresPrix2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AccessoiresQuantite1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AccessoiresQuantite2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienAcDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienAcGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienAddDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienAddGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienAxeDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienAxeGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienCylindreDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienCylindreGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienSphereDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AncienSphereGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CentrageDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CentrageGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiametreODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiametreOGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DioptrieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocteurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DroitPrixLentilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DroitQuantiteLentilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DroiteCylindreMoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DroiteCylindrePlusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DroiteLentilleDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DroiteStatutAccessoires1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DroiteStatutAccessoires2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DroiteStatutLentilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DuréeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DélivreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EncaisséField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GaucheCylindreMoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GaucheCylindrePlusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GaucheLentilleDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> GauchePrixLentilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> GaucheQuantiteLentilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GaucheStatutLentilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdAccessoires1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdAccessoires2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdDroiteLentilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdGaucheLentilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieDroiteAxeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieDroiteHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieDroiteVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieDroitemoyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieGaucheAxeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieGaucheHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieGaucheVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeratometrieGauchemoyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LentilleAcDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LentilleAcGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LentilleAddDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LentilleAddGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LentilleAxeDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LentilleAxeGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LentilleCylindreDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LentilleCylindreGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LentilleSphereDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LentilleSphereGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LivraisonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MontantTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MouvementDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MouvementGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NcommandeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NouvAcDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NouvAcGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NouvAddDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NouvAddGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NouvAxeDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NouvAxeGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NouvCylindreDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NouvCylindreGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NouvSphereDroiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NouvSphereGaucheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObservField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PrescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProchainVisiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaisonClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RayonODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RayonOGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RemiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ResteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StatutDevisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StatutVenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDevisiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeOGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> mmField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Accessoires1 {
            get {
                return this.Accessoires1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Accessoires1Field, value) != true)) {
                    this.Accessoires1Field = value;
                    this.RaisePropertyChanged("Accessoires1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Accessoires2 {
            get {
                return this.Accessoires2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Accessoires2Field, value) != true)) {
                    this.Accessoires2Field = value;
                    this.RaisePropertyChanged("Accessoires2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AccessoiresPrix1 {
            get {
                return this.AccessoiresPrix1Field;
            }
            set {
                if ((this.AccessoiresPrix1Field.Equals(value) != true)) {
                    this.AccessoiresPrix1Field = value;
                    this.RaisePropertyChanged("AccessoiresPrix1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AccessoiresPrix2 {
            get {
                return this.AccessoiresPrix2Field;
            }
            set {
                if ((this.AccessoiresPrix2Field.Equals(value) != true)) {
                    this.AccessoiresPrix2Field = value;
                    this.RaisePropertyChanged("AccessoiresPrix2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AccessoiresQuantite1 {
            get {
                return this.AccessoiresQuantite1Field;
            }
            set {
                if ((this.AccessoiresQuantite1Field.Equals(value) != true)) {
                    this.AccessoiresQuantite1Field = value;
                    this.RaisePropertyChanged("AccessoiresQuantite1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AccessoiresQuantite2 {
            get {
                return this.AccessoiresQuantite2Field;
            }
            set {
                if ((this.AccessoiresQuantite2Field.Equals(value) != true)) {
                    this.AccessoiresQuantite2Field = value;
                    this.RaisePropertyChanged("AccessoiresQuantite2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienAcDroite {
            get {
                return this.AncienAcDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienAcDroiteField, value) != true)) {
                    this.AncienAcDroiteField = value;
                    this.RaisePropertyChanged("AncienAcDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienAcGauche {
            get {
                return this.AncienAcGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienAcGaucheField, value) != true)) {
                    this.AncienAcGaucheField = value;
                    this.RaisePropertyChanged("AncienAcGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienAddDroite {
            get {
                return this.AncienAddDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienAddDroiteField, value) != true)) {
                    this.AncienAddDroiteField = value;
                    this.RaisePropertyChanged("AncienAddDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienAddGauche {
            get {
                return this.AncienAddGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienAddGaucheField, value) != true)) {
                    this.AncienAddGaucheField = value;
                    this.RaisePropertyChanged("AncienAddGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienAxeDroite {
            get {
                return this.AncienAxeDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienAxeDroiteField, value) != true)) {
                    this.AncienAxeDroiteField = value;
                    this.RaisePropertyChanged("AncienAxeDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienAxeGauche {
            get {
                return this.AncienAxeGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienAxeGaucheField, value) != true)) {
                    this.AncienAxeGaucheField = value;
                    this.RaisePropertyChanged("AncienAxeGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienCylindreDroite {
            get {
                return this.AncienCylindreDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienCylindreDroiteField, value) != true)) {
                    this.AncienCylindreDroiteField = value;
                    this.RaisePropertyChanged("AncienCylindreDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienCylindreGauche {
            get {
                return this.AncienCylindreGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienCylindreGaucheField, value) != true)) {
                    this.AncienCylindreGaucheField = value;
                    this.RaisePropertyChanged("AncienCylindreGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienSphereDroite {
            get {
                return this.AncienSphereDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienSphereDroiteField, value) != true)) {
                    this.AncienSphereDroiteField = value;
                    this.RaisePropertyChanged("AncienSphereDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AncienSphereGauche {
            get {
                return this.AncienSphereGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.AncienSphereGaucheField, value) != true)) {
                    this.AncienSphereGaucheField = value;
                    this.RaisePropertyChanged("AncienSphereGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CentrageDroite {
            get {
                return this.CentrageDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.CentrageDroiteField, value) != true)) {
                    this.CentrageDroiteField = value;
                    this.RaisePropertyChanged("CentrageDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CentrageGauche {
            get {
                return this.CentrageGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.CentrageGaucheField, value) != true)) {
                    this.CentrageGaucheField = value;
                    this.RaisePropertyChanged("CentrageGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cle {
            get {
                return this.CleField;
            }
            set {
                if ((object.ReferenceEquals(this.CleField, value) != true)) {
                    this.CleField = value;
                    this.RaisePropertyChanged("Cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Dates {
            get {
                return this.DatesField;
            }
            set {
                if ((this.DatesField.Equals(value) != true)) {
                    this.DatesField = value;
                    this.RaisePropertyChanged("Dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiametreOD {
            get {
                return this.DiametreODField;
            }
            set {
                if ((object.ReferenceEquals(this.DiametreODField, value) != true)) {
                    this.DiametreODField = value;
                    this.RaisePropertyChanged("DiametreOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiametreOG {
            get {
                return this.DiametreOGField;
            }
            set {
                if ((object.ReferenceEquals(this.DiametreOGField, value) != true)) {
                    this.DiametreOGField = value;
                    this.RaisePropertyChanged("DiametreOG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Dioptrie {
            get {
                return this.DioptrieField;
            }
            set {
                if ((this.DioptrieField.Equals(value) != true)) {
                    this.DioptrieField = value;
                    this.RaisePropertyChanged("Dioptrie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Docteur {
            get {
                return this.DocteurField;
            }
            set {
                if ((object.ReferenceEquals(this.DocteurField, value) != true)) {
                    this.DocteurField = value;
                    this.RaisePropertyChanged("Docteur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DroitPrixLentille {
            get {
                return this.DroitPrixLentilleField;
            }
            set {
                if ((this.DroitPrixLentilleField.Equals(value) != true)) {
                    this.DroitPrixLentilleField = value;
                    this.RaisePropertyChanged("DroitPrixLentille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DroitQuantiteLentille {
            get {
                return this.DroitQuantiteLentilleField;
            }
            set {
                if ((this.DroitQuantiteLentilleField.Equals(value) != true)) {
                    this.DroitQuantiteLentilleField = value;
                    this.RaisePropertyChanged("DroitQuantiteLentille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DroiteCylindreMoin {
            get {
                return this.DroiteCylindreMoinField;
            }
            set {
                if ((this.DroiteCylindreMoinField.Equals(value) != true)) {
                    this.DroiteCylindreMoinField = value;
                    this.RaisePropertyChanged("DroiteCylindreMoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DroiteCylindrePlus {
            get {
                return this.DroiteCylindrePlusField;
            }
            set {
                if ((this.DroiteCylindrePlusField.Equals(value) != true)) {
                    this.DroiteCylindrePlusField = value;
                    this.RaisePropertyChanged("DroiteCylindrePlus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DroiteLentilleDesignation {
            get {
                return this.DroiteLentilleDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.DroiteLentilleDesignationField, value) != true)) {
                    this.DroiteLentilleDesignationField = value;
                    this.RaisePropertyChanged("DroiteLentilleDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DroiteStatutAccessoires1 {
            get {
                return this.DroiteStatutAccessoires1Field;
            }
            set {
                if ((this.DroiteStatutAccessoires1Field.Equals(value) != true)) {
                    this.DroiteStatutAccessoires1Field = value;
                    this.RaisePropertyChanged("DroiteStatutAccessoires1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DroiteStatutAccessoires2 {
            get {
                return this.DroiteStatutAccessoires2Field;
            }
            set {
                if ((this.DroiteStatutAccessoires2Field.Equals(value) != true)) {
                    this.DroiteStatutAccessoires2Field = value;
                    this.RaisePropertyChanged("DroiteStatutAccessoires2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DroiteStatutLentille {
            get {
                return this.DroiteStatutLentilleField;
            }
            set {
                if ((this.DroiteStatutLentilleField.Equals(value) != true)) {
                    this.DroiteStatutLentilleField = value;
                    this.RaisePropertyChanged("DroiteStatutLentille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Durée {
            get {
                return this.DuréeField;
            }
            set {
                if ((object.ReferenceEquals(this.DuréeField, value) != true)) {
                    this.DuréeField = value;
                    this.RaisePropertyChanged("Durée");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Délivre {
            get {
                return this.DélivreField;
            }
            set {
                if ((this.DélivreField.Equals(value) != true)) {
                    this.DélivreField = value;
                    this.RaisePropertyChanged("Délivre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Encaissé {
            get {
                return this.EncaisséField;
            }
            set {
                if ((this.EncaisséField.Equals(value) != true)) {
                    this.EncaisséField = value;
                    this.RaisePropertyChanged("Encaissé");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Examen {
            get {
                return this.ExamenField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamenField, value) != true)) {
                    this.ExamenField = value;
                    this.RaisePropertyChanged("Examen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GaucheCylindreMoin {
            get {
                return this.GaucheCylindreMoinField;
            }
            set {
                if ((this.GaucheCylindreMoinField.Equals(value) != true)) {
                    this.GaucheCylindreMoinField = value;
                    this.RaisePropertyChanged("GaucheCylindreMoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GaucheCylindrePlus {
            get {
                return this.GaucheCylindrePlusField;
            }
            set {
                if ((this.GaucheCylindrePlusField.Equals(value) != true)) {
                    this.GaucheCylindrePlusField = value;
                    this.RaisePropertyChanged("GaucheCylindrePlus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GaucheLentilleDesignation {
            get {
                return this.GaucheLentilleDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.GaucheLentilleDesignationField, value) != true)) {
                    this.GaucheLentilleDesignationField = value;
                    this.RaisePropertyChanged("GaucheLentilleDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> GauchePrixLentille {
            get {
                return this.GauchePrixLentilleField;
            }
            set {
                if ((this.GauchePrixLentilleField.Equals(value) != true)) {
                    this.GauchePrixLentilleField = value;
                    this.RaisePropertyChanged("GauchePrixLentille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> GaucheQuantiteLentille {
            get {
                return this.GaucheQuantiteLentilleField;
            }
            set {
                if ((this.GaucheQuantiteLentilleField.Equals(value) != true)) {
                    this.GaucheQuantiteLentilleField = value;
                    this.RaisePropertyChanged("GaucheQuantiteLentille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GaucheStatutLentille {
            get {
                return this.GaucheStatutLentilleField;
            }
            set {
                if ((this.GaucheStatutLentilleField.Equals(value) != true)) {
                    this.GaucheStatutLentilleField = value;
                    this.RaisePropertyChanged("GaucheStatutLentille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdAccessoires1 {
            get {
                return this.IdAccessoires1Field;
            }
            set {
                if ((this.IdAccessoires1Field.Equals(value) != true)) {
                    this.IdAccessoires1Field = value;
                    this.RaisePropertyChanged("IdAccessoires1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdAccessoires2 {
            get {
                return this.IdAccessoires2Field;
            }
            set {
                if ((this.IdAccessoires2Field.Equals(value) != true)) {
                    this.IdAccessoires2Field = value;
                    this.RaisePropertyChanged("IdAccessoires2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdClient {
            get {
                return this.IdClientField;
            }
            set {
                if ((this.IdClientField.Equals(value) != true)) {
                    this.IdClientField = value;
                    this.RaisePropertyChanged("IdClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdDroiteLentille {
            get {
                return this.IdDroiteLentilleField;
            }
            set {
                if ((this.IdDroiteLentilleField.Equals(value) != true)) {
                    this.IdDroiteLentilleField = value;
                    this.RaisePropertyChanged("IdDroiteLentille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdGaucheLentille {
            get {
                return this.IdGaucheLentilleField;
            }
            set {
                if ((this.IdGaucheLentilleField.Equals(value) != true)) {
                    this.IdGaucheLentilleField = value;
                    this.RaisePropertyChanged("IdGaucheLentille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieDroiteAxe {
            get {
                return this.KeratometrieDroiteAxeField;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieDroiteAxeField, value) != true)) {
                    this.KeratometrieDroiteAxeField = value;
                    this.RaisePropertyChanged("KeratometrieDroiteAxe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieDroiteH {
            get {
                return this.KeratometrieDroiteHField;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieDroiteHField, value) != true)) {
                    this.KeratometrieDroiteHField = value;
                    this.RaisePropertyChanged("KeratometrieDroiteH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieDroiteV {
            get {
                return this.KeratometrieDroiteVField;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieDroiteVField, value) != true)) {
                    this.KeratometrieDroiteVField = value;
                    this.RaisePropertyChanged("KeratometrieDroiteV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieDroitemoy {
            get {
                return this.KeratometrieDroitemoyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieDroitemoyField, value) != true)) {
                    this.KeratometrieDroitemoyField = value;
                    this.RaisePropertyChanged("KeratometrieDroitemoy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieGaucheAxe {
            get {
                return this.KeratometrieGaucheAxeField;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieGaucheAxeField, value) != true)) {
                    this.KeratometrieGaucheAxeField = value;
                    this.RaisePropertyChanged("KeratometrieGaucheAxe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieGaucheH {
            get {
                return this.KeratometrieGaucheHField;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieGaucheHField, value) != true)) {
                    this.KeratometrieGaucheHField = value;
                    this.RaisePropertyChanged("KeratometrieGaucheH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieGaucheV {
            get {
                return this.KeratometrieGaucheVField;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieGaucheVField, value) != true)) {
                    this.KeratometrieGaucheVField = value;
                    this.RaisePropertyChanged("KeratometrieGaucheV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeratometrieGauchemoy {
            get {
                return this.KeratometrieGauchemoyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeratometrieGauchemoyField, value) != true)) {
                    this.KeratometrieGauchemoyField = value;
                    this.RaisePropertyChanged("KeratometrieGauchemoy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LentilleAcDroite {
            get {
                return this.LentilleAcDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.LentilleAcDroiteField, value) != true)) {
                    this.LentilleAcDroiteField = value;
                    this.RaisePropertyChanged("LentilleAcDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LentilleAcGauche {
            get {
                return this.LentilleAcGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.LentilleAcGaucheField, value) != true)) {
                    this.LentilleAcGaucheField = value;
                    this.RaisePropertyChanged("LentilleAcGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LentilleAddDroite {
            get {
                return this.LentilleAddDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.LentilleAddDroiteField, value) != true)) {
                    this.LentilleAddDroiteField = value;
                    this.RaisePropertyChanged("LentilleAddDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LentilleAddGauche {
            get {
                return this.LentilleAddGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.LentilleAddGaucheField, value) != true)) {
                    this.LentilleAddGaucheField = value;
                    this.RaisePropertyChanged("LentilleAddGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LentilleAxeDroite {
            get {
                return this.LentilleAxeDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.LentilleAxeDroiteField, value) != true)) {
                    this.LentilleAxeDroiteField = value;
                    this.RaisePropertyChanged("LentilleAxeDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LentilleAxeGauche {
            get {
                return this.LentilleAxeGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.LentilleAxeGaucheField, value) != true)) {
                    this.LentilleAxeGaucheField = value;
                    this.RaisePropertyChanged("LentilleAxeGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LentilleCylindreDroite {
            get {
                return this.LentilleCylindreDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.LentilleCylindreDroiteField, value) != true)) {
                    this.LentilleCylindreDroiteField = value;
                    this.RaisePropertyChanged("LentilleCylindreDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LentilleCylindreGauche {
            get {
                return this.LentilleCylindreGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.LentilleCylindreGaucheField, value) != true)) {
                    this.LentilleCylindreGaucheField = value;
                    this.RaisePropertyChanged("LentilleCylindreGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LentilleSphereDroite {
            get {
                return this.LentilleSphereDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.LentilleSphereDroiteField, value) != true)) {
                    this.LentilleSphereDroiteField = value;
                    this.RaisePropertyChanged("LentilleSphereDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LentilleSphereGauche {
            get {
                return this.LentilleSphereGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.LentilleSphereGaucheField, value) != true)) {
                    this.LentilleSphereGaucheField = value;
                    this.RaisePropertyChanged("LentilleSphereGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Livraison {
            get {
                return this.LivraisonField;
            }
            set {
                if ((this.LivraisonField.Equals(value) != true)) {
                    this.LivraisonField = value;
                    this.RaisePropertyChanged("Livraison");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lot {
            get {
                return this.LotField;
            }
            set {
                if ((object.ReferenceEquals(this.LotField, value) != true)) {
                    this.LotField = value;
                    this.RaisePropertyChanged("Lot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MontantTotal {
            get {
                return this.MontantTotalField;
            }
            set {
                if ((this.MontantTotalField.Equals(value) != true)) {
                    this.MontantTotalField = value;
                    this.RaisePropertyChanged("MontantTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MouvementDroite {
            get {
                return this.MouvementDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.MouvementDroiteField, value) != true)) {
                    this.MouvementDroiteField = value;
                    this.RaisePropertyChanged("MouvementDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MouvementGauche {
            get {
                return this.MouvementGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.MouvementGaucheField, value) != true)) {
                    this.MouvementGaucheField = value;
                    this.RaisePropertyChanged("MouvementGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ncommande {
            get {
                return this.NcommandeField;
            }
            set {
                if ((object.ReferenceEquals(this.NcommandeField, value) != true)) {
                    this.NcommandeField = value;
                    this.RaisePropertyChanged("Ncommande");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NouvAcDroite {
            get {
                return this.NouvAcDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.NouvAcDroiteField, value) != true)) {
                    this.NouvAcDroiteField = value;
                    this.RaisePropertyChanged("NouvAcDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NouvAcGauche {
            get {
                return this.NouvAcGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.NouvAcGaucheField, value) != true)) {
                    this.NouvAcGaucheField = value;
                    this.RaisePropertyChanged("NouvAcGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NouvAddDroite {
            get {
                return this.NouvAddDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.NouvAddDroiteField, value) != true)) {
                    this.NouvAddDroiteField = value;
                    this.RaisePropertyChanged("NouvAddDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NouvAddGauche {
            get {
                return this.NouvAddGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.NouvAddGaucheField, value) != true)) {
                    this.NouvAddGaucheField = value;
                    this.RaisePropertyChanged("NouvAddGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NouvAxeDroite {
            get {
                return this.NouvAxeDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.NouvAxeDroiteField, value) != true)) {
                    this.NouvAxeDroiteField = value;
                    this.RaisePropertyChanged("NouvAxeDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NouvAxeGauche {
            get {
                return this.NouvAxeGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.NouvAxeGaucheField, value) != true)) {
                    this.NouvAxeGaucheField = value;
                    this.RaisePropertyChanged("NouvAxeGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NouvCylindreDroite {
            get {
                return this.NouvCylindreDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.NouvCylindreDroiteField, value) != true)) {
                    this.NouvCylindreDroiteField = value;
                    this.RaisePropertyChanged("NouvCylindreDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NouvCylindreGauche {
            get {
                return this.NouvCylindreGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.NouvCylindreGaucheField, value) != true)) {
                    this.NouvCylindreGaucheField = value;
                    this.RaisePropertyChanged("NouvCylindreGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NouvSphereDroite {
            get {
                return this.NouvSphereDroiteField;
            }
            set {
                if ((object.ReferenceEquals(this.NouvSphereDroiteField, value) != true)) {
                    this.NouvSphereDroiteField = value;
                    this.RaisePropertyChanged("NouvSphereDroite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NouvSphereGauche {
            get {
                return this.NouvSphereGaucheField;
            }
            set {
                if ((object.ReferenceEquals(this.NouvSphereGaucheField, value) != true)) {
                    this.NouvSphereGaucheField = value;
                    this.RaisePropertyChanged("NouvSphereGauche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Observ {
            get {
                return this.ObservField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservField, value) != true)) {
                    this.ObservField = value;
                    this.RaisePropertyChanged("Observ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Prescription {
            get {
                return this.PrescriptionField;
            }
            set {
                if ((this.PrescriptionField.Equals(value) != true)) {
                    this.PrescriptionField = value;
                    this.RaisePropertyChanged("Prescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProchainVisite {
            get {
                return this.ProchainVisiteField;
            }
            set {
                if ((object.ReferenceEquals(this.ProchainVisiteField, value) != true)) {
                    this.ProchainVisiteField = value;
                    this.RaisePropertyChanged("ProchainVisite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaisonClient {
            get {
                return this.RaisonClientField;
            }
            set {
                if ((object.ReferenceEquals(this.RaisonClientField, value) != true)) {
                    this.RaisonClientField = value;
                    this.RaisePropertyChanged("RaisonClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RayonOD {
            get {
                return this.RayonODField;
            }
            set {
                if ((object.ReferenceEquals(this.RayonODField, value) != true)) {
                    this.RayonODField = value;
                    this.RaisePropertyChanged("RayonOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RayonOG {
            get {
                return this.RayonOGField;
            }
            set {
                if ((object.ReferenceEquals(this.RayonOGField, value) != true)) {
                    this.RayonOGField = value;
                    this.RaisePropertyChanged("RayonOG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Remise {
            get {
                return this.RemiseField;
            }
            set {
                if ((this.RemiseField.Equals(value) != true)) {
                    this.RemiseField = value;
                    this.RaisePropertyChanged("Remise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Reste {
            get {
                return this.ResteField;
            }
            set {
                if ((this.ResteField.Equals(value) != true)) {
                    this.ResteField = value;
                    this.RaisePropertyChanged("Reste");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> StatutDevis {
            get {
                return this.StatutDevisField;
            }
            set {
                if ((this.StatutDevisField.Equals(value) != true)) {
                    this.StatutDevisField = value;
                    this.RaisePropertyChanged("StatutDevis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> StatutVente {
            get {
                return this.StatutVenteField;
            }
            set {
                if ((this.StatutVenteField.Equals(value) != true)) {
                    this.StatutVenteField = value;
                    this.RaisePropertyChanged("StatutVente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDevisite {
            get {
                return this.TypeDevisiteField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDevisiteField, value) != true)) {
                    this.TypeDevisiteField = value;
                    this.RaisePropertyChanged("TypeDevisite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeOD {
            get {
                return this.TypeODField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeODField, value) != true)) {
                    this.TypeODField = value;
                    this.RaisePropertyChanged("TypeOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeOG {
            get {
                return this.TypeOGField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeOGField, value) != true)) {
                    this.TypeOGField = value;
                    this.RaisePropertyChanged("TypeOG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> mm {
            get {
                return this.mmField;
            }
            set {
                if ((this.mmField.Equals(value) != true)) {
                    this.mmField = value;
                    this.RaisePropertyChanged("mm");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lentille", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Lentille : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeLPPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CouleurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourbureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CylField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiamètreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurréeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FiltreUVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FournisseurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LimiteConnuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LimiteFab0Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LimiteFab1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatièreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackagingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixRevientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixVenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SphField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeLentilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleproduitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeLPP {
            get {
                return this.CodeLPPField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeLPPField, value) != true)) {
                    this.CodeLPPField = value;
                    this.RaisePropertyChanged("CodeLPP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Couleur {
            get {
                return this.CouleurField;
            }
            set {
                if ((object.ReferenceEquals(this.CouleurField, value) != true)) {
                    this.CouleurField = value;
                    this.RaisePropertyChanged("Couleur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Courbure {
            get {
                return this.CourbureField;
            }
            set {
                if ((object.ReferenceEquals(this.CourbureField, value) != true)) {
                    this.CourbureField = value;
                    this.RaisePropertyChanged("Courbure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Cyl {
            get {
                return this.CylField;
            }
            set {
                if ((this.CylField.Equals(value) != true)) {
                    this.CylField = value;
                    this.RaisePropertyChanged("Cyl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Design {
            get {
                return this.DesignField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignField, value) != true)) {
                    this.DesignField = value;
                    this.RaisePropertyChanged("Design");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Diamètre {
            get {
                return this.DiamètreField;
            }
            set {
                if ((object.ReferenceEquals(this.DiamètreField, value) != true)) {
                    this.DiamètreField = value;
                    this.RaisePropertyChanged("Diamètre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Durrée {
            get {
                return this.DurréeField;
            }
            set {
                if ((object.ReferenceEquals(this.DurréeField, value) != true)) {
                    this.DurréeField = value;
                    this.RaisePropertyChanged("Durrée");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FiltreUV {
            get {
                return this.FiltreUVField;
            }
            set {
                if ((this.FiltreUVField.Equals(value) != true)) {
                    this.FiltreUVField = value;
                    this.RaisePropertyChanged("FiltreUV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fournisseur {
            get {
                return this.FournisseurField;
            }
            set {
                if ((object.ReferenceEquals(this.FournisseurField, value) != true)) {
                    this.FournisseurField = value;
                    this.RaisePropertyChanged("Fournisseur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> LimiteConnu {
            get {
                return this.LimiteConnuField;
            }
            set {
                if ((this.LimiteConnuField.Equals(value) != true)) {
                    this.LimiteConnuField = value;
                    this.RaisePropertyChanged("LimiteConnu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LimiteFab0 {
            get {
                return this.LimiteFab0Field;
            }
            set {
                if ((object.ReferenceEquals(this.LimiteFab0Field, value) != true)) {
                    this.LimiteFab0Field = value;
                    this.RaisePropertyChanged("LimiteFab0");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LimiteFab1 {
            get {
                return this.LimiteFab1Field;
            }
            set {
                if ((object.ReferenceEquals(this.LimiteFab1Field, value) != true)) {
                    this.LimiteFab1Field = value;
                    this.RaisePropertyChanged("LimiteFab1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Marque {
            get {
                return this.MarqueField;
            }
            set {
                if ((object.ReferenceEquals(this.MarqueField, value) != true)) {
                    this.MarqueField = value;
                    this.RaisePropertyChanged("Marque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Matière {
            get {
                return this.MatièreField;
            }
            set {
                if ((object.ReferenceEquals(this.MatièreField, value) != true)) {
                    this.MatièreField = value;
                    this.RaisePropertyChanged("Matière");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modele {
            get {
                return this.ModeleField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeleField, value) != true)) {
                    this.ModeleField = value;
                    this.RaisePropertyChanged("Modele");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Packaging {
            get {
                return this.PackagingField;
            }
            set {
                if ((object.ReferenceEquals(this.PackagingField, value) != true)) {
                    this.PackagingField = value;
                    this.RaisePropertyChanged("Packaging");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixRevient {
            get {
                return this.PrixRevientField;
            }
            set {
                if ((this.PrixRevientField.Equals(value) != true)) {
                    this.PrixRevientField = value;
                    this.RaisePropertyChanged("PrixRevient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixVente {
            get {
                return this.PrixVenteField;
            }
            set {
                if ((this.PrixVenteField.Equals(value) != true)) {
                    this.PrixVenteField = value;
                    this.RaisePropertyChanged("PrixVente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ref {
            get {
                return this.RefField;
            }
            set {
                if ((object.ReferenceEquals(this.RefField, value) != true)) {
                    this.RefField = value;
                    this.RaisePropertyChanged("Ref");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Sph {
            get {
                return this.SphField;
            }
            set {
                if ((this.SphField.Equals(value) != true)) {
                    this.SphField = value;
                    this.RaisePropertyChanged("Sph");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeLentille {
            get {
                return this.TypeLentilleField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeLentilleField, value) != true)) {
                    this.TypeLentilleField = value;
                    this.RaisePropertyChanged("TypeLentille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cleproduit {
            get {
                return this.cleproduitField;
            }
            set {
                if ((object.ReferenceEquals(this.cleproduitField, value) != true)) {
                    this.cleproduitField = value;
                    this.RaisePropertyChanged("cleproduit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Incompatibilite", Namespace="http://schemas.datacontract.org/2004/07/NewOpticsServer")]
    [System.SerializableAttribute()]
    public partial class Incompatibilite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CleProduitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CleSupplementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeSupplementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ObligatoireField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CleProduit {
            get {
                return this.CleProduitField;
            }
            set {
                if ((object.ReferenceEquals(this.CleProduitField, value) != true)) {
                    this.CleProduitField = value;
                    this.RaisePropertyChanged("CleProduit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CleSupplement {
            get {
                return this.CleSupplementField;
            }
            set {
                if ((object.ReferenceEquals(this.CleSupplementField, value) != true)) {
                    this.CleSupplementField = value;
                    this.RaisePropertyChanged("CleSupplement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeSupplement {
            get {
                return this.CodeSupplementField;
            }
            set {
                if ((this.CodeSupplementField.Equals(value) != true)) {
                    this.CodeSupplementField = value;
                    this.RaisePropertyChanged("CodeSupplement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Designation {
            get {
                return this.DesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationField, value) != true)) {
                    this.DesignationField = value;
                    this.RaisePropertyChanged("Designation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Obligatoire {
            get {
                return this.ObligatoireField;
            }
            set {
                if ((this.ObligatoireField.Equals(value) != true)) {
                    this.ObligatoireField = value;
                    this.RaisePropertyChanged("Obligatoire");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SVC.IServiceClinique", CallbackContract=typeof(NewOptics.SVC.IServiceCliniqueCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IServiceClinique {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteCommande", ReplyAction="http://tempuri.org/IServiceClinique/DeleteCommandeResponse")]
        void DeleteCommande(NewOptics.SVC.Commande obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteCommande", ReplyAction="http://tempuri.org/IServiceClinique/DeleteCommandeResponse")]
        System.IAsyncResult BeginDeleteCommande(NewOptics.SVC.Commande obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteCommande(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllRecouf", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRecoufResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        System.Collections.Generic.List<NewOptics.SVC.Recouf> GetAllRecouf();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllRecouf", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRecoufResponse")]
        System.IAsyncResult BeginGetAllRecouf(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Recouf> EndGetAllRecouf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllRecoufBycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRecoufBycodeResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        System.Collections.Generic.List<NewOptics.SVC.Recouf> GetAllRecoufBycode(int idpatient);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllRecoufBycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRecoufBycodeResponse")]
        System.IAsyncResult BeginGetAllRecoufBycode(int idpatient, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Recouf> EndGetAllRecoufBycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllRecoufbydate", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRecoufbydateResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        System.Collections.Generic.List<NewOptics.SVC.Recouf> GetAllRecoufbydate(System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllRecoufbydate", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRecoufbydateResponse")]
        System.IAsyncResult BeginGetAllRecoufbydate(System.DateTime d1, System.DateTime d2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Recouf> EndGetAllRecoufbydate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertRecouf", ReplyAction="http://tempuri.org/IServiceClinique/InsertRecoufResponse")]
        bool InsertRecouf(NewOptics.SVC.Recouf obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertRecouf", ReplyAction="http://tempuri.org/IServiceClinique/InsertRecoufResponse")]
        System.IAsyncResult BeginInsertRecouf(NewOptics.SVC.Recouf obj, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertRecouf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateRecouf", ReplyAction="http://tempuri.org/IServiceClinique/UpdateRecoufResponse")]
        void UpdateRecouf(NewOptics.SVC.Recouf obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateRecouf", ReplyAction="http://tempuri.org/IServiceClinique/UpdateRecoufResponse")]
        System.IAsyncResult BeginUpdateRecouf(NewOptics.SVC.Recouf obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateRecouf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteRecouf", ReplyAction="http://tempuri.org/IServiceClinique/DeleteRecoufResponse")]
        void DeleteRecouf(NewOptics.SVC.Recouf obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteRecouf", ReplyAction="http://tempuri.org/IServiceClinique/DeleteRecoufResponse")]
        System.IAsyncResult BeginDeleteRecouf(NewOptics.SVC.Recouf obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteRecouf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllRecept", ReplyAction="http://tempuri.org/IServiceClinique/GetAllReceptResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        System.Collections.Generic.List<NewOptics.SVC.Recept> GetAllRecept();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllRecept", ReplyAction="http://tempuri.org/IServiceClinique/GetAllReceptResponse")]
        System.IAsyncResult BeginGetAllRecept(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Recept> EndGetAllRecept(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllReceptBYNFACT", ReplyAction="http://tempuri.org/IServiceClinique/GetAllReceptBYNFACTResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        System.Collections.Generic.List<NewOptics.SVC.Recept> GetAllReceptBYNFACT(string nfact);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllReceptBYNFACT", ReplyAction="http://tempuri.org/IServiceClinique/GetAllReceptBYNFACTResponse")]
        System.IAsyncResult BeginGetAllReceptBYNFACT(string nfact, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Recept> EndGetAllReceptBYNFACT(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertRecept", ReplyAction="http://tempuri.org/IServiceClinique/InsertReceptResponse")]
        bool InsertRecept(NewOptics.SVC.Recept obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertRecept", ReplyAction="http://tempuri.org/IServiceClinique/InsertReceptResponse")]
        System.IAsyncResult BeginInsertRecept(NewOptics.SVC.Recept obj, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertRecept(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateRecept", ReplyAction="http://tempuri.org/IServiceClinique/UpdateReceptResponse")]
        void UpdateRecept(NewOptics.SVC.Recept obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateRecept", ReplyAction="http://tempuri.org/IServiceClinique/UpdateReceptResponse")]
        System.IAsyncResult BeginUpdateRecept(NewOptics.SVC.Recept obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateRecept(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteRecept", ReplyAction="http://tempuri.org/IServiceClinique/DeleteReceptResponse")]
        void DeleteRecept(NewOptics.SVC.Recept obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteRecept", ReplyAction="http://tempuri.org/IServiceClinique/DeleteReceptResponse")]
        System.IAsyncResult BeginDeleteRecept(NewOptics.SVC.Recept obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteRecept(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/Connect", ReplyAction="http://tempuri.org/IServiceClinique/ConnectResponse")]
        bool Connect(NewOptics.SVC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Connect", ReplyAction="http://tempuri.org/IServiceClinique/ConnectResponse")]
        System.IAsyncResult BeginConnect(NewOptics.SVC.Client client, System.AsyncCallback callback, object asyncState);
        
        bool EndConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllClient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Client> GetAllClient();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllClient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientResponse")]
        System.IAsyncResult BeginGetAllClient(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Client> EndGetAllClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllClientDict", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientDictResponse")]
        System.Collections.Generic.Dictionary<NewOptics.SVC.Client, object> GetAllClientDict();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllClientDict", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientDictResponse")]
        System.IAsyncResult BeginGetAllClientDict(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<NewOptics.SVC.Client, object> EndGetAllClientDict(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/ReConnect")]
        void ReConnect(NewOptics.SVC.Client LocalClient);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/ReConnect")]
        System.IAsyncResult BeginReConnect(NewOptics.SVC.Client LocalClient, System.AsyncCallback callback, object asyncState);
        
        void EndReConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/Say", ReplyAction="http://tempuri.org/IServiceClinique/SayResponse")]
        void Say(NewOptics.SVC.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Say", ReplyAction="http://tempuri.org/IServiceClinique/SayResponse")]
        System.IAsyncResult BeginSay(NewOptics.SVC.Message msg, System.AsyncCallback callback, object asyncState);
        
        void EndSay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/Whisper")]
        void Whisper(NewOptics.SVC.Message msg, NewOptics.SVC.Client receiver);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Whisper")]
        System.IAsyncResult BeginWhisper(NewOptics.SVC.Message msg, NewOptics.SVC.Client receiver, System.AsyncCallback callback, object asyncState);
        
        void EndWhisper(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/IsWriting")]
        void IsWriting(NewOptics.SVC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/IsWriting")]
        System.IAsyncResult BeginIsWriting(NewOptics.SVC.Client client, System.AsyncCallback callback, object asyncState);
        
        void EndIsWriting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/SendFile", ReplyAction="http://tempuri.org/IServiceClinique/SendFileResponse")]
        bool SendFile(NewOptics.SVC.FileMessage fileMsg, NewOptics.SVC.Client receiver);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/SendFile", ReplyAction="http://tempuri.org/IServiceClinique/SendFileResponse")]
        System.IAsyncResult BeginSendFile(NewOptics.SVC.FileMessage fileMsg, NewOptics.SVC.Client receiver, System.AsyncCallback callback, object asyncState);
        
        bool EndSendFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IServiceClinique/Disconnect")]
        void Disconnect(NewOptics.SVC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Disconnect")]
        System.IAsyncResult BeginDisconnect(NewOptics.SVC.Client client, System.AsyncCallback callback, object asyncState);
        
        void EndDisconnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllVerreAssocie", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVerreAssocieResponse")]
        System.Collections.Generic.List<NewOptics.SVC.VerreAssocie> GetAllVerreAssocie();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllVerreAssocie", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVerreAssocieResponse")]
        System.IAsyncResult BeginGetAllVerreAssocie(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.VerreAssocie> EndGetAllVerreAssocie(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllVerreAssociebySupplement", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVerreAssociebySupplementResponse")]
        System.Collections.Generic.List<NewOptics.SVC.VerreAssocie> GetAllVerreAssociebySupplement(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllVerreAssociebySupplement", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVerreAssociebySupplementResponse")]
        System.IAsyncResult BeginGetAllVerreAssociebySupplement(string code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.VerreAssocie> EndGetAllVerreAssociebySupplement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertVerreAssocie", ReplyAction="http://tempuri.org/IServiceClinique/InsertVerreAssocieResponse")]
        void InsertVerreAssocie(NewOptics.SVC.VerreAssocie obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertVerreAssocie", ReplyAction="http://tempuri.org/IServiceClinique/InsertVerreAssocieResponse")]
        System.IAsyncResult BeginInsertVerreAssocie(NewOptics.SVC.VerreAssocie obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertVerreAssocie(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateVerreAssocie", ReplyAction="http://tempuri.org/IServiceClinique/UpdateVerreAssocieResponse")]
        void UpdateVerreAssocie(NewOptics.SVC.VerreAssocie obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateVerreAssocie", ReplyAction="http://tempuri.org/IServiceClinique/UpdateVerreAssocieResponse")]
        System.IAsyncResult BeginUpdateVerreAssocie(NewOptics.SVC.VerreAssocie obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateVerreAssocie(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteVerreAssocie", ReplyAction="http://tempuri.org/IServiceClinique/DeleteVerreAssocieResponse")]
        void DeleteVerreAssocie(NewOptics.SVC.VerreAssocie obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteVerreAssocie", ReplyAction="http://tempuri.org/IServiceClinique/DeleteVerreAssocieResponse")]
        System.IAsyncResult BeginDeleteVerreAssocie(NewOptics.SVC.VerreAssocie obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteVerreAssocie(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllSupplement", ReplyAction="http://tempuri.org/IServiceClinique/GetAllSupplementResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Supplement> GetAllSupplement();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllSupplement", ReplyAction="http://tempuri.org/IServiceClinique/GetAllSupplementResponse")]
        System.IAsyncResult BeginGetAllSupplement(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Supplement> EndGetAllSupplement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllSupplementbycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllSupplementbycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Supplement> GetAllSupplementbycode(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllSupplementbycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllSupplementbycodeResponse")]
        System.IAsyncResult BeginGetAllSupplementbycode(int code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Supplement> EndGetAllSupplementbycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertSupplement", ReplyAction="http://tempuri.org/IServiceClinique/InsertSupplementResponse")]
        void InsertSupplement(NewOptics.SVC.Supplement obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertSupplement", ReplyAction="http://tempuri.org/IServiceClinique/InsertSupplementResponse")]
        System.IAsyncResult BeginInsertSupplement(NewOptics.SVC.Supplement obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertSupplement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateSupplement", ReplyAction="http://tempuri.org/IServiceClinique/UpdateSupplementResponse")]
        void UpdateSupplement(NewOptics.SVC.Supplement obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateSupplement", ReplyAction="http://tempuri.org/IServiceClinique/UpdateSupplementResponse")]
        System.IAsyncResult BeginUpdateSupplement(NewOptics.SVC.Supplement obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateSupplement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteSupplement", ReplyAction="http://tempuri.org/IServiceClinique/DeleteSupplementResponse")]
        void DeleteSupplement(NewOptics.SVC.Supplement obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteSupplement", ReplyAction="http://tempuri.org/IServiceClinique/DeleteSupplementResponse")]
        System.IAsyncResult BeginDeleteSupplement(NewOptics.SVC.Supplement obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteSupplement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllVerre", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVerreResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Verre> GetAllVerre();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllVerre", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVerreResponse")]
        System.IAsyncResult BeginGetAllVerre(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Verre> EndGetAllVerre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllVerrebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVerrebycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Verre> GetAllVerrebycode(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllVerrebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVerrebycodeResponse")]
        System.IAsyncResult BeginGetAllVerrebycode(string code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Verre> EndGetAllVerrebycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertVerre", ReplyAction="http://tempuri.org/IServiceClinique/InsertVerreResponse")]
        void InsertVerre(NewOptics.SVC.Verre obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertVerre", ReplyAction="http://tempuri.org/IServiceClinique/InsertVerreResponse")]
        System.IAsyncResult BeginInsertVerre(NewOptics.SVC.Verre obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertVerre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateVerre", ReplyAction="http://tempuri.org/IServiceClinique/UpdateVerreResponse")]
        void UpdateVerre(NewOptics.SVC.Verre obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateVerre", ReplyAction="http://tempuri.org/IServiceClinique/UpdateVerreResponse")]
        System.IAsyncResult BeginUpdateVerre(NewOptics.SVC.Verre obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateVerre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteVerre", ReplyAction="http://tempuri.org/IServiceClinique/DeleteVerreResponse")]
        void DeleteVerre(NewOptics.SVC.Verre obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteVerre", ReplyAction="http://tempuri.org/IServiceClinique/DeleteVerreResponse")]
        System.IAsyncResult BeginDeleteVerre(NewOptics.SVC.Verre obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteVerre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllTarifVerre", ReplyAction="http://tempuri.org/IServiceClinique/GetAllTarifVerreResponse")]
        System.Collections.Generic.List<NewOptics.SVC.TarifVerre> GetAllTarifVerre();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllTarifVerre", ReplyAction="http://tempuri.org/IServiceClinique/GetAllTarifVerreResponse")]
        System.IAsyncResult BeginGetAllTarifVerre(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.TarifVerre> EndGetAllTarifVerre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllTarifVerrebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllTarifVerrebycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.TarifVerre> GetAllTarifVerrebycode(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllTarifVerrebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllTarifVerrebycodeResponse")]
        System.IAsyncResult BeginGetAllTarifVerrebycode(string code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.TarifVerre> EndGetAllTarifVerrebycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertTarifVerre", ReplyAction="http://tempuri.org/IServiceClinique/InsertTarifVerreResponse")]
        void InsertTarifVerre(NewOptics.SVC.TarifVerre obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertTarifVerre", ReplyAction="http://tempuri.org/IServiceClinique/InsertTarifVerreResponse")]
        System.IAsyncResult BeginInsertTarifVerre(NewOptics.SVC.TarifVerre obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertTarifVerre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateTarifVerre", ReplyAction="http://tempuri.org/IServiceClinique/UpdateTarifVerreResponse")]
        void UpdateTarifVerre(NewOptics.SVC.TarifVerre obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateTarifVerre", ReplyAction="http://tempuri.org/IServiceClinique/UpdateTarifVerreResponse")]
        System.IAsyncResult BeginUpdateTarifVerre(NewOptics.SVC.TarifVerre obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateTarifVerre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteTarifVerre", ReplyAction="http://tempuri.org/IServiceClinique/DeleteTarifVerreResponse")]
        void DeleteTarifVerre(NewOptics.SVC.TarifVerre obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteTarifVerre", ReplyAction="http://tempuri.org/IServiceClinique/DeleteTarifVerreResponse")]
        System.IAsyncResult BeginDeleteTarifVerre(NewOptics.SVC.TarifVerre obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteTarifVerre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllTcab", ReplyAction="http://tempuri.org/IServiceClinique/GetAllTcabResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Tcab> GetAllTcab();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllTcab", ReplyAction="http://tempuri.org/IServiceClinique/GetAllTcabResponse")]
        System.IAsyncResult BeginGetAllTcab(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Tcab> EndGetAllTcab(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllTcabbycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllTcabbycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Tcab> GetAllTcabbycode(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllTcabbycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllTcabbycodeResponse")]
        System.IAsyncResult BeginGetAllTcabbycode(string code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Tcab> EndGetAllTcabbycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertTcab", ReplyAction="http://tempuri.org/IServiceClinique/InsertTcabResponse")]
        void InsertTcab(NewOptics.SVC.Tcab obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertTcab", ReplyAction="http://tempuri.org/IServiceClinique/InsertTcabResponse")]
        System.IAsyncResult BeginInsertTcab(NewOptics.SVC.Tcab obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertTcab(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateTcab", ReplyAction="http://tempuri.org/IServiceClinique/UpdateTcabResponse")]
        void UpdateTcab(NewOptics.SVC.Tcab obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateTcab", ReplyAction="http://tempuri.org/IServiceClinique/UpdateTcabResponse")]
        System.IAsyncResult BeginUpdateTcab(NewOptics.SVC.Tcab obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateTcab(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteTcab", ReplyAction="http://tempuri.org/IServiceClinique/DeleteTcabResponse")]
        void DeleteTcab(NewOptics.SVC.Tcab obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteTcab", ReplyAction="http://tempuri.org/IServiceClinique/DeleteTcabResponse")]
        System.IAsyncResult BeginDeleteTcab(NewOptics.SVC.Tcab obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteTcab(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllFourn", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFournResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Fourn> GetAllFourn();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllFourn", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFournResponse")]
        System.IAsyncResult BeginGetAllFourn(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Fourn> EndGetAllFourn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertFourn", ReplyAction="http://tempuri.org/IServiceClinique/InsertFournResponse")]
        void InsertFourn(NewOptics.SVC.Fourn obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertFourn", ReplyAction="http://tempuri.org/IServiceClinique/InsertFournResponse")]
        System.IAsyncResult BeginInsertFourn(NewOptics.SVC.Fourn obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertFourn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateFourn", ReplyAction="http://tempuri.org/IServiceClinique/UpdateFournResponse")]
        void UpdateFourn(NewOptics.SVC.Fourn obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateFourn", ReplyAction="http://tempuri.org/IServiceClinique/UpdateFournResponse")]
        System.IAsyncResult BeginUpdateFourn(NewOptics.SVC.Fourn obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateFourn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteFourn", ReplyAction="http://tempuri.org/IServiceClinique/DeleteFournResponse")]
        void DeleteFourn(NewOptics.SVC.Fourn obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteFourn", ReplyAction="http://tempuri.org/IServiceClinique/DeleteFournResponse")]
        System.IAsyncResult BeginDeleteFourn(NewOptics.SVC.Fourn obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteFourn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllF1", ReplyAction="http://tempuri.org/IServiceClinique/GetAllF1Response")]
        System.Collections.Generic.List<NewOptics.SVC.F1> GetAllF1(System.DateTime date1, System.DateTime date2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllF1", ReplyAction="http://tempuri.org/IServiceClinique/GetAllF1Response")]
        System.IAsyncResult BeginGetAllF1(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.F1> EndGetAllF1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllF1All", ReplyAction="http://tempuri.org/IServiceClinique/GetAllF1AllResponse")]
        System.Collections.Generic.List<NewOptics.SVC.F1> GetAllF1All();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllF1All", ReplyAction="http://tempuri.org/IServiceClinique/GetAllF1AllResponse")]
        System.IAsyncResult BeginGetAllF1All(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.F1> EndGetAllF1All(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllF1Bycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllF1BycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.F1> GetAllF1Bycode(int idF1);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllF1Bycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllF1BycodeResponse")]
        System.IAsyncResult BeginGetAllF1Bycode(int idF1, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.F1> EndGetAllF1Bycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllF1ByCle", ReplyAction="http://tempuri.org/IServiceClinique/GetAllF1ByCleResponse")]
        System.Collections.Generic.List<NewOptics.SVC.F1> GetAllF1ByCle(string clepatient);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllF1ByCle", ReplyAction="http://tempuri.org/IServiceClinique/GetAllF1ByCleResponse")]
        System.IAsyncResult BeginGetAllF1ByCle(string clepatient, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.F1> EndGetAllF1ByCle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllF1ByCleDossier", ReplyAction="http://tempuri.org/IServiceClinique/GetAllF1ByCleDossierResponse")]
        System.Collections.Generic.List<NewOptics.SVC.F1> GetAllF1ByCleDossier(string clepatient);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllF1ByCleDossier", ReplyAction="http://tempuri.org/IServiceClinique/GetAllF1ByCleDossierResponse")]
        System.IAsyncResult BeginGetAllF1ByCleDossier(string clepatient, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.F1> EndGetAllF1ByCleDossier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllF1ByVisiteOper", ReplyAction="http://tempuri.org/IServiceClinique/GetAllF1ByVisiteOperResponse")]
        System.Collections.Generic.List<NewOptics.SVC.F1> GetAllF1ByVisiteOper(string idmedecin);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllF1ByVisiteOper", ReplyAction="http://tempuri.org/IServiceClinique/GetAllF1ByVisiteOperResponse")]
        System.IAsyncResult BeginGetAllF1ByVisiteOper(string idmedecin, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.F1> EndGetAllF1ByVisiteOper(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertF1", ReplyAction="http://tempuri.org/IServiceClinique/InsertF1Response")]
        void InsertF1(NewOptics.SVC.F1 obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertF1", ReplyAction="http://tempuri.org/IServiceClinique/InsertF1Response")]
        System.IAsyncResult BeginInsertF1(NewOptics.SVC.F1 obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertF1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateF1", ReplyAction="http://tempuri.org/IServiceClinique/UpdateF1Response")]
        void UpdateF1(NewOptics.SVC.F1 obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateF1", ReplyAction="http://tempuri.org/IServiceClinique/UpdateF1Response")]
        System.IAsyncResult BeginUpdateF1(NewOptics.SVC.F1 obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateF1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteF1", ReplyAction="http://tempuri.org/IServiceClinique/DeleteF1Response")]
        void DeleteF1(NewOptics.SVC.F1 obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteF1", ReplyAction="http://tempuri.org/IServiceClinique/DeleteF1Response")]
        System.IAsyncResult BeginDeleteF1(NewOptics.SVC.F1 obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteF1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllFactureBycodeproduit", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureBycodeproduitResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFactureBycodeproduit(int idF1);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllFactureBycodeproduit", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureBycodeproduitResponse")]
        System.IAsyncResult BeginGetAllFactureBycodeproduit(int idF1, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFactureBycodeproduit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllFacture", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFacture(System.DateTime date1, System.DateTime date2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllFacture", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureResponse")]
        System.IAsyncResult BeginGetAllFacture(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFacture(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllFactureAll", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureAllResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFactureAll();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllFactureAll", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureAllResponse")]
        System.IAsyncResult BeginGetAllFactureAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFactureAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllFactureBycompteur", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureBycompteurResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFactureBycompteur(string idF1);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllFactureBycompteur", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureBycompteurResponse")]
        System.IAsyncResult BeginGetAllFactureBycompteur(string idF1, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFactureBycompteur(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllFactureByCode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureByCodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFactureByCode(int clepatient);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllFactureByCode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureByCodeResponse")]
        System.IAsyncResult BeginGetAllFactureByCode(int clepatient, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFactureByCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllFactureByCle", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureByCleResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFactureByCle(string clepatient);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllFactureByCle", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureByCleResponse")]
        System.IAsyncResult BeginGetAllFactureByCle(string clepatient, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFactureByCle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllFactureByOper", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureByOperResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFactureByOper(string idmedecin);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllFactureByOper", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFactureByOperResponse")]
        System.IAsyncResult BeginGetAllFactureByOper(string idmedecin, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFactureByOper(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertFacture", ReplyAction="http://tempuri.org/IServiceClinique/InsertFactureResponse")]
        bool InsertFacture(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE, string document);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertFacture", ReplyAction="http://tempuri.org/IServiceClinique/InsertFactureResponse")]
        System.IAsyncResult BeginInsertFacture(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE, string document, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertFacture(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertFactureSansStock", ReplyAction="http://tempuri.org/IServiceClinique/InsertFactureSansStockResponse")]
        bool InsertFactureSansStock(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE, string document);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertFactureSansStock", ReplyAction="http://tempuri.org/IServiceClinique/InsertFactureSansStockResponse")]
        System.IAsyncResult BeginInsertFactureSansStock(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE, string document, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertFactureSansStock(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateFacture", ReplyAction="http://tempuri.org/IServiceClinique/UpdateFactureResponse")]
        bool UpdateFacture(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE, System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture, string document);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateFacture", ReplyAction="http://tempuri.org/IServiceClinique/UpdateFactureResponse")]
        System.IAsyncResult BeginUpdateFacture(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE, System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture, string document, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateFacture(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateFactureSansStock", ReplyAction="http://tempuri.org/IServiceClinique/UpdateFactureSansStockResponse")]
        bool UpdateFactureSansStock(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE, System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture, string document);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateFactureSansStock", ReplyAction="http://tempuri.org/IServiceClinique/UpdateFactureSansStockResponse")]
        System.IAsyncResult BeginUpdateFactureSansStock(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE, System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture, string document, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateFactureSansStock(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteFacture", ReplyAction="http://tempuri.org/IServiceClinique/DeleteFactureResponse")]
        void DeleteFacture(NewOptics.SVC.Facture obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteFacture", ReplyAction="http://tempuri.org/IServiceClinique/DeleteFactureResponse")]
        System.IAsyncResult BeginDeleteFacture(NewOptics.SVC.Facture obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteFacture(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDepeiementMultipleFournisseur", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepeiementMultipleFournisseurResponse")]
        System.Collections.Generic.List<NewOptics.SVC.DepeiementMultipleFournisseur> GetAllDepeiementMultipleFournisseur();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDepeiementMultipleFournisseur", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepeiementMultipleFournisseurResponse")]
        System.IAsyncResult BeginGetAllDepeiementMultipleFournisseur(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.DepeiementMultipleFournisseur> EndGetAllDepeiementMultipleFournisseur(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertDepeiementMultipleFournisseur", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepeiementMultipleFournisseurResponse")]
        void InsertDepeiementMultipleFournisseur(NewOptics.SVC.DepeiementMultipleFournisseur obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertDepeiementMultipleFournisseur", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepeiementMultipleFournisseurResponse")]
        System.IAsyncResult BeginInsertDepeiementMultipleFournisseur(NewOptics.SVC.DepeiementMultipleFournisseur obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertDepeiementMultipleFournisseur(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateDepeiementMultipleFournisseur", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepeiementMultipleFournisseurResponse")]
        void UpdateDepeiementMultipleFournisseur(NewOptics.SVC.DepeiementMultipleFournisseur obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateDepeiementMultipleFournisseur", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepeiementMultipleFournisseurResponse")]
        System.IAsyncResult BeginUpdateDepeiementMultipleFournisseur(NewOptics.SVC.DepeiementMultipleFournisseur obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDepeiementMultipleFournisseur(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteDepeiementMultipleFournisseur", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepeiementMultipleFournisseurResponse")]
        void DeleteDepeiementMultipleFournisseur(NewOptics.SVC.DepeiementMultipleFournisseur obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteDepeiementMultipleFournisseur", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepeiementMultipleFournisseurResponse")]
        System.IAsyncResult BeginDeleteDepeiementMultipleFournisseur(NewOptics.SVC.DepeiementMultipleFournisseur obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDepeiementMultipleFournisseur(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepeiementMultipleResponse")]
        System.Collections.Generic.List<NewOptics.SVC.DepeiementMultiple> GetAllDepeiementMultiple();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepeiementMultipleResponse")]
        System.IAsyncResult BeginGetAllDepeiementMultiple(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.DepeiementMultiple> EndGetAllDepeiementMultiple(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepeiementMultipleResponse")]
        void InsertDepeiementMultiple(NewOptics.SVC.DepeiementMultiple obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepeiementMultipleResponse")]
        System.IAsyncResult BeginInsertDepeiementMultiple(NewOptics.SVC.DepeiementMultiple obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertDepeiementMultiple(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepeiementMultipleResponse")]
        void UpdateDepeiementMultiple(NewOptics.SVC.DepeiementMultiple obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepeiementMultipleResponse")]
        System.IAsyncResult BeginUpdateDepeiementMultiple(NewOptics.SVC.DepeiementMultiple obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDepeiementMultiple(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepeiementMultipleResponse")]
        void DeleteDepeiementMultiple(NewOptics.SVC.DepeiementMultiple obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepeiementMultipleResponse")]
        System.IAsyncResult BeginDeleteDepeiementMultiple(NewOptics.SVC.DepeiementMultiple obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDepeiementMultiple(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAlldepaief", ReplyAction="http://tempuri.org/IServiceClinique/GetAlldepaiefResponse")]
        System.Collections.Generic.List<NewOptics.SVC.depaief> GetAlldepaief();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAlldepaief", ReplyAction="http://tempuri.org/IServiceClinique/GetAlldepaiefResponse")]
        System.IAsyncResult BeginGetAlldepaief(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.depaief> EndGetAlldepaief(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/Insertdepaief", ReplyAction="http://tempuri.org/IServiceClinique/InsertdepaiefResponse")]
        void Insertdepaief(NewOptics.SVC.depaief obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Insertdepaief", ReplyAction="http://tempuri.org/IServiceClinique/InsertdepaiefResponse")]
        System.IAsyncResult BeginInsertdepaief(NewOptics.SVC.depaief obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertdepaief(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/Updatedepaief", ReplyAction="http://tempuri.org/IServiceClinique/UpdatedepaiefResponse")]
        void Updatedepaief(NewOptics.SVC.depaief obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Updatedepaief", ReplyAction="http://tempuri.org/IServiceClinique/UpdatedepaiefResponse")]
        System.IAsyncResult BeginUpdatedepaief(NewOptics.SVC.depaief obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatedepaief(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/Deletedepaief", ReplyAction="http://tempuri.org/IServiceClinique/DeletedepaiefResponse")]
        void Deletedepaief(NewOptics.SVC.depaief obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Deletedepaief", ReplyAction="http://tempuri.org/IServiceClinique/DeletedepaiefResponse")]
        System.IAsyncResult BeginDeletedepaief(NewOptics.SVC.depaief obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeletedepaief(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepeimentResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Depeiment> GetAllDepeiment();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepeimentResponse")]
        System.IAsyncResult BeginGetAllDepeiment(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Depeiment> EndGetAllDepeiment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDepeimentByF1", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepeimentByF1Response")]
        System.Collections.Generic.List<NewOptics.SVC.Depeiment> GetAllDepeimentByF1(string stringf);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDepeimentByF1", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepeimentByF1Response")]
        System.IAsyncResult BeginGetAllDepeimentByF1(string stringf, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Depeiment> EndGetAllDepeimentByF1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepeimentResponse")]
        void InsertDepeiment(NewOptics.SVC.Depeiment obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepeimentResponse")]
        System.IAsyncResult BeginInsertDepeiment(NewOptics.SVC.Depeiment obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertDepeiment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepeimentResponse")]
        void UpdateDepeiment(NewOptics.SVC.Depeiment obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepeimentResponse")]
        System.IAsyncResult BeginUpdateDepeiment(NewOptics.SVC.Depeiment obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDepeiment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepeimentResponse")]
        void DeleteDepeiment(NewOptics.SVC.Depeiment obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepeimentResponse")]
        System.IAsyncResult BeginDeleteDepeiment(NewOptics.SVC.Depeiment obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDepeiment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMotifDepense", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMotifDepenseResponse")]
        System.Collections.Generic.List<NewOptics.SVC.MotifDepense> GetAllMotifDepense();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMotifDepense", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMotifDepenseResponse")]
        System.IAsyncResult BeginGetAllMotifDepense(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.MotifDepense> EndGetAllMotifDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/InsertMotifDepense")]
        void InsertMotifDepense(NewOptics.SVC.MotifDepense obj);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertMotifDepense")]
        System.IAsyncResult BeginInsertMotifDepense(NewOptics.SVC.MotifDepense obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertMotifDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateMotifDepense", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMotifDepenseResponse")]
        void UpdateMotifDepense(NewOptics.SVC.MotifDepense obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateMotifDepense", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMotifDepenseResponse")]
        System.IAsyncResult BeginUpdateMotifDepense(NewOptics.SVC.MotifDepense obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateMotifDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteMotifDepense", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMotifDepenseResponse")]
        void DeleteMotifDepense(NewOptics.SVC.MotifDepense obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteMotifDepense", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMotifDepenseResponse")]
        System.IAsyncResult BeginDeleteMotifDepense(NewOptics.SVC.MotifDepense obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteMotifDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDepense", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepenseResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Depense> GetAllDepense();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDepense", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepenseResponse")]
        System.IAsyncResult BeginGetAllDepense(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Depense> EndGetAllDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDepenseByF1", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepenseByF1Response")]
        System.Collections.Generic.List<NewOptics.SVC.Depense> GetAllDepenseByF1(string stringf);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDepenseByF1", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepenseByF1Response")]
        System.IAsyncResult BeginGetAllDepenseByF1(string stringf, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Depense> EndGetAllDepenseByF1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertDepense", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepenseResponse")]
        void InsertDepense(NewOptics.SVC.Depense obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertDepense", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepenseResponse")]
        System.IAsyncResult BeginInsertDepense(NewOptics.SVC.Depense obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateDepense", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepenseResponse")]
        void UpdateDepense(NewOptics.SVC.Depense obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateDepense", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepenseResponse")]
        System.IAsyncResult BeginUpdateDepense(NewOptics.SVC.Depense obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteDepense", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepenseResponse")]
        void DeleteDepense(NewOptics.SVC.Depense obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteDepense", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepenseResponse")]
        System.IAsyncResult BeginDeleteDepense(NewOptics.SVC.Depense obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllam", ReplyAction="http://tempuri.org/IServiceClinique/GetAllamResponse")]
        System.Collections.Generic.List<NewOptics.SVC.am> GetAllam();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllam", ReplyAction="http://tempuri.org/IServiceClinique/GetAllamResponse")]
        System.IAsyncResult BeginGetAllam(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.am> EndGetAllam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/Insertam", ReplyAction="http://tempuri.org/IServiceClinique/InsertamResponse")]
        void Insertam(NewOptics.SVC.am obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Insertam", ReplyAction="http://tempuri.org/IServiceClinique/InsertamResponse")]
        System.IAsyncResult BeginInsertam(NewOptics.SVC.am obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/Updateam", ReplyAction="http://tempuri.org/IServiceClinique/UpdateamResponse")]
        void Updateam(NewOptics.SVC.am obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Updateam", ReplyAction="http://tempuri.org/IServiceClinique/UpdateamResponse")]
        System.IAsyncResult BeginUpdateam(NewOptics.SVC.am obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/Deleteam", ReplyAction="http://tempuri.org/IServiceClinique/DeleteamResponse")]
        void Deleteam(NewOptics.SVC.am obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Deleteam", ReplyAction="http://tempuri.org/IServiceClinique/DeleteamResponse")]
        System.IAsyncResult BeginDeleteam(NewOptics.SVC.am obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllClientV", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientVResponse")]
        System.Collections.Generic.List<NewOptics.SVC.ClientV> GetAllClientV();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllClientV", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientVResponse")]
        System.IAsyncResult BeginGetAllClientV(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.ClientV> EndGetAllClientV(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllClientVPAR", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientVPARResponse")]
        System.Collections.Generic.List<NewOptics.SVC.ClientV> GetAllClientVPAR(string PAT);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllClientVPAR", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientVPARResponse")]
        System.IAsyncResult BeginGetAllClientVPAR(string PAT, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.ClientV> EndGetAllClientVPAR(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllClientVEXISTE", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientVEXISTEResponse")]
        bool GetAllClientVEXISTE(string Nom);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllClientVEXISTE", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientVEXISTEResponse")]
        System.IAsyncResult BeginGetAllClientVEXISTE(string Nom, System.AsyncCallback callback, object asyncState);
        
        bool EndGetAllClientVEXISTE(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllClientVBYID", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientVBYIDResponse")]
        System.Collections.Generic.List<NewOptics.SVC.ClientV> GetAllClientVBYID(int idpatient);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllClientVBYID", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientVBYIDResponse")]
        System.IAsyncResult BeginGetAllClientVBYID(int idpatient, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.ClientV> EndGetAllClientVBYID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertClientV", ReplyAction="http://tempuri.org/IServiceClinique/InsertClientVResponse")]
        void InsertClientV(NewOptics.SVC.ClientV obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertClientV", ReplyAction="http://tempuri.org/IServiceClinique/InsertClientVResponse")]
        System.IAsyncResult BeginInsertClientV(NewOptics.SVC.ClientV obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertClientV(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateClientV", ReplyAction="http://tempuri.org/IServiceClinique/UpdateClientVResponse")]
        void UpdateClientV(NewOptics.SVC.ClientV obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateClientV", ReplyAction="http://tempuri.org/IServiceClinique/UpdateClientVResponse")]
        System.IAsyncResult BeginUpdateClientV(NewOptics.SVC.ClientV obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateClientV(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteClientV", ReplyAction="http://tempuri.org/IServiceClinique/DeleteClientVResponse")]
        void DeleteClientV(NewOptics.SVC.ClientV obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteClientV", ReplyAction="http://tempuri.org/IServiceClinique/DeleteClientVResponse")]
        System.IAsyncResult BeginDeleteClientV(NewOptics.SVC.ClientV obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteClientV(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMarque", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMarqueResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Marque> GetAllMarque();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMarque", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMarqueResponse")]
        System.IAsyncResult BeginGetAllMarque(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Marque> EndGetAllMarque(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertMarque", ReplyAction="http://tempuri.org/IServiceClinique/InsertMarqueResponse")]
        void InsertMarque(NewOptics.SVC.Marque obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertMarque", ReplyAction="http://tempuri.org/IServiceClinique/InsertMarqueResponse")]
        System.IAsyncResult BeginInsertMarque(NewOptics.SVC.Marque obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertMarque(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateMarque", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMarqueResponse")]
        void UpdateMarque(NewOptics.SVC.Marque obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateMarque", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMarqueResponse")]
        System.IAsyncResult BeginUpdateMarque(NewOptics.SVC.Marque obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateMarque(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeletMarque", ReplyAction="http://tempuri.org/IServiceClinique/DeletMarqueResponse")]
        void DeletMarque(NewOptics.SVC.Marque obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeletMarque", ReplyAction="http://tempuri.org/IServiceClinique/DeletMarqueResponse")]
        System.IAsyncResult BeginDeletMarque(NewOptics.SVC.Marque obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeletMarque(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllResource", ReplyAction="http://tempuri.org/IServiceClinique/GetAllResourceResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Resource> GetAllResource();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllResource", ReplyAction="http://tempuri.org/IServiceClinique/GetAllResourceResponse")]
        System.IAsyncResult BeginGetAllResource(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Resource> EndGetAllResource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertResource", ReplyAction="http://tempuri.org/IServiceClinique/InsertResourceResponse")]
        void InsertResource(NewOptics.SVC.Resource obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertResource", ReplyAction="http://tempuri.org/IServiceClinique/InsertResourceResponse")]
        System.IAsyncResult BeginInsertResource(NewOptics.SVC.Resource obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertResource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateResource", ReplyAction="http://tempuri.org/IServiceClinique/UpdateResourceResponse")]
        void UpdateResource(NewOptics.SVC.Resource obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateResource", ReplyAction="http://tempuri.org/IServiceClinique/UpdateResourceResponse")]
        System.IAsyncResult BeginUpdateResource(NewOptics.SVC.Resource obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateResource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteResource", ReplyAction="http://tempuri.org/IServiceClinique/DeleteResourceResponse")]
        void DeleteResource(NewOptics.SVC.Resource obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteResource", ReplyAction="http://tempuri.org/IServiceClinique/DeleteResourceResponse")]
        System.IAsyncResult BeginDeleteResource(NewOptics.SVC.Resource obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteResource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllAppointment", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAppointmentResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Appointment> GetAllAppointment(System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllAppointment", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAppointmentResponse")]
        System.IAsyncResult BeginGetAllAppointment(System.DateTime d1, System.DateTime d2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Appointment> EndGetAllAppointment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllAppointmentBycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAppointmentBycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Appointment> GetAllAppointmentBycode(string subject, System.DateTime datedebut, System.DateTime datefin);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllAppointmentBycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAppointmentBycodeResponse")]
        System.IAsyncResult BeginGetAllAppointmentBycode(string subject, System.DateTime datedebut, System.DateTime datefin, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Appointment> EndGetAllAppointmentBycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertAppointment", ReplyAction="http://tempuri.org/IServiceClinique/InsertAppointmentResponse")]
        void InsertAppointment(NewOptics.SVC.Appointment obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertAppointment", ReplyAction="http://tempuri.org/IServiceClinique/InsertAppointmentResponse")]
        System.IAsyncResult BeginInsertAppointment(NewOptics.SVC.Appointment obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertAppointment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateAppointment", ReplyAction="http://tempuri.org/IServiceClinique/UpdateAppointmentResponse")]
        void UpdateAppointment(NewOptics.SVC.Appointment obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateAppointment", ReplyAction="http://tempuri.org/IServiceClinique/UpdateAppointmentResponse")]
        System.IAsyncResult BeginUpdateAppointment(NewOptics.SVC.Appointment obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateAppointment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteAppointment", ReplyAction="http://tempuri.org/IServiceClinique/DeleteAppointmentResponse")]
        void DeleteAppointment(NewOptics.SVC.Appointment obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteAppointment", ReplyAction="http://tempuri.org/IServiceClinique/DeleteAppointmentResponse")]
        System.IAsyncResult BeginDeleteAppointment(NewOptics.SVC.Appointment obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAppointment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllStatu", ReplyAction="http://tempuri.org/IServiceClinique/GetAllStatuResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Statu> GetAllStatu();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllStatu", ReplyAction="http://tempuri.org/IServiceClinique/GetAllStatuResponse")]
        System.IAsyncResult BeginGetAllStatu(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Statu> EndGetAllStatu(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertStatu", ReplyAction="http://tempuri.org/IServiceClinique/InsertStatuResponse")]
        void InsertStatu(NewOptics.SVC.Statu obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertStatu", ReplyAction="http://tempuri.org/IServiceClinique/InsertStatuResponse")]
        System.IAsyncResult BeginInsertStatu(NewOptics.SVC.Statu obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertStatu(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateStatu", ReplyAction="http://tempuri.org/IServiceClinique/UpdateStatuResponse")]
        void UpdateStatu(NewOptics.SVC.Statu obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateStatu", ReplyAction="http://tempuri.org/IServiceClinique/UpdateStatuResponse")]
        System.IAsyncResult BeginUpdateStatu(NewOptics.SVC.Statu obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateStatu(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeletStatu", ReplyAction="http://tempuri.org/IServiceClinique/DeletStatuResponse")]
        void DeletStatu(NewOptics.SVC.Statu obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeletStatu", ReplyAction="http://tempuri.org/IServiceClinique/DeletStatuResponse")]
        System.IAsyncResult BeginDeletStatu(NewOptics.SVC.Statu obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeletStatu(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMotifTable", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMotifTableResponse")]
        System.Collections.Generic.List<NewOptics.SVC.MotifTable> GetAllMotifTable();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMotifTable", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMotifTableResponse")]
        System.IAsyncResult BeginGetAllMotifTable(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.MotifTable> EndGetAllMotifTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertMotifTable", ReplyAction="http://tempuri.org/IServiceClinique/InsertMotifTableResponse")]
        void InsertMotifTable(NewOptics.SVC.MotifTable obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertMotifTable", ReplyAction="http://tempuri.org/IServiceClinique/InsertMotifTableResponse")]
        System.IAsyncResult BeginInsertMotifTable(NewOptics.SVC.MotifTable obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertMotifTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateMotifTable", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMotifTableResponse")]
        void UpdateMotifTable(NewOptics.SVC.MotifTable obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateMotifTable", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMotifTableResponse")]
        System.IAsyncResult BeginUpdateMotifTable(NewOptics.SVC.MotifTable obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateMotifTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeletMotifTable", ReplyAction="http://tempuri.org/IServiceClinique/DeletMotifTableResponse")]
        void DeletMotifTable(NewOptics.SVC.MotifTable obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeletMotifTable", ReplyAction="http://tempuri.org/IServiceClinique/DeletMotifTableResponse")]
        System.IAsyncResult BeginDeletMotifTable(NewOptics.SVC.MotifTable obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeletMotifTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllCatSupp", ReplyAction="http://tempuri.org/IServiceClinique/GetAllCatSuppResponse")]
        System.Collections.Generic.List<NewOptics.SVC.CatSupp> GetAllCatSupp();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllCatSupp", ReplyAction="http://tempuri.org/IServiceClinique/GetAllCatSuppResponse")]
        System.IAsyncResult BeginGetAllCatSupp(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.CatSupp> EndGetAllCatSupp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertCatSupp", ReplyAction="http://tempuri.org/IServiceClinique/InsertCatSuppResponse")]
        void InsertCatSupp(NewOptics.SVC.CatSupp obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertCatSupp", ReplyAction="http://tempuri.org/IServiceClinique/InsertCatSuppResponse")]
        System.IAsyncResult BeginInsertCatSupp(NewOptics.SVC.CatSupp obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertCatSupp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateCatSupp", ReplyAction="http://tempuri.org/IServiceClinique/UpdateCatSuppResponse")]
        void UpdateCatSupp(NewOptics.SVC.CatSupp obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateCatSupp", ReplyAction="http://tempuri.org/IServiceClinique/UpdateCatSuppResponse")]
        System.IAsyncResult BeginUpdateCatSupp(NewOptics.SVC.CatSupp obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateCatSupp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteCatSupp", ReplyAction="http://tempuri.org/IServiceClinique/DeleteCatSuppResponse")]
        void DeleteCatSupp(NewOptics.SVC.CatSupp obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteCatSupp", ReplyAction="http://tempuri.org/IServiceClinique/DeleteCatSuppResponse")]
        System.IAsyncResult BeginDeleteCatSupp(NewOptics.SVC.CatSupp obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteCatSupp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllFamilleProduit", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFamilleProduitResponse")]
        System.Collections.Generic.List<NewOptics.SVC.FamilleProduit> GetAllFamilleProduit();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllFamilleProduit", ReplyAction="http://tempuri.org/IServiceClinique/GetAllFamilleProduitResponse")]
        System.IAsyncResult BeginGetAllFamilleProduit(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.FamilleProduit> EndGetAllFamilleProduit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertFamilleProduit", ReplyAction="http://tempuri.org/IServiceClinique/InsertFamilleProduitResponse")]
        void InsertFamilleProduit(NewOptics.SVC.FamilleProduit obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertFamilleProduit", ReplyAction="http://tempuri.org/IServiceClinique/InsertFamilleProduitResponse")]
        System.IAsyncResult BeginInsertFamilleProduit(NewOptics.SVC.FamilleProduit obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertFamilleProduit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateFamilleProduit", ReplyAction="http://tempuri.org/IServiceClinique/UpdateFamilleProduitResponse")]
        void UpdateFamilleProduit(NewOptics.SVC.FamilleProduit obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateFamilleProduit", ReplyAction="http://tempuri.org/IServiceClinique/UpdateFamilleProduitResponse")]
        System.IAsyncResult BeginUpdateFamilleProduit(NewOptics.SVC.FamilleProduit obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateFamilleProduit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeletFamilleProduit", ReplyAction="http://tempuri.org/IServiceClinique/DeletFamilleProduitResponse")]
        void DeletFamilleProduit(NewOptics.SVC.FamilleProduit obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeletFamilleProduit", ReplyAction="http://tempuri.org/IServiceClinique/DeletFamilleProduitResponse")]
        System.IAsyncResult BeginDeletFamilleProduit(NewOptics.SVC.FamilleProduit obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeletFamilleProduit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllProdf", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProdfResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        System.Collections.Generic.List<NewOptics.SVC.Prodf> GetAllProdf();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllProdf", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProdfResponse")]
        System.IAsyncResult BeginGetAllProdf(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Prodf> EndGetAllProdf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllProdfbycodeabarre", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProdfbycodeabarreResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        System.Collections.Generic.List<NewOptics.SVC.Prodf> GetAllProdfbycodeabarre(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllProdfbycodeabarre", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProdfbycodeabarreResponse")]
        System.IAsyncResult BeginGetAllProdfbycodeabarre(string code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Prodf> EndGetAllProdfbycodeabarre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllProdfbycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProdfbycodeResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        System.Collections.Generic.List<NewOptics.SVC.Prodf> GetAllProdfbycode(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllProdfbycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProdfbycodeResponse")]
        System.IAsyncResult BeginGetAllProdfbycode(int code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Prodf> EndGetAllProdfbycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllProdfbyfiche", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProdfbyficheResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Prodf> GetAllProdfbyfiche(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllProdfbyfiche", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProdfbyficheResponse")]
        System.IAsyncResult BeginGetAllProdfbyfiche(int code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Prodf> EndGetAllProdfbyfiche(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertProdf", ReplyAction="http://tempuri.org/IServiceClinique/InsertProdfResponse")]
        bool InsertProdf(NewOptics.SVC.Prodf obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertProdf", ReplyAction="http://tempuri.org/IServiceClinique/InsertProdfResponse")]
        System.IAsyncResult BeginInsertProdf(NewOptics.SVC.Prodf obj, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertProdf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateProdf", ReplyAction="http://tempuri.org/IServiceClinique/UpdateProdfResponse")]
        void UpdateProdf(NewOptics.SVC.Prodf obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateProdf", ReplyAction="http://tempuri.org/IServiceClinique/UpdateProdfResponse")]
        System.IAsyncResult BeginUpdateProdf(NewOptics.SVC.Prodf obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateProdf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteProdf", ReplyAction="http://tempuri.org/IServiceClinique/DeleteProdfResponse")]
        void DeleteProdf(NewOptics.SVC.Prodf obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteProdf", ReplyAction="http://tempuri.org/IServiceClinique/DeleteProdfResponse")]
        System.IAsyncResult BeginDeleteProdf(NewOptics.SVC.Prodf obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteProdf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllCommande", ReplyAction="http://tempuri.org/IServiceClinique/GetAllCommandeResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        System.Collections.Generic.List<NewOptics.SVC.Commande> GetAllCommande();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllCommande", ReplyAction="http://tempuri.org/IServiceClinique/GetAllCommandeResponse")]
        System.IAsyncResult BeginGetAllCommande(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Commande> EndGetAllCommande(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllCommandebydatecommande", ReplyAction="http://tempuri.org/IServiceClinique/GetAllCommandebydatecommandeResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        System.Collections.Generic.List<NewOptics.SVC.Commande> GetAllCommandebydatecommande(System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllCommandebydatecommande", ReplyAction="http://tempuri.org/IServiceClinique/GetAllCommandebydatecommandeResponse")]
        System.IAsyncResult BeginGetAllCommandebydatecommande(System.DateTime d1, System.DateTime d2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Commande> EndGetAllCommandebydatecommande(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllCommandebydatereception", ReplyAction="http://tempuri.org/IServiceClinique/GetAllCommandebydatereceptionResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        System.Collections.Generic.List<NewOptics.SVC.Commande> GetAllCommandebydatereception(System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllCommandebydatereception", ReplyAction="http://tempuri.org/IServiceClinique/GetAllCommandebydatereceptionResponse")]
        System.IAsyncResult BeginGetAllCommandebydatereception(System.DateTime d1, System.DateTime d2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Commande> EndGetAllCommandebydatereception(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertCommande", ReplyAction="http://tempuri.org/IServiceClinique/InsertCommandeResponse")]
        bool InsertCommande(NewOptics.SVC.Commande obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertCommande", ReplyAction="http://tempuri.org/IServiceClinique/InsertCommandeResponse")]
        System.IAsyncResult BeginInsertCommande(NewOptics.SVC.Commande obj, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertCommande(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateCommande", ReplyAction="http://tempuri.org/IServiceClinique/UpdateCommandeResponse")]
        void UpdateCommande(NewOptics.SVC.Commande obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateCommande", ReplyAction="http://tempuri.org/IServiceClinique/UpdateCommandeResponse")]
        System.IAsyncResult BeginUpdateCommande(NewOptics.SVC.Commande obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateCommande(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterFactureVenteRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterFactureVenteRefreshResponse")]
        void AjouterFactureVenteRefresh(string facture);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterFactureVenteRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterFactureVenteRefreshResponse")]
        System.IAsyncResult BeginAjouterFactureVenteRefresh(string facture, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterFactureVenteRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterDicomImageRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDicomImageRefreshResponse")]
        void AjouterDicomImageRefresh(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterDicomImageRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDicomImageRefreshResponse")]
        System.IAsyncResult BeginAjouterDicomImageRefresh(int code, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterDicomImageRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterMontureRefreshClient", ReplyAction="http://tempuri.org/IServiceClinique/AjouterMontureRefreshClientResponse")]
        void AjouterMontureRefreshClient(int cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterMontureRefreshClient", ReplyAction="http://tempuri.org/IServiceClinique/AjouterMontureRefreshClientResponse")]
        System.IAsyncResult BeginAjouterMontureRefreshClient(int cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterMontureRefreshClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterMontureRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterMontureRefreshResponse")]
        void AjouterMontureRefresh(int cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterMontureRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterMontureRefreshResponse")]
        System.IAsyncResult BeginAjouterMontureRefresh(int cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterMontureRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterMontureSupplementRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterMontureSupplementRefreshResponse")]
        void AjouterMontureSupplementRefresh(string cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterMontureSupplementRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterMontureSupplementRefreshResponse")]
        System.IAsyncResult BeginAjouterMontureSupplementRefresh(string cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterMontureSupplementRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterAnamneseRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterAnamneseRefreshResponse")]
        void AjouterAnamneseRefresh(int cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterAnamneseRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterAnamneseRefreshResponse")]
        System.IAsyncResult BeginAjouterAnamneseRefresh(int cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterAnamneseRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterRendezVouRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterRendezVouRefreshResponse")]
        void AjouterRendezVouRefresh(int cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterRendezVouRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterRendezVouRefreshResponse")]
        System.IAsyncResult BeginAjouterRendezVouRefresh(int cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterRendezVouRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterAppointmentRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterAppointmentRefreshResponse")]
        void AjouterAppointmentRefresh(int cle, System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterAppointmentRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterAppointmentRefreshResponse")]
        System.IAsyncResult BeginAjouterAppointmentRefresh(int cle, System.DateTime d1, System.DateTime d2, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterAppointmentRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterResourceRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterResourceRefreshResponse")]
        void AjouterResourceRefresh(int cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterResourceRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterResourceRefreshResponse")]
        System.IAsyncResult BeginAjouterResourceRefresh(int cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterResourceRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterExamensOptométriquesRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterExamensOptométriquesRefreshResponse")]
        void AjouterExamensOptométriquesRefresh(int cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterExamensOptométriquesRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterExamensOptométriquesRefreshResponse")]
        System.IAsyncResult BeginAjouterExamensOptométriquesRefresh(int cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterExamensOptométriquesRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterAdaptationLentilleRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterAdaptationLentilleRefreshResponse")]
        void AjouterAdaptationLentilleRefresh(int cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterAdaptationLentilleRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterAdaptationLentilleRefreshResponse")]
        System.IAsyncResult BeginAjouterAdaptationLentilleRefresh(int cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterAdaptationLentilleRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterPaintRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterPaintRefreshResponse")]
        void AjouterPaintRefresh(int cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterPaintRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterPaintRefreshResponse")]
        System.IAsyncResult BeginAjouterPaintRefresh(int cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterPaintRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterExamenBinoculaireRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterExamenBinoculaireRefreshResponse")]
        void AjouterExamenBinoculaireRefresh(int cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterExamenBinoculaireRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterExamenBinoculaireRefreshResponse")]
        System.IAsyncResult BeginAjouterExamenBinoculaireRefresh(int cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterExamenBinoculaireRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterLentilleClientRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterLentilleClientRefreshResponse")]
        void AjouterLentilleClientRefresh(int cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterLentilleClientRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterLentilleClientRefreshResponse")]
        System.IAsyncResult BeginAjouterLentilleClientRefresh(int cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterLentilleClientRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterLentilleClientRefreshList", ReplyAction="http://tempuri.org/IServiceClinique/AjouterLentilleClientRefreshListResponse")]
        void AjouterLentilleClientRefreshList(int cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterLentilleClientRefreshList", ReplyAction="http://tempuri.org/IServiceClinique/AjouterLentilleClientRefreshListResponse")]
        System.IAsyncResult BeginAjouterLentilleClientRefreshList(int cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterLentilleClientRefreshList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterProdflistRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterProdflistRefreshResponse")]
        void AjouterProdflistRefresh(System.Collections.Generic.List<int> listproduit);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterProdflistRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterProdflistRefreshResponse")]
        System.IAsyncResult BeginAjouterProdflistRefresh(System.Collections.Generic.List<int> listproduit, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterProdflistRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterTcabRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterTcabRefreshResponse")]
        void AjouterTcabRefresh(string cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterTcabRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterTcabRefreshResponse")]
        System.IAsyncResult BeginAjouterTcabRefresh(string cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterTcabRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterVerreRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterVerreRefreshResponse")]
        void AjouterVerreRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterVerreRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterVerreRefreshResponse")]
        System.IAsyncResult BeginAjouterVerreRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterVerreRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterIncompatibiliteRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterIncompatibiliteRefreshResponse")]
        void AjouterIncompatibiliteRefresh(int cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterIncompatibiliteRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterIncompatibiliteRefreshResponse")]
        System.IAsyncResult BeginAjouterIncompatibiliteRefresh(int cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterIncompatibiliteRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterVerreAssocieRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterVerreAssocieRefreshResponse")]
        void AjouterVerreAssocieRefresh(int cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterVerreAssocieRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterVerreAssocieRefreshResponse")]
        System.IAsyncResult BeginAjouterVerreAssocieRefresh(int cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterVerreAssocieRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterSupplementRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterSupplementRefreshResponse")]
        void AjouterSupplementRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterSupplementRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterSupplementRefreshResponse")]
        System.IAsyncResult BeginAjouterSupplementRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterSupplementRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterLentilleRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterLentilleRefreshResponse")]
        void AjouterLentilleRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterLentilleRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterLentilleRefreshResponse")]
        System.IAsyncResult BeginAjouterLentilleRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterLentilleRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterTarifVerreRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterTarifVerreRefreshResponse")]
        void AjouterTarifVerreRefresh(string cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterTarifVerreRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterTarifVerreRefreshResponse")]
        System.IAsyncResult BeginAjouterTarifVerreRefresh(string cle, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterTarifVerreRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterFactureRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterFactureRefreshResponse")]
        void AjouterFactureRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterFactureRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterFactureRefreshResponse")]
        System.IAsyncResult BeginAjouterFactureRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterFactureRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterSoldeF1Refresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterSoldeF1RefreshResponse")]
        void AjouterSoldeF1Refresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterSoldeF1Refresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterSoldeF1RefreshResponse")]
        System.IAsyncResult BeginAjouterSoldeF1Refresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterSoldeF1Refresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterSoldeF1MultipleRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterSoldeF1MultipleRefreshResponse")]
        void AjouterSoldeF1MultipleRefresh(string nfact, int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterSoldeF1MultipleRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterSoldeF1MultipleRefreshResponse")]
        System.IAsyncResult BeginAjouterSoldeF1MultipleRefresh(string nfact, int code, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterSoldeF1MultipleRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterListeF1Refresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterListeF1RefreshResponse")]
        void AjouterListeF1Refresh(int i);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterListeF1Refresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterListeF1RefreshResponse")]
        System.IAsyncResult BeginAjouterListeF1Refresh(int i, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterListeF1Refresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterListeRecoufRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterListeRecoufRefreshResponse")]
        void AjouterListeRecoufRefresh(int i);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterListeRecoufRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterListeRecoufRefreshResponse")]
        System.IAsyncResult BeginAjouterListeRecoufRefresh(int i, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterListeRecoufRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterDepenseRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDepenseRefreshResponse")]
        void AjouterDepenseRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterDepenseRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDepenseRefreshResponse")]
        System.IAsyncResult BeginAjouterDepenseRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterDepenseRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterClientVRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterClientVRefreshResponse")]
        void AjouterClientVRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterClientVRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterClientVRefreshResponse")]
        System.IAsyncResult BeginAjouterClientVRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterClientVRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterTransactionACHATRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterTransactionACHATRefreshResponse")]
        void AjouterTransactionACHATRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterTransactionACHATRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterTransactionACHATRefreshResponse")]
        System.IAsyncResult BeginAjouterTransactionACHATRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterTransactionACHATRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterTransactionPaiementRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterTransactionPaiementRefreshResponse")]
        void AjouterTransactionPaiementRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterTransactionPaiementRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterTransactionPaiementRefreshResponse")]
        System.IAsyncResult BeginAjouterTransactionPaiementRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterTransactionPaiementRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterAmsRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterAmsRefreshResponse")]
        void AjouterAmsRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterAmsRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterAmsRefreshResponse")]
        System.IAsyncResult BeginAjouterAmsRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterAmsRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterMotifTableRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterMotifTableRefreshResponse")]
        void AjouterMotifTableRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterMotifTableRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterMotifTableRefreshResponse")]
        System.IAsyncResult BeginAjouterMotifTableRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterMotifTableRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterStatuRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterStatuRefreshResponse")]
        void AjouterStatuRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterStatuRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterStatuRefreshResponse")]
        System.IAsyncResult BeginAjouterStatuRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterStatuRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterFamilleProduitRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterFamilleProduitRefreshResponse")]
        void AjouterFamilleProduitRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterFamilleProduitRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterFamilleProduitRefreshResponse")]
        System.IAsyncResult BeginAjouterFamilleProduitRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterFamilleProduitRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterCatSuppRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterCatSuppRefreshResponse")]
        void AjouterCatSuppRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterCatSuppRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterCatSuppRefreshResponse")]
        System.IAsyncResult BeginAjouterCatSuppRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterCatSuppRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterMarqueRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterMarqueRefreshResponse")]
        void AjouterMarqueRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterMarqueRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterMarqueRefreshResponse")]
        System.IAsyncResult BeginAjouterMarqueRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterMarqueRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterProduitStockRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterProduitStockRefreshResponse")]
        void AjouterProduitStockRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterProduitStockRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterProduitStockRefreshResponse")]
        System.IAsyncResult BeginAjouterProduitStockRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterProduitStockRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterProdfReceptRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterProdfReceptRefreshResponse")]
        void AjouterProdfReceptRefresh(string Fournisseur, string nfact, int codef);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterProdfReceptRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterProdfReceptRefreshResponse")]
        System.IAsyncResult BeginAjouterProdfReceptRefresh(string Fournisseur, string nfact, int codef, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterProdfReceptRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterRecoufRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterRecoufRefreshResponse")]
        void AjouterRecoufRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterRecoufRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterRecoufRefreshResponse")]
        System.IAsyncResult BeginAjouterRecoufRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterRecoufRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterCommandeRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterCommandeRefreshResponse")]
        void AjouterCommandeRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterCommandeRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterCommandeRefreshResponse")]
        System.IAsyncResult BeginAjouterCommandeRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterCommandeRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterProdfRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterProdfRefreshResponse")]
        void AjouterProdfRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterProdfRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterProdfRefreshResponse")]
        System.IAsyncResult BeginAjouterProdfRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterProdfRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterFactureAchatSansProdfRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterFactureAchatSansProdfRefreshResponse")]
        void AjouterFactureAchatSansProdfRefresh(string vv);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterFactureAchatSansProdfRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterFactureAchatSansProdfRefreshResponse")]
        System.IAsyncResult BeginAjouterFactureAchatSansProdfRefresh(string vv, System.AsyncCallback callback, object asyncState);
        
        void EndAjouterFactureAchatSansProdfRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/TestConnect", ReplyAction="http://tempuri.org/IServiceClinique/TestConnectResponse")]
        void TestConnect(string clientTest);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/TestConnect", ReplyAction="http://tempuri.org/IServiceClinique/TestConnectResponse")]
        System.IAsyncResult BeginTestConnect(string clientTest, System.AsyncCallback callback, object asyncState);
        
        void EndTestConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UploadDocument", ReplyAction="http://tempuri.org/IServiceClinique/UploadDocumentResponse")]
        void UploadDocument(string fPath, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UploadDocument", ReplyAction="http://tempuri.org/IServiceClinique/UploadDocumentResponse")]
        System.IAsyncResult BeginUploadDocument(string fPath, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndUploadDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterFournRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterFournRefreshResponse")]
        void AjouterFournRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterFournRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterFournRefreshResponse")]
        System.IAsyncResult BeginAjouterFournRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterFournRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DownloadDocument", ReplyAction="http://tempuri.org/IServiceClinique/DownloadDocumentResponse")]
        byte[] DownloadDocument(string fPath);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DownloadDocument", ReplyAction="http://tempuri.org/IServiceClinique/DownloadDocumentResponse")]
        System.IAsyncResult BeginDownloadDocument(string fPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndDownloadDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DownloadDocumentIsHere", ReplyAction="http://tempuri.org/IServiceClinique/DownloadDocumentIsHereResponse")]
        bool DownloadDocumentIsHere(string fPath);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DownloadDocumentIsHere", ReplyAction="http://tempuri.org/IServiceClinique/DownloadDocumentIsHereResponse")]
        System.IAsyncResult BeginDownloadDocumentIsHere(string fPath, System.AsyncCallback callback, object asyncState);
        
        bool EndDownloadDocumentIsHere(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMembershipOptics", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMembershipOpticsResponse")]
        System.Collections.Generic.List<NewOptics.SVC.MembershipOptic> GetAllMembershipOptics();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMembershipOptics", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMembershipOpticsResponse")]
        System.IAsyncResult BeginGetAllMembershipOptics(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.MembershipOptic> EndGetAllMembershipOptics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertMembershipOptics", ReplyAction="http://tempuri.org/IServiceClinique/InsertMembershipOpticsResponse")]
        void InsertMembershipOptics(NewOptics.SVC.MembershipOptic obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertMembershipOptics", ReplyAction="http://tempuri.org/IServiceClinique/InsertMembershipOpticsResponse")]
        System.IAsyncResult BeginInsertMembershipOptics(NewOptics.SVC.MembershipOptic obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertMembershipOptics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateMembershipOptics", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMembershipOpticsResponse")]
        void UpdateMembershipOptics(NewOptics.SVC.MembershipOptic obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateMembershipOptics", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMembershipOpticsResponse")]
        System.IAsyncResult BeginUpdateMembershipOptics(NewOptics.SVC.MembershipOptic obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateMembershipOptics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteMembershipOptics", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMembershipOpticsResponse")]
        void DeleteMembershipOptics(NewOptics.SVC.MembershipOptic obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteMembershipOptics", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMembershipOpticsResponse")]
        System.IAsyncResult BeginDeleteMembershipOptics(NewOptics.SVC.MembershipOptic obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteMembershipOptics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDicomFichier", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDicomFichierResponse")]
        System.Collections.Generic.List<NewOptics.SVC.DicomFichier> GetAllDicomFichier(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDicomFichier", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDicomFichierResponse")]
        System.IAsyncResult BeginGetAllDicomFichier(int code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.DicomFichier> EndGetAllDicomFichier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/InsertDicomFichier")]
        void InsertDicomFichier(NewOptics.SVC.DicomFichier obj);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertDicomFichier")]
        System.IAsyncResult BeginInsertDicomFichier(NewOptics.SVC.DicomFichier obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertDicomFichier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateDicomFichier", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDicomFichierResponse")]
        void UpdateDicomFichier(NewOptics.SVC.DicomFichier obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateDicomFichier", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDicomFichierResponse")]
        System.IAsyncResult BeginUpdateDicomFichier(NewOptics.SVC.DicomFichier obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDicomFichier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteDicomFichier", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDicomFichierResponse")]
        void DeleteDicomFichier(NewOptics.SVC.DicomFichier obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteDicomFichier", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDicomFichierResponse")]
        System.IAsyncResult BeginDeleteDicomFichier(NewOptics.SVC.DicomFichier obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDicomFichier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllParamétre", ReplyAction="http://tempuri.org/IServiceClinique/GetAllParamétreResponse")]
        NewOptics.SVC.Param GetAllParamétre();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllParamétre", ReplyAction="http://tempuri.org/IServiceClinique/GetAllParamétreResponse")]
        System.IAsyncResult BeginGetAllParamétre(System.AsyncCallback callback, object asyncState);
        
        NewOptics.SVC.Param EndGetAllParamétre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateParamétre", ReplyAction="http://tempuri.org/IServiceClinique/UpdateParamétreResponse")]
        void UpdateParamétre(NewOptics.SVC.Param obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateParamétre", ReplyAction="http://tempuri.org/IServiceClinique/UpdateParamétreResponse")]
        System.IAsyncResult BeginUpdateParamétre(NewOptics.SVC.Param obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateParamétre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllProduit", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProduitResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Produit> GetAllProduit();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllProduit", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProduitResponse")]
        System.IAsyncResult BeginGetAllProduit(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Produit> EndGetAllProduit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllProduitbyid", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProduitbyidResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Produit> GetAllProduitbyid(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllProduitbyid", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProduitbyidResponse")]
        System.IAsyncResult BeginGetAllProduitbyid(int code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Produit> EndGetAllProduitbyid(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllProduitbycab", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProduitbycabResponse")]
        NewOptics.SVC.Produit GetAllProduitbycab(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllProduitbycab", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProduitbycabResponse")]
        System.IAsyncResult BeginGetAllProduitbycab(string code, System.AsyncCallback callback, object asyncState);
        
        NewOptics.SVC.Produit EndGetAllProduitbycab(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertProduit", ReplyAction="http://tempuri.org/IServiceClinique/InsertProduitResponse")]
        void InsertProduit(NewOptics.SVC.Produit obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertProduit", ReplyAction="http://tempuri.org/IServiceClinique/InsertProduitResponse")]
        System.IAsyncResult BeginInsertProduit(NewOptics.SVC.Produit obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertProduit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateProduit", ReplyAction="http://tempuri.org/IServiceClinique/UpdateProduitResponse")]
        void UpdateProduit(NewOptics.SVC.Produit obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateProduit", ReplyAction="http://tempuri.org/IServiceClinique/UpdateProduitResponse")]
        System.IAsyncResult BeginUpdateProduit(NewOptics.SVC.Produit obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateProduit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteProduit", ReplyAction="http://tempuri.org/IServiceClinique/DeleteProduitResponse")]
        void DeleteProduit(NewOptics.SVC.Produit obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteProduit", ReplyAction="http://tempuri.org/IServiceClinique/DeleteProduitResponse")]
        System.IAsyncResult BeginDeleteProduit(NewOptics.SVC.Produit obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteProduit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllAdaptationLentille", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAdaptationLentilleResponse")]
        System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille> GetAllAdaptationLentille();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllAdaptationLentille", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAdaptationLentilleResponse")]
        System.IAsyncResult BeginGetAllAdaptationLentille(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille> EndGetAllAdaptationLentille(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllAdaptationLentillebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAdaptationLentillebycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille> GetAllAdaptationLentillebycode(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllAdaptationLentillebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAdaptationLentillebycodeResponse")]
        System.IAsyncResult BeginGetAllAdaptationLentillebycode(int code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille> EndGetAllAdaptationLentillebycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertAdaptationLentille", ReplyAction="http://tempuri.org/IServiceClinique/InsertAdaptationLentilleResponse")]
        void InsertAdaptationLentille(NewOptics.SVC.AdaptationLentille obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertAdaptationLentille", ReplyAction="http://tempuri.org/IServiceClinique/InsertAdaptationLentilleResponse")]
        System.IAsyncResult BeginInsertAdaptationLentille(NewOptics.SVC.AdaptationLentille obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertAdaptationLentille(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateAdaptationLentille", ReplyAction="http://tempuri.org/IServiceClinique/UpdateAdaptationLentilleResponse")]
        void UpdateAdaptationLentille(NewOptics.SVC.AdaptationLentille obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateAdaptationLentille", ReplyAction="http://tempuri.org/IServiceClinique/UpdateAdaptationLentilleResponse")]
        System.IAsyncResult BeginUpdateAdaptationLentille(NewOptics.SVC.AdaptationLentille obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateAdaptationLentille(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteAdaptationLentille", ReplyAction="http://tempuri.org/IServiceClinique/DeleteAdaptationLentilleResponse")]
        void DeleteAdaptationLentille(NewOptics.SVC.AdaptationLentille obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteAdaptationLentille", ReplyAction="http://tempuri.org/IServiceClinique/DeleteAdaptationLentilleResponse")]
        System.IAsyncResult BeginDeleteAdaptationLentille(NewOptics.SVC.AdaptationLentille obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAdaptationLentille(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllRendezVoubycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRendezVoubycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.RendezVou> GetAllRendezVoubycode(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllRendezVoubycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRendezVoubycodeResponse")]
        System.IAsyncResult BeginGetAllRendezVoubycode(int code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.RendezVou> EndGetAllRendezVoubycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllRendezVou", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRendezVouResponse")]
        System.Collections.Generic.List<NewOptics.SVC.RendezVou> GetAllRendezVou(System.DateTime date1, System.DateTime date2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllRendezVou", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRendezVouResponse")]
        System.IAsyncResult BeginGetAllRendezVou(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.RendezVou> EndGetAllRendezVou(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertRendezVou", ReplyAction="http://tempuri.org/IServiceClinique/InsertRendezVouResponse")]
        void InsertRendezVou(NewOptics.SVC.RendezVou obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertRendezVou", ReplyAction="http://tempuri.org/IServiceClinique/InsertRendezVouResponse")]
        System.IAsyncResult BeginInsertRendezVou(NewOptics.SVC.RendezVou obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertRendezVou(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateRendezVou", ReplyAction="http://tempuri.org/IServiceClinique/UpdateRendezVouResponse")]
        void UpdateRendezVou(NewOptics.SVC.RendezVou obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateRendezVou", ReplyAction="http://tempuri.org/IServiceClinique/UpdateRendezVouResponse")]
        System.IAsyncResult BeginUpdateRendezVou(NewOptics.SVC.RendezVou obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateRendezVou(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteRendezVou", ReplyAction="http://tempuri.org/IServiceClinique/DeleteRendezVouResponse")]
        void DeleteRendezVou(NewOptics.SVC.RendezVou obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteRendezVou", ReplyAction="http://tempuri.org/IServiceClinique/DeleteRendezVouResponse")]
        System.IAsyncResult BeginDeleteRendezVou(NewOptics.SVC.RendezVou obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteRendezVou(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllPaint", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPaintResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Paint> GetAllPaint();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllPaint", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPaintResponse")]
        System.IAsyncResult BeginGetAllPaint(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Paint> EndGetAllPaint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllPaintbycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPaintbycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Paint> GetAllPaintbycode(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllPaintbycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPaintbycodeResponse")]
        System.IAsyncResult BeginGetAllPaintbycode(int code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Paint> EndGetAllPaintbycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertPaint", ReplyAction="http://tempuri.org/IServiceClinique/InsertPaintResponse")]
        void InsertPaint(NewOptics.SVC.Paint obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertPaint", ReplyAction="http://tempuri.org/IServiceClinique/InsertPaintResponse")]
        System.IAsyncResult BeginInsertPaint(NewOptics.SVC.Paint obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertPaint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdatePaint", ReplyAction="http://tempuri.org/IServiceClinique/UpdatePaintResponse")]
        void UpdatePaint(NewOptics.SVC.Paint obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdatePaint", ReplyAction="http://tempuri.org/IServiceClinique/UpdatePaintResponse")]
        System.IAsyncResult BeginUpdatePaint(NewOptics.SVC.Paint obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePaint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeletePaint", ReplyAction="http://tempuri.org/IServiceClinique/DeletePaintResponse")]
        void DeletePaint(NewOptics.SVC.Paint obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeletePaint", ReplyAction="http://tempuri.org/IServiceClinique/DeletePaintResponse")]
        System.IAsyncResult BeginDeletePaint(NewOptics.SVC.Paint obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePaint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllAnamnese", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAnamneseResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Anamnese> GetAllAnamnese();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllAnamnese", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAnamneseResponse")]
        System.IAsyncResult BeginGetAllAnamnese(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Anamnese> EndGetAllAnamnese(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllAnamnesebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAnamnesebycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Anamnese> GetAllAnamnesebycode(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllAnamnesebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAnamnesebycodeResponse")]
        System.IAsyncResult BeginGetAllAnamnesebycode(int code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Anamnese> EndGetAllAnamnesebycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertAnamnese", ReplyAction="http://tempuri.org/IServiceClinique/InsertAnamneseResponse")]
        void InsertAnamnese(NewOptics.SVC.Anamnese obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertAnamnese", ReplyAction="http://tempuri.org/IServiceClinique/InsertAnamneseResponse")]
        System.IAsyncResult BeginInsertAnamnese(NewOptics.SVC.Anamnese obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertAnamnese(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateAnamnese", ReplyAction="http://tempuri.org/IServiceClinique/UpdateAnamneseResponse")]
        void UpdateAnamnese(NewOptics.SVC.Anamnese obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateAnamnese", ReplyAction="http://tempuri.org/IServiceClinique/UpdateAnamneseResponse")]
        System.IAsyncResult BeginUpdateAnamnese(NewOptics.SVC.Anamnese obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateAnamnese(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteAnamnese", ReplyAction="http://tempuri.org/IServiceClinique/DeleteAnamneseResponse")]
        void DeleteAnamnese(NewOptics.SVC.Anamnese obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteAnamnese", ReplyAction="http://tempuri.org/IServiceClinique/DeleteAnamneseResponse")]
        System.IAsyncResult BeginDeleteAnamnese(NewOptics.SVC.Anamnese obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAnamnese(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllExamenBinoculaire", ReplyAction="http://tempuri.org/IServiceClinique/GetAllExamenBinoculaireResponse")]
        System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire> GetAllExamenBinoculaire();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllExamenBinoculaire", ReplyAction="http://tempuri.org/IServiceClinique/GetAllExamenBinoculaireResponse")]
        System.IAsyncResult BeginGetAllExamenBinoculaire(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire> EndGetAllExamenBinoculaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllExamenBinoculairebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllExamenBinoculairebycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire> GetAllExamenBinoculairebycode(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllExamenBinoculairebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllExamenBinoculairebycodeResponse")]
        System.IAsyncResult BeginGetAllExamenBinoculairebycode(int code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire> EndGetAllExamenBinoculairebycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertExamenBinoculaire", ReplyAction="http://tempuri.org/IServiceClinique/InsertExamenBinoculaireResponse")]
        void InsertExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertExamenBinoculaire", ReplyAction="http://tempuri.org/IServiceClinique/InsertExamenBinoculaireResponse")]
        System.IAsyncResult BeginInsertExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertExamenBinoculaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateExamenBinoculaire", ReplyAction="http://tempuri.org/IServiceClinique/UpdateExamenBinoculaireResponse")]
        void UpdateExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateExamenBinoculaire", ReplyAction="http://tempuri.org/IServiceClinique/UpdateExamenBinoculaireResponse")]
        System.IAsyncResult BeginUpdateExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateExamenBinoculaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteExamenBinoculaire", ReplyAction="http://tempuri.org/IServiceClinique/DeleteExamenBinoculaireResponse")]
        void DeleteExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteExamenBinoculaire", ReplyAction="http://tempuri.org/IServiceClinique/DeleteExamenBinoculaireResponse")]
        System.IAsyncResult BeginDeleteExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteExamenBinoculaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllExamensOptométriques", ReplyAction="http://tempuri.org/IServiceClinique/GetAllExamensOptométriquesResponse")]
        System.Collections.Generic.List<NewOptics.SVC.examenopto> GetAllExamensOptométriques();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllExamensOptométriques", ReplyAction="http://tempuri.org/IServiceClinique/GetAllExamensOptométriquesResponse")]
        System.IAsyncResult BeginGetAllExamensOptométriques(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.examenopto> EndGetAllExamensOptométriques(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllExamensOptométriquesbycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllExamensOptométriquesbycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.examenopto> GetAllExamensOptométriquesbycode(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllExamensOptométriquesbycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllExamensOptométriquesbycodeResponse")]
        System.IAsyncResult BeginGetAllExamensOptométriquesbycode(int code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.examenopto> EndGetAllExamensOptométriquesbycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertExamensOptométriques", ReplyAction="http://tempuri.org/IServiceClinique/InsertExamensOptométriquesResponse")]
        void InsertExamensOptométriques(NewOptics.SVC.examenopto obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertExamensOptométriques", ReplyAction="http://tempuri.org/IServiceClinique/InsertExamensOptométriquesResponse")]
        System.IAsyncResult BeginInsertExamensOptométriques(NewOptics.SVC.examenopto obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertExamensOptométriques(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateExamensOptométriques", ReplyAction="http://tempuri.org/IServiceClinique/UpdateExamensOptométriquesResponse")]
        void UpdateExamensOptométriques(NewOptics.SVC.examenopto obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateExamensOptométriques", ReplyAction="http://tempuri.org/IServiceClinique/UpdateExamensOptométriquesResponse")]
        System.IAsyncResult BeginUpdateExamensOptométriques(NewOptics.SVC.examenopto obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateExamensOptométriques(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteExamensOptométriques", ReplyAction="http://tempuri.org/IServiceClinique/DeleteExamensOptométriquesResponse")]
        void DeleteExamensOptométriques(NewOptics.SVC.examenopto obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteExamensOptométriques", ReplyAction="http://tempuri.org/IServiceClinique/DeleteExamensOptométriquesResponse")]
        System.IAsyncResult BeginDeleteExamensOptométriques(NewOptics.SVC.examenopto obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteExamensOptométriques(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMontureSupplement", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMontureSupplementResponse")]
        System.Collections.Generic.List<NewOptics.SVC.MontureSupplement> GetAllMontureSupplement();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMontureSupplement", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMontureSupplementResponse")]
        System.IAsyncResult BeginGetAllMontureSupplement(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.MontureSupplement> EndGetAllMontureSupplement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMontureSupplementbycle", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMontureSupplementbycleResponse")]
        System.Collections.Generic.List<NewOptics.SVC.MontureSupplement> GetAllMontureSupplementbycle(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMontureSupplementbycle", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMontureSupplementbycleResponse")]
        System.IAsyncResult BeginGetAllMontureSupplementbycle(string code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.MontureSupplement> EndGetAllMontureSupplementbycle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertMontureSupplement", ReplyAction="http://tempuri.org/IServiceClinique/InsertMontureSupplementResponse")]
        void InsertMontureSupplement(NewOptics.SVC.MontureSupplement obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertMontureSupplement", ReplyAction="http://tempuri.org/IServiceClinique/InsertMontureSupplementResponse")]
        System.IAsyncResult BeginInsertMontureSupplement(NewOptics.SVC.MontureSupplement obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertMontureSupplement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateMontureSupplement", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMontureSupplementResponse")]
        void UpdateMontureSupplement(NewOptics.SVC.MontureSupplement obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateMontureSupplement", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMontureSupplementResponse")]
        System.IAsyncResult BeginUpdateMontureSupplement(NewOptics.SVC.MontureSupplement obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateMontureSupplement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteMontureSupplement", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMontureSupplementResponse")]
        void DeleteMontureSupplement(NewOptics.SVC.MontureSupplement obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteMontureSupplement", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMontureSupplementResponse")]
        System.IAsyncResult BeginDeleteMontureSupplement(NewOptics.SVC.MontureSupplement obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteMontureSupplement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMonture", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMontureResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Monture> GetAllMonture();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMonture", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMontureResponse")]
        System.IAsyncResult BeginGetAllMonture(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Monture> EndGetAllMonture(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMontureDate", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMontureDateResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Monture> GetAllMontureDate(System.DateTime date1, System.DateTime date2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMontureDate", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMontureDateResponse")]
        System.IAsyncResult BeginGetAllMontureDate(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Monture> EndGetAllMontureDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMontureDateLivraison", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMontureDateLivraisonResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Monture> GetAllMontureDateLivraison(System.DateTime date1, System.DateTime date2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMontureDateLivraison", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMontureDateLivraisonResponse")]
        System.IAsyncResult BeginGetAllMontureDateLivraison(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Monture> EndGetAllMontureDateLivraison(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMonturebyDossier", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMonturebyDossierResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Monture> GetAllMonturebyDossier(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMonturebyDossier", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMonturebyDossierResponse")]
        System.IAsyncResult BeginGetAllMonturebyDossier(string code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Monture> EndGetAllMonturebyDossier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMonturebycodebar", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMonturebycodebarResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Monture> GetAllMonturebycodebar(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMonturebycodebar", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMonturebycodebarResponse")]
        System.IAsyncResult BeginGetAllMonturebycodebar(string code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Monture> EndGetAllMonturebycodebar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMonturebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMonturebycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Monture> GetAllMonturebycode(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMonturebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMonturebycodeResponse")]
        System.IAsyncResult BeginGetAllMonturebycode(int code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Monture> EndGetAllMonturebycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertMonture", ReplyAction="http://tempuri.org/IServiceClinique/InsertMontureResponse")]
        void InsertMonture(NewOptics.SVC.Monture obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertMonture", ReplyAction="http://tempuri.org/IServiceClinique/InsertMontureResponse")]
        System.IAsyncResult BeginInsertMonture(NewOptics.SVC.Monture obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertMonture(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateMonture", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMontureResponse")]
        void UpdateMonture(NewOptics.SVC.Monture obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateMonture", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMontureResponse")]
        System.IAsyncResult BeginUpdateMonture(NewOptics.SVC.Monture obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateMonture(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteMonture", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMontureResponse")]
        void DeleteMonture(NewOptics.SVC.Monture obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteMonture", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMontureResponse")]
        System.IAsyncResult BeginDeleteMonture(NewOptics.SVC.Monture obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteMonture(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllLentilleClient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleClientResponse")]
        System.Collections.Generic.List<NewOptics.SVC.LentilleClient> GetAllLentilleClient();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllLentilleClient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleClientResponse")]
        System.IAsyncResult BeginGetAllLentilleClient(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.LentilleClient> EndGetAllLentilleClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllLentilleClientDate", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleClientDateResponse")]
        System.Collections.Generic.List<NewOptics.SVC.LentilleClient> GetAllLentilleClientDate(System.DateTime date1, System.DateTime date2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllLentilleClientDate", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleClientDateResponse")]
        System.IAsyncResult BeginGetAllLentilleClientDate(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.LentilleClient> EndGetAllLentilleClientDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllLentilleClientDateLivraison", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleClientDateLivraisonResponse")]
        System.Collections.Generic.List<NewOptics.SVC.LentilleClient> GetAllLentilleClientDateLivraison(System.DateTime date1, System.DateTime date2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllLentilleClientDateLivraison", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleClientDateLivraisonResponse")]
        System.IAsyncResult BeginGetAllLentilleClientDateLivraison(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.LentilleClient> EndGetAllLentilleClientDateLivraison(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllLentilleClientbycodebar", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleClientbycodebarResponse")]
        System.Collections.Generic.List<NewOptics.SVC.LentilleClient> GetAllLentilleClientbycodebar(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllLentilleClientbycodebar", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleClientbycodebarResponse")]
        System.IAsyncResult BeginGetAllLentilleClientbycodebar(string code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.LentilleClient> EndGetAllLentilleClientbycodebar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllLentilleClientbyDossier", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleClientbyDossierResponse")]
        System.Collections.Generic.List<NewOptics.SVC.LentilleClient> GetAllLentilleClientbyDossier(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllLentilleClientbyDossier", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleClientbyDossierResponse")]
        System.IAsyncResult BeginGetAllLentilleClientbyDossier(string code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.LentilleClient> EndGetAllLentilleClientbyDossier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllLentilleClientbycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleClientbycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.LentilleClient> GetAllLentilleClientbycode(int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllLentilleClientbycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleClientbycodeResponse")]
        System.IAsyncResult BeginGetAllLentilleClientbycode(int code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.LentilleClient> EndGetAllLentilleClientbycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertLentilleClient", ReplyAction="http://tempuri.org/IServiceClinique/InsertLentilleClientResponse")]
        void InsertLentilleClient(NewOptics.SVC.LentilleClient obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertLentilleClient", ReplyAction="http://tempuri.org/IServiceClinique/InsertLentilleClientResponse")]
        System.IAsyncResult BeginInsertLentilleClient(NewOptics.SVC.LentilleClient obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertLentilleClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateLentilleClient", ReplyAction="http://tempuri.org/IServiceClinique/UpdateLentilleClientResponse")]
        void UpdateLentilleClient(NewOptics.SVC.LentilleClient obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateLentilleClient", ReplyAction="http://tempuri.org/IServiceClinique/UpdateLentilleClientResponse")]
        System.IAsyncResult BeginUpdateLentilleClient(NewOptics.SVC.LentilleClient obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateLentilleClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteLentilleClient", ReplyAction="http://tempuri.org/IServiceClinique/DeleteLentilleClientResponse")]
        void DeleteLentilleClient(NewOptics.SVC.LentilleClient obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteLentilleClient", ReplyAction="http://tempuri.org/IServiceClinique/DeleteLentilleClientResponse")]
        System.IAsyncResult BeginDeleteLentilleClient(NewOptics.SVC.LentilleClient obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteLentilleClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllLentille", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Lentille> GetAllLentille();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllLentille", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentilleResponse")]
        System.IAsyncResult BeginGetAllLentille(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Lentille> EndGetAllLentille(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllLentillebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentillebycodeResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Lentille> GetAllLentillebycode(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllLentillebycode", ReplyAction="http://tempuri.org/IServiceClinique/GetAllLentillebycodeResponse")]
        System.IAsyncResult BeginGetAllLentillebycode(string code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Lentille> EndGetAllLentillebycode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertLentille", ReplyAction="http://tempuri.org/IServiceClinique/InsertLentilleResponse")]
        void InsertLentille(NewOptics.SVC.Lentille obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertLentille", ReplyAction="http://tempuri.org/IServiceClinique/InsertLentilleResponse")]
        System.IAsyncResult BeginInsertLentille(NewOptics.SVC.Lentille obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertLentille(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateLentille", ReplyAction="http://tempuri.org/IServiceClinique/UpdateLentilleResponse")]
        void UpdateLentille(NewOptics.SVC.Lentille obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateLentille", ReplyAction="http://tempuri.org/IServiceClinique/UpdateLentilleResponse")]
        System.IAsyncResult BeginUpdateLentille(NewOptics.SVC.Lentille obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateLentille(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteLentille", ReplyAction="http://tempuri.org/IServiceClinique/DeleteLentilleResponse")]
        void DeleteLentille(NewOptics.SVC.Lentille obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteLentille", ReplyAction="http://tempuri.org/IServiceClinique/DeleteLentilleResponse")]
        System.IAsyncResult BeginDeleteLentille(NewOptics.SVC.Lentille obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteLentille(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllIncompatibilite", ReplyAction="http://tempuri.org/IServiceClinique/GetAllIncompatibiliteResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Incompatibilite> GetAllIncompatibilite();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllIncompatibilite", ReplyAction="http://tempuri.org/IServiceClinique/GetAllIncompatibiliteResponse")]
        System.IAsyncResult BeginGetAllIncompatibilite(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Incompatibilite> EndGetAllIncompatibilite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllIncompatibilitebySupplement", ReplyAction="http://tempuri.org/IServiceClinique/GetAllIncompatibilitebySupplementResponse")]
        System.Collections.Generic.List<NewOptics.SVC.Incompatibilite> GetAllIncompatibilitebySupplement(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllIncompatibilitebySupplement", ReplyAction="http://tempuri.org/IServiceClinique/GetAllIncompatibilitebySupplementResponse")]
        System.IAsyncResult BeginGetAllIncompatibilitebySupplement(string code, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NewOptics.SVC.Incompatibilite> EndGetAllIncompatibilitebySupplement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertIncompatibilite", ReplyAction="http://tempuri.org/IServiceClinique/InsertIncompatibiliteResponse")]
        void InsertIncompatibilite(NewOptics.SVC.Incompatibilite obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertIncompatibilite", ReplyAction="http://tempuri.org/IServiceClinique/InsertIncompatibiliteResponse")]
        System.IAsyncResult BeginInsertIncompatibilite(NewOptics.SVC.Incompatibilite obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertIncompatibilite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateIncompatibilite", ReplyAction="http://tempuri.org/IServiceClinique/UpdateIncompatibiliteResponse")]
        void UpdateIncompatibilite(NewOptics.SVC.Incompatibilite obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateIncompatibilite", ReplyAction="http://tempuri.org/IServiceClinique/UpdateIncompatibiliteResponse")]
        System.IAsyncResult BeginUpdateIncompatibilite(NewOptics.SVC.Incompatibilite obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateIncompatibilite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteIncompatibilite", ReplyAction="http://tempuri.org/IServiceClinique/DeleteIncompatibiliteResponse")]
        void DeleteIncompatibilite(NewOptics.SVC.Incompatibilite obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteIncompatibilite", ReplyAction="http://tempuri.org/IServiceClinique/DeleteIncompatibiliteResponse")]
        System.IAsyncResult BeginDeleteIncompatibilite(NewOptics.SVC.Incompatibilite obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteIncompatibilite(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCliniqueCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshDicom")]
        void RefreshDicom(System.Collections.Generic.List<NewOptics.SVC.DicomFichier> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshDicom")]
        System.IAsyncResult BeginRefreshDicom(System.Collections.Generic.List<NewOptics.SVC.DicomFichier> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshDicom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshLentille")]
        void RefreshLentille(NewOptics.SVC.Lentille medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshLentille")]
        System.IAsyncResult BeginRefreshLentille(NewOptics.SVC.Lentille medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshLentille(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshAdaptationLentille")]
        void RefreshAdaptationLentille(NewOptics.SVC.AdaptationLentille medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshAdaptationLentille")]
        System.IAsyncResult BeginRefreshAdaptationLentille(NewOptics.SVC.AdaptationLentille medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshAdaptationLentille(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshAnamnese")]
        void RefreshAnamnese(NewOptics.SVC.Anamnese medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshAnamnese")]
        System.IAsyncResult BeginRefreshAnamnese(NewOptics.SVC.Anamnese medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshAnamnese(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshPaint")]
        void RefreshPaint(NewOptics.SVC.Paint medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshPaint")]
        System.IAsyncResult BeginRefreshPaint(NewOptics.SVC.Paint medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshPaint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshRendezVou")]
        void RefreshRendezVou(NewOptics.SVC.RendezVou medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshRendezVou")]
        System.IAsyncResult BeginRefreshRendezVou(NewOptics.SVC.RendezVou medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshRendezVou(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshExamensOptométriques")]
        void RefreshExamensOptométriques(NewOptics.SVC.examenopto medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshExamensOptométriques")]
        System.IAsyncResult BeginRefreshExamensOptométriques(NewOptics.SVC.examenopto medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshExamensOptométriques(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshExamenBinoculaire")]
        void RefreshExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshExamenBinoculaire")]
        System.IAsyncResult BeginRefreshExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshExamenBinoculaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshAppointment")]
        void RefreshAppointment(NewOptics.SVC.Appointment medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshAppointment")]
        System.IAsyncResult BeginRefreshAppointment(NewOptics.SVC.Appointment medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshAppointment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshResource")]
        void RefreshResource(NewOptics.SVC.Resource medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshResource")]
        System.IAsyncResult BeginRefreshResource(NewOptics.SVC.Resource medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshResource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshMonture")]
        void RefreshMonture(NewOptics.SVC.Monture medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshMonture")]
        System.IAsyncResult BeginRefreshMonture(NewOptics.SVC.Monture medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshMonture(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshMontureList")]
        void RefreshMontureList(System.Collections.Generic.List<NewOptics.SVC.Monture> medeicn);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshMontureList")]
        System.IAsyncResult BeginRefreshMontureList(System.Collections.Generic.List<NewOptics.SVC.Monture> medeicn, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshMontureList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshMontureSupplement")]
        void RefreshMontureSupplement(NewOptics.SVC.MontureSupplement medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshMontureSupplement")]
        System.IAsyncResult BeginRefreshMontureSupplement(NewOptics.SVC.MontureSupplement medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshMontureSupplement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshLentilleClient")]
        void RefreshLentilleClient(NewOptics.SVC.LentilleClient medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshLentilleClient")]
        System.IAsyncResult BeginRefreshLentilleClient(NewOptics.SVC.LentilleClient medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshLentilleClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshLentilleClientList")]
        void RefreshLentilleClientList(System.Collections.Generic.List<NewOptics.SVC.LentilleClient> medeicn);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshLentilleClientList")]
        System.IAsyncResult BeginRefreshLentilleClientList(System.Collections.Generic.List<NewOptics.SVC.LentilleClient> medeicn, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshLentilleClientList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshVerre")]
        void RefreshVerre(NewOptics.SVC.Verre medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshVerre")]
        System.IAsyncResult BeginRefreshVerre(NewOptics.SVC.Verre medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshVerre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshIncompatibilite")]
        void RefreshIncompatibilite(NewOptics.SVC.Incompatibilite medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshIncompatibilite")]
        System.IAsyncResult BeginRefreshIncompatibilite(NewOptics.SVC.Incompatibilite medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshIncompatibilite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshVerreAssocie")]
        void RefreshVerreAssocie(NewOptics.SVC.VerreAssocie medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshVerreAssocie")]
        System.IAsyncResult BeginRefreshVerreAssocie(NewOptics.SVC.VerreAssocie medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshVerreAssocie(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshSupplement")]
        void RefreshSupplement(NewOptics.SVC.Supplement medeicn, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshSupplement")]
        System.IAsyncResult BeginRefreshSupplement(NewOptics.SVC.Supplement medeicn, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshSupplement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshTCab")]
        void RefreshTCab(System.Collections.Generic.List<NewOptics.SVC.Tcab> medeicn);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshTCab")]
        System.IAsyncResult BeginRefreshTCab(System.Collections.Generic.List<NewOptics.SVC.Tcab> medeicn, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshTCab(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshTarifVerre")]
        void RefreshTarifVerre(System.Collections.Generic.List<NewOptics.SVC.TarifVerre> medeicn);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshTarifVerre")]
        System.IAsyncResult BeginRefreshTarifVerre(System.Collections.Generic.List<NewOptics.SVC.TarifVerre> medeicn, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshTarifVerre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshClientV")]
        void RefreshClientV(NewOptics.SVC.ClientV medecin, int patient);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshClientV")]
        System.IAsyncResult BeginRefreshClientV(NewOptics.SVC.ClientV medecin, int patient, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshClientV(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshProduit")]
        void RefreshProduit(NewOptics.SVC.Produit medecin, int operf);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshProduit")]
        System.IAsyncResult BeginRefreshProduit(NewOptics.SVC.Produit medecin, int operf, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshProduit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshFacture")]
        void RefreshFacture(NewOptics.SVC.Facture medecin, int operf);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshFacture")]
        System.IAsyncResult BeginRefreshFacture(NewOptics.SVC.Facture medecin, int operf, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshFacture(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshFactureListe")]
        void RefreshFactureListe(System.Collections.Generic.List<NewOptics.SVC.Facture> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshFactureListe")]
        System.IAsyncResult BeginRefreshFactureListe(System.Collections.Generic.List<NewOptics.SVC.Facture> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshFactureListe(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshMarque")]
        void RefreshMarque(System.Collections.Generic.List<NewOptics.SVC.Marque> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshMarque")]
        System.IAsyncResult BeginRefreshMarque(System.Collections.Generic.List<NewOptics.SVC.Marque> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshMarque(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshStatu")]
        void RefreshStatu(System.Collections.Generic.List<NewOptics.SVC.Statu> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshStatu")]
        System.IAsyncResult BeginRefreshStatu(System.Collections.Generic.List<NewOptics.SVC.Statu> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshStatu(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshMotifTable")]
        void RefreshMotifTable(System.Collections.Generic.List<NewOptics.SVC.MotifTable> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshMotifTable")]
        System.IAsyncResult BeginRefreshMotifTable(System.Collections.Generic.List<NewOptics.SVC.MotifTable> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshMotifTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshFamilleProduit")]
        void RefreshFamilleProduit(System.Collections.Generic.List<NewOptics.SVC.FamilleProduit> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshFamilleProduit")]
        System.IAsyncResult BeginRefreshFamilleProduit(System.Collections.Generic.List<NewOptics.SVC.FamilleProduit> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshFamilleProduit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshCatSupp")]
        void RefreshCatSupp(System.Collections.Generic.List<NewOptics.SVC.CatSupp> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshCatSupp")]
        System.IAsyncResult BeginRefreshCatSupp(System.Collections.Generic.List<NewOptics.SVC.CatSupp> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshCatSupp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshProdflist")]
        void RefreshProdflist(System.Collections.Generic.List<NewOptics.SVC.Prodf> medecin, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshProdflist")]
        System.IAsyncResult BeginRefreshProdflist(System.Collections.Generic.List<NewOptics.SVC.Prodf> medecin, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshProdflist(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshProdf")]
        void RefreshProdf(NewOptics.SVC.Prodf medecin, int operF);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshProdf")]
        System.IAsyncResult BeginRefreshProdf(NewOptics.SVC.Prodf medecin, int operF, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshProdf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshProdfRecept")]
        void RefreshProdfRecept(System.Collections.Generic.List<NewOptics.SVC.Prodf> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshProdfRecept")]
        System.IAsyncResult BeginRefreshProdfRecept(System.Collections.Generic.List<NewOptics.SVC.Prodf> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshProdfRecept(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshDepense")]
        void RefreshDepense(NewOptics.SVC.Depense medecin, int oper);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshDepense")]
        System.IAsyncResult BeginRefreshDepense(NewOptics.SVC.Depense medecin, int oper, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshMotifDepense")]
        void RefreshMotifDepense(System.Collections.Generic.List<NewOptics.SVC.MotifDepense> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshMotifDepense")]
        System.IAsyncResult BeginRefreshMotifDepense(System.Collections.Generic.List<NewOptics.SVC.MotifDepense> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshMotifDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/Refresham")]
        void Refresham(System.Collections.Generic.List<NewOptics.SVC.am> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Refresham")]
        System.IAsyncResult BeginRefresham(System.Collections.Generic.List<NewOptics.SVC.am> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefresham(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/Refreshdepaief")]
        void Refreshdepaief(NewOptics.SVC.depaief medecin, int oper);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Refreshdepaief")]
        System.IAsyncResult BeginRefreshdepaief(NewOptics.SVC.depaief medecin, int oper, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshdepaief(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshRecept")]
        void RefreshRecept(System.Collections.Generic.List<NewOptics.SVC.Recept> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshRecept")]
        System.IAsyncResult BeginRefreshRecept(System.Collections.Generic.List<NewOptics.SVC.Recept> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshRecept(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshFourn")]
        void RefreshFourn(System.Collections.Generic.List<NewOptics.SVC.Fourn> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshFourn")]
        System.IAsyncResult BeginRefreshFourn(System.Collections.Generic.List<NewOptics.SVC.Fourn> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshFourn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshDepeiment")]
        void RefreshDepeiment(NewOptics.SVC.Depeiment medecin, int oper);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshDepeiment")]
        System.IAsyncResult BeginRefreshDepeiment(NewOptics.SVC.Depeiment medecin, int oper, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshDepeiment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshCommande")]
        void RefreshCommande(NewOptics.SVC.Commande medecin, int oper);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshCommande")]
        System.IAsyncResult BeginRefreshCommande(NewOptics.SVC.Commande medecin, int oper, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshCommande(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshDepeiementMultipleFournisseur")]
        void RefreshDepeiementMultipleFournisseur(System.Collections.Generic.List<NewOptics.SVC.DepeiementMultipleFournisseur> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshDepeiementMultipleFournisseur")]
        System.IAsyncResult BeginRefreshDepeiementMultipleFournisseur(System.Collections.Generic.List<NewOptics.SVC.DepeiementMultipleFournisseur> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshDepeiementMultipleFournisseur(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshDepeimentMultiple")]
        void RefreshDepeimentMultiple(System.Collections.Generic.List<NewOptics.SVC.DepeiementMultiple> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshDepeimentMultiple")]
        System.IAsyncResult BeginRefreshDepeimentMultiple(System.Collections.Generic.List<NewOptics.SVC.DepeiementMultiple> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshDepeimentMultiple(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshParametre")]
        void RefreshParametre(NewOptics.SVC.Param medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshParametre")]
        System.IAsyncResult BeginRefreshParametre(NewOptics.SVC.Param medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshParametre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshClients")]
        void RefreshClients(System.Collections.Generic.List<NewOptics.SVC.Client> clients);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshClients")]
        System.IAsyncResult BeginRefreshClients(System.Collections.Generic.List<NewOptics.SVC.Client> clients, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshClients(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshMembership")]
        void RefreshMembership(System.Collections.Generic.List<NewOptics.SVC.MembershipOptic> membership);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshMembership")]
        System.IAsyncResult BeginRefreshMembership(System.Collections.Generic.List<NewOptics.SVC.MembershipOptic> membership, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshMembership(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshF1")]
        void RefreshF1(NewOptics.SVC.F1 medecin, int oper);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshF1")]
        System.IAsyncResult BeginRefreshF1(NewOptics.SVC.F1 medecin, int oper, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshF1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshF1ListClient")]
        void RefreshF1ListClient(System.Collections.Generic.List<NewOptics.SVC.F1> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshF1ListClient")]
        System.IAsyncResult BeginRefreshF1ListClient(System.Collections.Generic.List<NewOptics.SVC.F1> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshF1ListClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshRecouf")]
        void RefreshRecouf(NewOptics.SVC.Recouf medecin, int oper);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshRecouf")]
        System.IAsyncResult BeginRefreshRecouf(NewOptics.SVC.Recouf medecin, int oper, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshRecouf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/Receive")]
        void Receive(NewOptics.SVC.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Receive")]
        System.IAsyncResult BeginReceive(NewOptics.SVC.Message msg, System.AsyncCallback callback, object asyncState);
        
        void EndReceive(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/ReceiveWhisper")]
        void ReceiveWhisper(NewOptics.SVC.Message msg, NewOptics.SVC.Client receiver);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/ReceiveWhisper")]
        System.IAsyncResult BeginReceiveWhisper(NewOptics.SVC.Message msg, NewOptics.SVC.Client receiver, System.AsyncCallback callback, object asyncState);
        
        void EndReceiveWhisper(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/IsWritingCallback")]
        void IsWritingCallback(NewOptics.SVC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/IsWritingCallback")]
        System.IAsyncResult BeginIsWritingCallback(NewOptics.SVC.Client client, System.AsyncCallback callback, object asyncState);
        
        void EndIsWritingCallback(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/ReceiverFile")]
        void ReceiverFile(NewOptics.SVC.FileMessage fileMsg, NewOptics.SVC.Client receiver);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/ReceiverFile")]
        System.IAsyncResult BeginReceiverFile(NewOptics.SVC.FileMessage fileMsg, NewOptics.SVC.Client receiver, System.AsyncCallback callback, object asyncState);
        
        void EndReceiverFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/UserJoin")]
        void UserJoin(NewOptics.SVC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UserJoin")]
        System.IAsyncResult BeginUserJoin(NewOptics.SVC.Client client, System.AsyncCallback callback, object asyncState);
        
        void EndUserJoin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/UserLeave")]
        void UserLeave(NewOptics.SVC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UserLeave")]
        System.IAsyncResult BeginUserLeave(NewOptics.SVC.Client client, System.AsyncCallback callback, object asyncState);
        
        void EndUserLeave(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCliniqueChannel : NewOptics.SVC.IServiceClinique, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllRecoufCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllRecoufCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Recouf> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Recouf>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllRecoufBycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllRecoufBycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Recouf> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Recouf>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllRecoufbydateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllRecoufbydateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Recouf> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Recouf>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertRecoufCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertRecoufCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllReceptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllReceptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Recept> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Recept>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllReceptBYNFACTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllReceptBYNFACTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Recept> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Recept>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertReceptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertReceptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Client> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Client>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllClientDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllClientDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<NewOptics.SVC.Client, object> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<NewOptics.SVC.Client, object>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllVerreAssocieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllVerreAssocieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.VerreAssocie> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.VerreAssocie>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllVerreAssociebySupplementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllVerreAssociebySupplementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.VerreAssocie> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.VerreAssocie>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllSupplementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllSupplementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Supplement> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Supplement>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllSupplementbycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllSupplementbycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Supplement> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Supplement>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllVerreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllVerreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Verre> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Verre>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllVerrebycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllVerrebycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Verre> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Verre>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTarifVerreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTarifVerreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.TarifVerre> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.TarifVerre>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTarifVerrebycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTarifVerrebycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.TarifVerre> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.TarifVerre>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTcabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTcabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Tcab> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Tcab>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTcabbycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTcabbycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Tcab> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Tcab>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFournCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFournCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Fourn> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Fourn>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllF1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllF1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.F1> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.F1>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllF1AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllF1AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.F1> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.F1>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllF1BycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllF1BycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.F1> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.F1>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllF1ByCleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllF1ByCleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.F1> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.F1>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllF1ByCleDossierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllF1ByCleDossierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.F1> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.F1>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllF1ByVisiteOperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllF1ByVisiteOperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.F1> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.F1>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFactureBycodeproduitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFactureBycodeproduitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Facture>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFactureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFactureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Facture>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFactureAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFactureAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Facture>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFactureBycompteurCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFactureBycompteurCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Facture>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFactureByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFactureByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Facture>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFactureByCleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFactureByCleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Facture>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFactureByOperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFactureByOperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Facture>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertFactureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertFactureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertFactureSansStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertFactureSansStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateFactureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateFactureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateFactureSansStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateFactureSansStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDepeiementMultipleFournisseurCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDepeiementMultipleFournisseurCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.DepeiementMultipleFournisseur> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.DepeiementMultipleFournisseur>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDepeiementMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDepeiementMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.DepeiementMultiple> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.DepeiementMultiple>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAlldepaiefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAlldepaiefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.depaief> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.depaief>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDepeimentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDepeimentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Depeiment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Depeiment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDepeimentByF1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDepeimentByF1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Depeiment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Depeiment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMotifDepenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMotifDepenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.MotifDepense> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.MotifDepense>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDepenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDepenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Depense> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Depense>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDepenseByF1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDepenseByF1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Depense> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Depense>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.am> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.am>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllClientVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllClientVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.ClientV> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.ClientV>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllClientVPARCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllClientVPARCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.ClientV> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.ClientV>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllClientVEXISTECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllClientVEXISTECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllClientVBYIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllClientVBYIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.ClientV> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.ClientV>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMarqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMarqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Marque> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Marque>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Resource> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Resource>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAppointmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAppointmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Appointment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Appointment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAppointmentBycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAppointmentBycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Appointment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Appointment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllStatuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllStatuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Statu> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Statu>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMotifTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMotifTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.MotifTable> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.MotifTable>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCatSuppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCatSuppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.CatSupp> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.CatSupp>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFamilleProduitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFamilleProduitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.FamilleProduit> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.FamilleProduit>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllProdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllProdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Prodf> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Prodf>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllProdfbycodeabarreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllProdfbycodeabarreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Prodf> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Prodf>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllProdfbycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllProdfbycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Prodf> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Prodf>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllProdfbyficheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllProdfbyficheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Prodf> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Prodf>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertProdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertProdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCommandeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCommandeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Commande> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Commande>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCommandebydatecommandeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCommandebydatecommandeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Commande> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Commande>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCommandebydatereceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCommandebydatereceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Commande> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Commande>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertCommandeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertCommandeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadDocumentIsHereCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadDocumentIsHereCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMembershipOpticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMembershipOpticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.MembershipOptic> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.MembershipOptic>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDicomFichierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDicomFichierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.DicomFichier> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.DicomFichier>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllParamétreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllParamétreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NewOptics.SVC.Param Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NewOptics.SVC.Param)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllProduitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllProduitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Produit> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Produit>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllProduitbyidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllProduitbyidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Produit> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Produit>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllProduitbycabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllProduitbycabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NewOptics.SVC.Produit Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NewOptics.SVC.Produit)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAdaptationLentilleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAdaptationLentilleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAdaptationLentillebycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAdaptationLentillebycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllRendezVoubycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllRendezVoubycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.RendezVou> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.RendezVou>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllRendezVouCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllRendezVouCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.RendezVou> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.RendezVou>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPaintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPaintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Paint> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Paint>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPaintbycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPaintbycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Paint> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Paint>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAnamneseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAnamneseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Anamnese> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Anamnese>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAnamnesebycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAnamnesebycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Anamnese> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Anamnese>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllExamenBinoculaireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllExamenBinoculaireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllExamenBinoculairebycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllExamenBinoculairebycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllExamensOptométriquesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllExamensOptométriquesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.examenopto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.examenopto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllExamensOptométriquesbycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllExamensOptométriquesbycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.examenopto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.examenopto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMontureSupplementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMontureSupplementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.MontureSupplement> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.MontureSupplement>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMontureSupplementbycleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMontureSupplementbycleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.MontureSupplement> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.MontureSupplement>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMontureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMontureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Monture> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Monture>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMontureDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMontureDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Monture> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Monture>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMontureDateLivraisonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMontureDateLivraisonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Monture> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Monture>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMonturebyDossierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMonturebyDossierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Monture> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Monture>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMonturebycodebarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMonturebycodebarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Monture> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Monture>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMonturebycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMonturebycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Monture> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Monture>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLentilleClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLentilleClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.LentilleClient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLentilleClientDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLentilleClientDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.LentilleClient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLentilleClientDateLivraisonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLentilleClientDateLivraisonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.LentilleClient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLentilleClientbycodebarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLentilleClientbycodebarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.LentilleClient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLentilleClientbyDossierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLentilleClientbyDossierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.LentilleClient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLentilleClientbycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLentilleClientbycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.LentilleClient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLentilleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLentilleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Lentille> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Lentille>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLentillebycodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLentillebycodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Lentille> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Lentille>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllIncompatibiliteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllIncompatibiliteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Incompatibilite> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Incompatibilite>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllIncompatibilitebySupplementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllIncompatibilitebySupplementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Incompatibilite> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NewOptics.SVC.Incompatibilite>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceCliniqueClient : System.ServiceModel.DuplexClientBase<NewOptics.SVC.IServiceClinique>, NewOptics.SVC.IServiceClinique {
        
        private BeginOperationDelegate onBeginDeleteCommandeDelegate;
        
        private EndOperationDelegate onEndDeleteCommandeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCommandeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllRecoufDelegate;
        
        private EndOperationDelegate onEndGetAllRecoufDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllRecoufCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllRecoufBycodeDelegate;
        
        private EndOperationDelegate onEndGetAllRecoufBycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllRecoufBycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllRecoufbydateDelegate;
        
        private EndOperationDelegate onEndGetAllRecoufbydateDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllRecoufbydateCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertRecoufDelegate;
        
        private EndOperationDelegate onEndInsertRecoufDelegate;
        
        private System.Threading.SendOrPostCallback onInsertRecoufCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRecoufDelegate;
        
        private EndOperationDelegate onEndUpdateRecoufDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRecoufCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRecoufDelegate;
        
        private EndOperationDelegate onEndDeleteRecoufDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRecoufCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllReceptDelegate;
        
        private EndOperationDelegate onEndGetAllReceptDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllReceptCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllReceptBYNFACTDelegate;
        
        private EndOperationDelegate onEndGetAllReceptBYNFACTDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllReceptBYNFACTCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertReceptDelegate;
        
        private EndOperationDelegate onEndInsertReceptDelegate;
        
        private System.Threading.SendOrPostCallback onInsertReceptCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateReceptDelegate;
        
        private EndOperationDelegate onEndUpdateReceptDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateReceptCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteReceptDelegate;
        
        private EndOperationDelegate onEndDeleteReceptDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteReceptCompletedDelegate;
        
        private BeginOperationDelegate onBeginConnectDelegate;
        
        private EndOperationDelegate onEndConnectDelegate;
        
        private System.Threading.SendOrPostCallback onConnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllClientDelegate;
        
        private EndOperationDelegate onEndGetAllClientDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllClientDictDelegate;
        
        private EndOperationDelegate onEndGetAllClientDictDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllClientDictCompletedDelegate;
        
        private BeginOperationDelegate onBeginReConnectDelegate;
        
        private EndOperationDelegate onEndReConnectDelegate;
        
        private System.Threading.SendOrPostCallback onReConnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginSayDelegate;
        
        private EndOperationDelegate onEndSayDelegate;
        
        private System.Threading.SendOrPostCallback onSayCompletedDelegate;
        
        private BeginOperationDelegate onBeginWhisperDelegate;
        
        private EndOperationDelegate onEndWhisperDelegate;
        
        private System.Threading.SendOrPostCallback onWhisperCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsWritingDelegate;
        
        private EndOperationDelegate onEndIsWritingDelegate;
        
        private System.Threading.SendOrPostCallback onIsWritingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendFileDelegate;
        
        private EndOperationDelegate onEndSendFileDelegate;
        
        private System.Threading.SendOrPostCallback onSendFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisconnectDelegate;
        
        private EndOperationDelegate onEndDisconnectDelegate;
        
        private System.Threading.SendOrPostCallback onDisconnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllVerreAssocieDelegate;
        
        private EndOperationDelegate onEndGetAllVerreAssocieDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllVerreAssocieCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllVerreAssociebySupplementDelegate;
        
        private EndOperationDelegate onEndGetAllVerreAssociebySupplementDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllVerreAssociebySupplementCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertVerreAssocieDelegate;
        
        private EndOperationDelegate onEndInsertVerreAssocieDelegate;
        
        private System.Threading.SendOrPostCallback onInsertVerreAssocieCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateVerreAssocieDelegate;
        
        private EndOperationDelegate onEndUpdateVerreAssocieDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateVerreAssocieCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteVerreAssocieDelegate;
        
        private EndOperationDelegate onEndDeleteVerreAssocieDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteVerreAssocieCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllSupplementDelegate;
        
        private EndOperationDelegate onEndGetAllSupplementDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllSupplementCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllSupplementbycodeDelegate;
        
        private EndOperationDelegate onEndGetAllSupplementbycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllSupplementbycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertSupplementDelegate;
        
        private EndOperationDelegate onEndInsertSupplementDelegate;
        
        private System.Threading.SendOrPostCallback onInsertSupplementCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSupplementDelegate;
        
        private EndOperationDelegate onEndUpdateSupplementDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSupplementCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteSupplementDelegate;
        
        private EndOperationDelegate onEndDeleteSupplementDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteSupplementCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllVerreDelegate;
        
        private EndOperationDelegate onEndGetAllVerreDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllVerreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllVerrebycodeDelegate;
        
        private EndOperationDelegate onEndGetAllVerrebycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllVerrebycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertVerreDelegate;
        
        private EndOperationDelegate onEndInsertVerreDelegate;
        
        private System.Threading.SendOrPostCallback onInsertVerreCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateVerreDelegate;
        
        private EndOperationDelegate onEndUpdateVerreDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateVerreCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteVerreDelegate;
        
        private EndOperationDelegate onEndDeleteVerreDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteVerreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTarifVerreDelegate;
        
        private EndOperationDelegate onEndGetAllTarifVerreDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTarifVerreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTarifVerrebycodeDelegate;
        
        private EndOperationDelegate onEndGetAllTarifVerrebycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTarifVerrebycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertTarifVerreDelegate;
        
        private EndOperationDelegate onEndInsertTarifVerreDelegate;
        
        private System.Threading.SendOrPostCallback onInsertTarifVerreCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTarifVerreDelegate;
        
        private EndOperationDelegate onEndUpdateTarifVerreDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTarifVerreCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTarifVerreDelegate;
        
        private EndOperationDelegate onEndDeleteTarifVerreDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTarifVerreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTcabDelegate;
        
        private EndOperationDelegate onEndGetAllTcabDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTcabCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTcabbycodeDelegate;
        
        private EndOperationDelegate onEndGetAllTcabbycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTcabbycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertTcabDelegate;
        
        private EndOperationDelegate onEndInsertTcabDelegate;
        
        private System.Threading.SendOrPostCallback onInsertTcabCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTcabDelegate;
        
        private EndOperationDelegate onEndUpdateTcabDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTcabCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTcabDelegate;
        
        private EndOperationDelegate onEndDeleteTcabDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTcabCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFournDelegate;
        
        private EndOperationDelegate onEndGetAllFournDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFournCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertFournDelegate;
        
        private EndOperationDelegate onEndInsertFournDelegate;
        
        private System.Threading.SendOrPostCallback onInsertFournCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateFournDelegate;
        
        private EndOperationDelegate onEndUpdateFournDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateFournCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteFournDelegate;
        
        private EndOperationDelegate onEndDeleteFournDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteFournCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllF1Delegate;
        
        private EndOperationDelegate onEndGetAllF1Delegate;
        
        private System.Threading.SendOrPostCallback onGetAllF1CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllF1AllDelegate;
        
        private EndOperationDelegate onEndGetAllF1AllDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllF1AllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllF1BycodeDelegate;
        
        private EndOperationDelegate onEndGetAllF1BycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllF1BycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllF1ByCleDelegate;
        
        private EndOperationDelegate onEndGetAllF1ByCleDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllF1ByCleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllF1ByCleDossierDelegate;
        
        private EndOperationDelegate onEndGetAllF1ByCleDossierDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllF1ByCleDossierCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllF1ByVisiteOperDelegate;
        
        private EndOperationDelegate onEndGetAllF1ByVisiteOperDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllF1ByVisiteOperCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertF1Delegate;
        
        private EndOperationDelegate onEndInsertF1Delegate;
        
        private System.Threading.SendOrPostCallback onInsertF1CompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateF1Delegate;
        
        private EndOperationDelegate onEndUpdateF1Delegate;
        
        private System.Threading.SendOrPostCallback onUpdateF1CompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteF1Delegate;
        
        private EndOperationDelegate onEndDeleteF1Delegate;
        
        private System.Threading.SendOrPostCallback onDeleteF1CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFactureBycodeproduitDelegate;
        
        private EndOperationDelegate onEndGetAllFactureBycodeproduitDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFactureBycodeproduitCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFactureDelegate;
        
        private EndOperationDelegate onEndGetAllFactureDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFactureCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFactureAllDelegate;
        
        private EndOperationDelegate onEndGetAllFactureAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFactureAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFactureBycompteurDelegate;
        
        private EndOperationDelegate onEndGetAllFactureBycompteurDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFactureBycompteurCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFactureByCodeDelegate;
        
        private EndOperationDelegate onEndGetAllFactureByCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFactureByCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFactureByCleDelegate;
        
        private EndOperationDelegate onEndGetAllFactureByCleDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFactureByCleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFactureByOperDelegate;
        
        private EndOperationDelegate onEndGetAllFactureByOperDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFactureByOperCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertFactureDelegate;
        
        private EndOperationDelegate onEndInsertFactureDelegate;
        
        private System.Threading.SendOrPostCallback onInsertFactureCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertFactureSansStockDelegate;
        
        private EndOperationDelegate onEndInsertFactureSansStockDelegate;
        
        private System.Threading.SendOrPostCallback onInsertFactureSansStockCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateFactureDelegate;
        
        private EndOperationDelegate onEndUpdateFactureDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateFactureCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateFactureSansStockDelegate;
        
        private EndOperationDelegate onEndUpdateFactureSansStockDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateFactureSansStockCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteFactureDelegate;
        
        private EndOperationDelegate onEndDeleteFactureDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteFactureCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDepeiementMultipleFournisseurDelegate;
        
        private EndOperationDelegate onEndGetAllDepeiementMultipleFournisseurDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDepeiementMultipleFournisseurCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDepeiementMultipleFournisseurDelegate;
        
        private EndOperationDelegate onEndInsertDepeiementMultipleFournisseurDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDepeiementMultipleFournisseurCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDepeiementMultipleFournisseurDelegate;
        
        private EndOperationDelegate onEndUpdateDepeiementMultipleFournisseurDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDepeiementMultipleFournisseurCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDepeiementMultipleFournisseurDelegate;
        
        private EndOperationDelegate onEndDeleteDepeiementMultipleFournisseurDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDepeiementMultipleFournisseurCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDepeiementMultipleDelegate;
        
        private EndOperationDelegate onEndGetAllDepeiementMultipleDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDepeiementMultipleCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDepeiementMultipleDelegate;
        
        private EndOperationDelegate onEndInsertDepeiementMultipleDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDepeiementMultipleCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDepeiementMultipleDelegate;
        
        private EndOperationDelegate onEndUpdateDepeiementMultipleDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDepeiementMultipleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDepeiementMultipleDelegate;
        
        private EndOperationDelegate onEndDeleteDepeiementMultipleDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDepeiementMultipleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAlldepaiefDelegate;
        
        private EndOperationDelegate onEndGetAlldepaiefDelegate;
        
        private System.Threading.SendOrPostCallback onGetAlldepaiefCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertdepaiefDelegate;
        
        private EndOperationDelegate onEndInsertdepaiefDelegate;
        
        private System.Threading.SendOrPostCallback onInsertdepaiefCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatedepaiefDelegate;
        
        private EndOperationDelegate onEndUpdatedepaiefDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatedepaiefCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletedepaiefDelegate;
        
        private EndOperationDelegate onEndDeletedepaiefDelegate;
        
        private System.Threading.SendOrPostCallback onDeletedepaiefCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDepeimentDelegate;
        
        private EndOperationDelegate onEndGetAllDepeimentDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDepeimentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDepeimentByF1Delegate;
        
        private EndOperationDelegate onEndGetAllDepeimentByF1Delegate;
        
        private System.Threading.SendOrPostCallback onGetAllDepeimentByF1CompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDepeimentDelegate;
        
        private EndOperationDelegate onEndInsertDepeimentDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDepeimentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDepeimentDelegate;
        
        private EndOperationDelegate onEndUpdateDepeimentDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDepeimentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDepeimentDelegate;
        
        private EndOperationDelegate onEndDeleteDepeimentDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDepeimentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMotifDepenseDelegate;
        
        private EndOperationDelegate onEndGetAllMotifDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMotifDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertMotifDepenseDelegate;
        
        private EndOperationDelegate onEndInsertMotifDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onInsertMotifDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMotifDepenseDelegate;
        
        private EndOperationDelegate onEndUpdateMotifDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMotifDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMotifDepenseDelegate;
        
        private EndOperationDelegate onEndDeleteMotifDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMotifDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDepenseDelegate;
        
        private EndOperationDelegate onEndGetAllDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDepenseByF1Delegate;
        
        private EndOperationDelegate onEndGetAllDepenseByF1Delegate;
        
        private System.Threading.SendOrPostCallback onGetAllDepenseByF1CompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDepenseDelegate;
        
        private EndOperationDelegate onEndInsertDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDepenseDelegate;
        
        private EndOperationDelegate onEndUpdateDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDepenseDelegate;
        
        private EndOperationDelegate onEndDeleteDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllamDelegate;
        
        private EndOperationDelegate onEndGetAllamDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllamCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertamDelegate;
        
        private EndOperationDelegate onEndInsertamDelegate;
        
        private System.Threading.SendOrPostCallback onInsertamCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateamDelegate;
        
        private EndOperationDelegate onEndUpdateamDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateamCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteamDelegate;
        
        private EndOperationDelegate onEndDeleteamDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteamCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllClientVDelegate;
        
        private EndOperationDelegate onEndGetAllClientVDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllClientVCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllClientVPARDelegate;
        
        private EndOperationDelegate onEndGetAllClientVPARDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllClientVPARCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllClientVEXISTEDelegate;
        
        private EndOperationDelegate onEndGetAllClientVEXISTEDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllClientVEXISTECompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllClientVBYIDDelegate;
        
        private EndOperationDelegate onEndGetAllClientVBYIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllClientVBYIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertClientVDelegate;
        
        private EndOperationDelegate onEndInsertClientVDelegate;
        
        private System.Threading.SendOrPostCallback onInsertClientVCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateClientVDelegate;
        
        private EndOperationDelegate onEndUpdateClientVDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateClientVCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteClientVDelegate;
        
        private EndOperationDelegate onEndDeleteClientVDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteClientVCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMarqueDelegate;
        
        private EndOperationDelegate onEndGetAllMarqueDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMarqueCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertMarqueDelegate;
        
        private EndOperationDelegate onEndInsertMarqueDelegate;
        
        private System.Threading.SendOrPostCallback onInsertMarqueCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMarqueDelegate;
        
        private EndOperationDelegate onEndUpdateMarqueDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMarqueCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletMarqueDelegate;
        
        private EndOperationDelegate onEndDeletMarqueDelegate;
        
        private System.Threading.SendOrPostCallback onDeletMarqueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllResourceDelegate;
        
        private EndOperationDelegate onEndGetAllResourceDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllResourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertResourceDelegate;
        
        private EndOperationDelegate onEndInsertResourceDelegate;
        
        private System.Threading.SendOrPostCallback onInsertResourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateResourceDelegate;
        
        private EndOperationDelegate onEndUpdateResourceDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateResourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteResourceDelegate;
        
        private EndOperationDelegate onEndDeleteResourceDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteResourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAppointmentDelegate;
        
        private EndOperationDelegate onEndGetAllAppointmentDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAppointmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAppointmentBycodeDelegate;
        
        private EndOperationDelegate onEndGetAllAppointmentBycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAppointmentBycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertAppointmentDelegate;
        
        private EndOperationDelegate onEndInsertAppointmentDelegate;
        
        private System.Threading.SendOrPostCallback onInsertAppointmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAppointmentDelegate;
        
        private EndOperationDelegate onEndUpdateAppointmentDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAppointmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAppointmentDelegate;
        
        private EndOperationDelegate onEndDeleteAppointmentDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAppointmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllStatuDelegate;
        
        private EndOperationDelegate onEndGetAllStatuDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllStatuCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertStatuDelegate;
        
        private EndOperationDelegate onEndInsertStatuDelegate;
        
        private System.Threading.SendOrPostCallback onInsertStatuCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateStatuDelegate;
        
        private EndOperationDelegate onEndUpdateStatuDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateStatuCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletStatuDelegate;
        
        private EndOperationDelegate onEndDeletStatuDelegate;
        
        private System.Threading.SendOrPostCallback onDeletStatuCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMotifTableDelegate;
        
        private EndOperationDelegate onEndGetAllMotifTableDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMotifTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertMotifTableDelegate;
        
        private EndOperationDelegate onEndInsertMotifTableDelegate;
        
        private System.Threading.SendOrPostCallback onInsertMotifTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMotifTableDelegate;
        
        private EndOperationDelegate onEndUpdateMotifTableDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMotifTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletMotifTableDelegate;
        
        private EndOperationDelegate onEndDeletMotifTableDelegate;
        
        private System.Threading.SendOrPostCallback onDeletMotifTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCatSuppDelegate;
        
        private EndOperationDelegate onEndGetAllCatSuppDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCatSuppCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertCatSuppDelegate;
        
        private EndOperationDelegate onEndInsertCatSuppDelegate;
        
        private System.Threading.SendOrPostCallback onInsertCatSuppCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateCatSuppDelegate;
        
        private EndOperationDelegate onEndUpdateCatSuppDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCatSuppCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteCatSuppDelegate;
        
        private EndOperationDelegate onEndDeleteCatSuppDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCatSuppCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFamilleProduitDelegate;
        
        private EndOperationDelegate onEndGetAllFamilleProduitDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFamilleProduitCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertFamilleProduitDelegate;
        
        private EndOperationDelegate onEndInsertFamilleProduitDelegate;
        
        private System.Threading.SendOrPostCallback onInsertFamilleProduitCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateFamilleProduitDelegate;
        
        private EndOperationDelegate onEndUpdateFamilleProduitDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateFamilleProduitCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletFamilleProduitDelegate;
        
        private EndOperationDelegate onEndDeletFamilleProduitDelegate;
        
        private System.Threading.SendOrPostCallback onDeletFamilleProduitCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllProdfDelegate;
        
        private EndOperationDelegate onEndGetAllProdfDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllProdfCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllProdfbycodeabarreDelegate;
        
        private EndOperationDelegate onEndGetAllProdfbycodeabarreDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllProdfbycodeabarreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllProdfbycodeDelegate;
        
        private EndOperationDelegate onEndGetAllProdfbycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllProdfbycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllProdfbyficheDelegate;
        
        private EndOperationDelegate onEndGetAllProdfbyficheDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllProdfbyficheCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertProdfDelegate;
        
        private EndOperationDelegate onEndInsertProdfDelegate;
        
        private System.Threading.SendOrPostCallback onInsertProdfCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateProdfDelegate;
        
        private EndOperationDelegate onEndUpdateProdfDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateProdfCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteProdfDelegate;
        
        private EndOperationDelegate onEndDeleteProdfDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteProdfCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCommandeDelegate;
        
        private EndOperationDelegate onEndGetAllCommandeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCommandeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCommandebydatecommandeDelegate;
        
        private EndOperationDelegate onEndGetAllCommandebydatecommandeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCommandebydatecommandeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCommandebydatereceptionDelegate;
        
        private EndOperationDelegate onEndGetAllCommandebydatereceptionDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCommandebydatereceptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertCommandeDelegate;
        
        private EndOperationDelegate onEndInsertCommandeDelegate;
        
        private System.Threading.SendOrPostCallback onInsertCommandeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateCommandeDelegate;
        
        private EndOperationDelegate onEndUpdateCommandeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCommandeCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterFactureVenteRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterFactureVenteRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterFactureVenteRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterDicomImageRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterDicomImageRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterDicomImageRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterMontureRefreshClientDelegate;
        
        private EndOperationDelegate onEndAjouterMontureRefreshClientDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterMontureRefreshClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterMontureRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterMontureRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterMontureRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterMontureSupplementRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterMontureSupplementRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterMontureSupplementRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterAnamneseRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterAnamneseRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterAnamneseRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterRendezVouRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterRendezVouRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterRendezVouRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterAppointmentRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterAppointmentRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterAppointmentRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterResourceRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterResourceRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterResourceRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterExamensOptométriquesRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterExamensOptométriquesRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterExamensOptométriquesRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterAdaptationLentilleRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterAdaptationLentilleRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterAdaptationLentilleRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterPaintRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterPaintRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterPaintRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterExamenBinoculaireRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterExamenBinoculaireRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterExamenBinoculaireRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterLentilleClientRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterLentilleClientRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterLentilleClientRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterLentilleClientRefreshListDelegate;
        
        private EndOperationDelegate onEndAjouterLentilleClientRefreshListDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterLentilleClientRefreshListCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterProdflistRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterProdflistRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterProdflistRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterTcabRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterTcabRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterTcabRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterVerreRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterVerreRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterVerreRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterIncompatibiliteRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterIncompatibiliteRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterIncompatibiliteRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterVerreAssocieRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterVerreAssocieRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterVerreAssocieRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterSupplementRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterSupplementRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterSupplementRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterLentilleRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterLentilleRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterLentilleRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterTarifVerreRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterTarifVerreRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterTarifVerreRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterFactureRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterFactureRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterFactureRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterSoldeF1RefreshDelegate;
        
        private EndOperationDelegate onEndAjouterSoldeF1RefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterSoldeF1RefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterSoldeF1MultipleRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterSoldeF1MultipleRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterSoldeF1MultipleRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterListeF1RefreshDelegate;
        
        private EndOperationDelegate onEndAjouterListeF1RefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterListeF1RefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterListeRecoufRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterListeRecoufRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterListeRecoufRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterDepenseRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterDepenseRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterDepenseRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterClientVRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterClientVRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterClientVRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterTransactionACHATRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterTransactionACHATRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterTransactionACHATRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterTransactionPaiementRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterTransactionPaiementRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterTransactionPaiementRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterAmsRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterAmsRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterAmsRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterMotifTableRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterMotifTableRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterMotifTableRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterStatuRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterStatuRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterStatuRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterFamilleProduitRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterFamilleProduitRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterFamilleProduitRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterCatSuppRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterCatSuppRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterCatSuppRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterMarqueRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterMarqueRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterMarqueRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterProduitStockRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterProduitStockRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterProduitStockRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterProdfReceptRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterProdfReceptRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterProdfReceptRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterRecoufRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterRecoufRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterRecoufRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterCommandeRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterCommandeRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterCommandeRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterProdfRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterProdfRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterProdfRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterFactureAchatSansProdfRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterFactureAchatSansProdfRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterFactureAchatSansProdfRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginTestConnectDelegate;
        
        private EndOperationDelegate onEndTestConnectDelegate;
        
        private System.Threading.SendOrPostCallback onTestConnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadDocumentDelegate;
        
        private EndOperationDelegate onEndUploadDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onUploadDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterFournRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterFournRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterFournRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadDocumentDelegate;
        
        private EndOperationDelegate onEndDownloadDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadDocumentIsHereDelegate;
        
        private EndOperationDelegate onEndDownloadDocumentIsHereDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadDocumentIsHereCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMembershipOpticsDelegate;
        
        private EndOperationDelegate onEndGetAllMembershipOpticsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMembershipOpticsCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertMembershipOpticsDelegate;
        
        private EndOperationDelegate onEndInsertMembershipOpticsDelegate;
        
        private System.Threading.SendOrPostCallback onInsertMembershipOpticsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMembershipOpticsDelegate;
        
        private EndOperationDelegate onEndUpdateMembershipOpticsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMembershipOpticsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMembershipOpticsDelegate;
        
        private EndOperationDelegate onEndDeleteMembershipOpticsDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMembershipOpticsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDicomFichierDelegate;
        
        private EndOperationDelegate onEndGetAllDicomFichierDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDicomFichierCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDicomFichierDelegate;
        
        private EndOperationDelegate onEndInsertDicomFichierDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDicomFichierCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDicomFichierDelegate;
        
        private EndOperationDelegate onEndUpdateDicomFichierDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDicomFichierCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDicomFichierDelegate;
        
        private EndOperationDelegate onEndDeleteDicomFichierDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDicomFichierCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllParamétreDelegate;
        
        private EndOperationDelegate onEndGetAllParamétreDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllParamétreCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateParamétreDelegate;
        
        private EndOperationDelegate onEndUpdateParamétreDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateParamétreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllProduitDelegate;
        
        private EndOperationDelegate onEndGetAllProduitDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllProduitCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllProduitbyidDelegate;
        
        private EndOperationDelegate onEndGetAllProduitbyidDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllProduitbyidCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllProduitbycabDelegate;
        
        private EndOperationDelegate onEndGetAllProduitbycabDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllProduitbycabCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertProduitDelegate;
        
        private EndOperationDelegate onEndInsertProduitDelegate;
        
        private System.Threading.SendOrPostCallback onInsertProduitCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateProduitDelegate;
        
        private EndOperationDelegate onEndUpdateProduitDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateProduitCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteProduitDelegate;
        
        private EndOperationDelegate onEndDeleteProduitDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteProduitCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAdaptationLentilleDelegate;
        
        private EndOperationDelegate onEndGetAllAdaptationLentilleDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAdaptationLentilleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAdaptationLentillebycodeDelegate;
        
        private EndOperationDelegate onEndGetAllAdaptationLentillebycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAdaptationLentillebycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertAdaptationLentilleDelegate;
        
        private EndOperationDelegate onEndInsertAdaptationLentilleDelegate;
        
        private System.Threading.SendOrPostCallback onInsertAdaptationLentilleCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAdaptationLentilleDelegate;
        
        private EndOperationDelegate onEndUpdateAdaptationLentilleDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAdaptationLentilleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAdaptationLentilleDelegate;
        
        private EndOperationDelegate onEndDeleteAdaptationLentilleDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAdaptationLentilleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllRendezVoubycodeDelegate;
        
        private EndOperationDelegate onEndGetAllRendezVoubycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllRendezVoubycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllRendezVouDelegate;
        
        private EndOperationDelegate onEndGetAllRendezVouDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllRendezVouCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertRendezVouDelegate;
        
        private EndOperationDelegate onEndInsertRendezVouDelegate;
        
        private System.Threading.SendOrPostCallback onInsertRendezVouCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRendezVouDelegate;
        
        private EndOperationDelegate onEndUpdateRendezVouDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRendezVouCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRendezVouDelegate;
        
        private EndOperationDelegate onEndDeleteRendezVouDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRendezVouCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPaintDelegate;
        
        private EndOperationDelegate onEndGetAllPaintDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPaintCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPaintbycodeDelegate;
        
        private EndOperationDelegate onEndGetAllPaintbycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPaintbycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertPaintDelegate;
        
        private EndOperationDelegate onEndInsertPaintDelegate;
        
        private System.Threading.SendOrPostCallback onInsertPaintCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePaintDelegate;
        
        private EndOperationDelegate onEndUpdatePaintDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePaintCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePaintDelegate;
        
        private EndOperationDelegate onEndDeletePaintDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePaintCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAnamneseDelegate;
        
        private EndOperationDelegate onEndGetAllAnamneseDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAnamneseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAnamnesebycodeDelegate;
        
        private EndOperationDelegate onEndGetAllAnamnesebycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAnamnesebycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertAnamneseDelegate;
        
        private EndOperationDelegate onEndInsertAnamneseDelegate;
        
        private System.Threading.SendOrPostCallback onInsertAnamneseCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAnamneseDelegate;
        
        private EndOperationDelegate onEndUpdateAnamneseDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAnamneseCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAnamneseDelegate;
        
        private EndOperationDelegate onEndDeleteAnamneseDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAnamneseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllExamenBinoculaireDelegate;
        
        private EndOperationDelegate onEndGetAllExamenBinoculaireDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllExamenBinoculaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllExamenBinoculairebycodeDelegate;
        
        private EndOperationDelegate onEndGetAllExamenBinoculairebycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllExamenBinoculairebycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertExamenBinoculaireDelegate;
        
        private EndOperationDelegate onEndInsertExamenBinoculaireDelegate;
        
        private System.Threading.SendOrPostCallback onInsertExamenBinoculaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateExamenBinoculaireDelegate;
        
        private EndOperationDelegate onEndUpdateExamenBinoculaireDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateExamenBinoculaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteExamenBinoculaireDelegate;
        
        private EndOperationDelegate onEndDeleteExamenBinoculaireDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteExamenBinoculaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllExamensOptométriquesDelegate;
        
        private EndOperationDelegate onEndGetAllExamensOptométriquesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllExamensOptométriquesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllExamensOptométriquesbycodeDelegate;
        
        private EndOperationDelegate onEndGetAllExamensOptométriquesbycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllExamensOptométriquesbycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertExamensOptométriquesDelegate;
        
        private EndOperationDelegate onEndInsertExamensOptométriquesDelegate;
        
        private System.Threading.SendOrPostCallback onInsertExamensOptométriquesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateExamensOptométriquesDelegate;
        
        private EndOperationDelegate onEndUpdateExamensOptométriquesDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateExamensOptométriquesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteExamensOptométriquesDelegate;
        
        private EndOperationDelegate onEndDeleteExamensOptométriquesDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteExamensOptométriquesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMontureSupplementDelegate;
        
        private EndOperationDelegate onEndGetAllMontureSupplementDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMontureSupplementCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMontureSupplementbycleDelegate;
        
        private EndOperationDelegate onEndGetAllMontureSupplementbycleDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMontureSupplementbycleCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertMontureSupplementDelegate;
        
        private EndOperationDelegate onEndInsertMontureSupplementDelegate;
        
        private System.Threading.SendOrPostCallback onInsertMontureSupplementCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMontureSupplementDelegate;
        
        private EndOperationDelegate onEndUpdateMontureSupplementDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMontureSupplementCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMontureSupplementDelegate;
        
        private EndOperationDelegate onEndDeleteMontureSupplementDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMontureSupplementCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMontureDelegate;
        
        private EndOperationDelegate onEndGetAllMontureDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMontureCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMontureDateDelegate;
        
        private EndOperationDelegate onEndGetAllMontureDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMontureDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMontureDateLivraisonDelegate;
        
        private EndOperationDelegate onEndGetAllMontureDateLivraisonDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMontureDateLivraisonCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMonturebyDossierDelegate;
        
        private EndOperationDelegate onEndGetAllMonturebyDossierDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMonturebyDossierCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMonturebycodebarDelegate;
        
        private EndOperationDelegate onEndGetAllMonturebycodebarDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMonturebycodebarCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMonturebycodeDelegate;
        
        private EndOperationDelegate onEndGetAllMonturebycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMonturebycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertMontureDelegate;
        
        private EndOperationDelegate onEndInsertMontureDelegate;
        
        private System.Threading.SendOrPostCallback onInsertMontureCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMontureDelegate;
        
        private EndOperationDelegate onEndUpdateMontureDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMontureCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMontureDelegate;
        
        private EndOperationDelegate onEndDeleteMontureDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMontureCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLentilleClientDelegate;
        
        private EndOperationDelegate onEndGetAllLentilleClientDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLentilleClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLentilleClientDateDelegate;
        
        private EndOperationDelegate onEndGetAllLentilleClientDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLentilleClientDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLentilleClientDateLivraisonDelegate;
        
        private EndOperationDelegate onEndGetAllLentilleClientDateLivraisonDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLentilleClientDateLivraisonCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLentilleClientbycodebarDelegate;
        
        private EndOperationDelegate onEndGetAllLentilleClientbycodebarDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLentilleClientbycodebarCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLentilleClientbyDossierDelegate;
        
        private EndOperationDelegate onEndGetAllLentilleClientbyDossierDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLentilleClientbyDossierCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLentilleClientbycodeDelegate;
        
        private EndOperationDelegate onEndGetAllLentilleClientbycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLentilleClientbycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertLentilleClientDelegate;
        
        private EndOperationDelegate onEndInsertLentilleClientDelegate;
        
        private System.Threading.SendOrPostCallback onInsertLentilleClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateLentilleClientDelegate;
        
        private EndOperationDelegate onEndUpdateLentilleClientDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateLentilleClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteLentilleClientDelegate;
        
        private EndOperationDelegate onEndDeleteLentilleClientDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteLentilleClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLentilleDelegate;
        
        private EndOperationDelegate onEndGetAllLentilleDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLentilleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLentillebycodeDelegate;
        
        private EndOperationDelegate onEndGetAllLentillebycodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLentillebycodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertLentilleDelegate;
        
        private EndOperationDelegate onEndInsertLentilleDelegate;
        
        private System.Threading.SendOrPostCallback onInsertLentilleCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateLentilleDelegate;
        
        private EndOperationDelegate onEndUpdateLentilleDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateLentilleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteLentilleDelegate;
        
        private EndOperationDelegate onEndDeleteLentilleDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteLentilleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllIncompatibiliteDelegate;
        
        private EndOperationDelegate onEndGetAllIncompatibiliteDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllIncompatibiliteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllIncompatibilitebySupplementDelegate;
        
        private EndOperationDelegate onEndGetAllIncompatibilitebySupplementDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllIncompatibilitebySupplementCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertIncompatibiliteDelegate;
        
        private EndOperationDelegate onEndInsertIncompatibiliteDelegate;
        
        private System.Threading.SendOrPostCallback onInsertIncompatibiliteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateIncompatibiliteDelegate;
        
        private EndOperationDelegate onEndUpdateIncompatibiliteDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateIncompatibiliteCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteIncompatibiliteDelegate;
        
        private EndOperationDelegate onEndDeleteIncompatibiliteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteIncompatibiliteCompletedDelegate;
        
        public ServiceCliniqueClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceCliniqueClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceCliniqueClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCliniqueClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCliniqueClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCommandeCompleted;
        
        public event System.EventHandler<GetAllRecoufCompletedEventArgs> GetAllRecoufCompleted;
        
        public event System.EventHandler<GetAllRecoufBycodeCompletedEventArgs> GetAllRecoufBycodeCompleted;
        
        public event System.EventHandler<GetAllRecoufbydateCompletedEventArgs> GetAllRecoufbydateCompleted;
        
        public event System.EventHandler<InsertRecoufCompletedEventArgs> InsertRecoufCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateRecoufCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteRecoufCompleted;
        
        public event System.EventHandler<GetAllReceptCompletedEventArgs> GetAllReceptCompleted;
        
        public event System.EventHandler<GetAllReceptBYNFACTCompletedEventArgs> GetAllReceptBYNFACTCompleted;
        
        public event System.EventHandler<InsertReceptCompletedEventArgs> InsertReceptCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateReceptCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteReceptCompleted;
        
        public event System.EventHandler<ConnectCompletedEventArgs> ConnectCompleted;
        
        public event System.EventHandler<GetAllClientCompletedEventArgs> GetAllClientCompleted;
        
        public event System.EventHandler<GetAllClientDictCompletedEventArgs> GetAllClientDictCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReConnectCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SayCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> WhisperCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> IsWritingCompleted;
        
        public event System.EventHandler<SendFileCompletedEventArgs> SendFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DisconnectCompleted;
        
        public event System.EventHandler<GetAllVerreAssocieCompletedEventArgs> GetAllVerreAssocieCompleted;
        
        public event System.EventHandler<GetAllVerreAssociebySupplementCompletedEventArgs> GetAllVerreAssociebySupplementCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertVerreAssocieCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateVerreAssocieCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteVerreAssocieCompleted;
        
        public event System.EventHandler<GetAllSupplementCompletedEventArgs> GetAllSupplementCompleted;
        
        public event System.EventHandler<GetAllSupplementbycodeCompletedEventArgs> GetAllSupplementbycodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertSupplementCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateSupplementCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteSupplementCompleted;
        
        public event System.EventHandler<GetAllVerreCompletedEventArgs> GetAllVerreCompleted;
        
        public event System.EventHandler<GetAllVerrebycodeCompletedEventArgs> GetAllVerrebycodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertVerreCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateVerreCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteVerreCompleted;
        
        public event System.EventHandler<GetAllTarifVerreCompletedEventArgs> GetAllTarifVerreCompleted;
        
        public event System.EventHandler<GetAllTarifVerrebycodeCompletedEventArgs> GetAllTarifVerrebycodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertTarifVerreCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateTarifVerreCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteTarifVerreCompleted;
        
        public event System.EventHandler<GetAllTcabCompletedEventArgs> GetAllTcabCompleted;
        
        public event System.EventHandler<GetAllTcabbycodeCompletedEventArgs> GetAllTcabbycodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertTcabCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateTcabCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteTcabCompleted;
        
        public event System.EventHandler<GetAllFournCompletedEventArgs> GetAllFournCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertFournCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateFournCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteFournCompleted;
        
        public event System.EventHandler<GetAllF1CompletedEventArgs> GetAllF1Completed;
        
        public event System.EventHandler<GetAllF1AllCompletedEventArgs> GetAllF1AllCompleted;
        
        public event System.EventHandler<GetAllF1BycodeCompletedEventArgs> GetAllF1BycodeCompleted;
        
        public event System.EventHandler<GetAllF1ByCleCompletedEventArgs> GetAllF1ByCleCompleted;
        
        public event System.EventHandler<GetAllF1ByCleDossierCompletedEventArgs> GetAllF1ByCleDossierCompleted;
        
        public event System.EventHandler<GetAllF1ByVisiteOperCompletedEventArgs> GetAllF1ByVisiteOperCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertF1Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateF1Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteF1Completed;
        
        public event System.EventHandler<GetAllFactureBycodeproduitCompletedEventArgs> GetAllFactureBycodeproduitCompleted;
        
        public event System.EventHandler<GetAllFactureCompletedEventArgs> GetAllFactureCompleted;
        
        public event System.EventHandler<GetAllFactureAllCompletedEventArgs> GetAllFactureAllCompleted;
        
        public event System.EventHandler<GetAllFactureBycompteurCompletedEventArgs> GetAllFactureBycompteurCompleted;
        
        public event System.EventHandler<GetAllFactureByCodeCompletedEventArgs> GetAllFactureByCodeCompleted;
        
        public event System.EventHandler<GetAllFactureByCleCompletedEventArgs> GetAllFactureByCleCompleted;
        
        public event System.EventHandler<GetAllFactureByOperCompletedEventArgs> GetAllFactureByOperCompleted;
        
        public event System.EventHandler<InsertFactureCompletedEventArgs> InsertFactureCompleted;
        
        public event System.EventHandler<InsertFactureSansStockCompletedEventArgs> InsertFactureSansStockCompleted;
        
        public event System.EventHandler<UpdateFactureCompletedEventArgs> UpdateFactureCompleted;
        
        public event System.EventHandler<UpdateFactureSansStockCompletedEventArgs> UpdateFactureSansStockCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteFactureCompleted;
        
        public event System.EventHandler<GetAllDepeiementMultipleFournisseurCompletedEventArgs> GetAllDepeiementMultipleFournisseurCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertDepeiementMultipleFournisseurCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDepeiementMultipleFournisseurCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDepeiementMultipleFournisseurCompleted;
        
        public event System.EventHandler<GetAllDepeiementMultipleCompletedEventArgs> GetAllDepeiementMultipleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertDepeiementMultipleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDepeiementMultipleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDepeiementMultipleCompleted;
        
        public event System.EventHandler<GetAlldepaiefCompletedEventArgs> GetAlldepaiefCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertdepaiefCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatedepaiefCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletedepaiefCompleted;
        
        public event System.EventHandler<GetAllDepeimentCompletedEventArgs> GetAllDepeimentCompleted;
        
        public event System.EventHandler<GetAllDepeimentByF1CompletedEventArgs> GetAllDepeimentByF1Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertDepeimentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDepeimentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDepeimentCompleted;
        
        public event System.EventHandler<GetAllMotifDepenseCompletedEventArgs> GetAllMotifDepenseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertMotifDepenseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateMotifDepenseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteMotifDepenseCompleted;
        
        public event System.EventHandler<GetAllDepenseCompletedEventArgs> GetAllDepenseCompleted;
        
        public event System.EventHandler<GetAllDepenseByF1CompletedEventArgs> GetAllDepenseByF1Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertDepenseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDepenseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDepenseCompleted;
        
        public event System.EventHandler<GetAllamCompletedEventArgs> GetAllamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteamCompleted;
        
        public event System.EventHandler<GetAllClientVCompletedEventArgs> GetAllClientVCompleted;
        
        public event System.EventHandler<GetAllClientVPARCompletedEventArgs> GetAllClientVPARCompleted;
        
        public event System.EventHandler<GetAllClientVEXISTECompletedEventArgs> GetAllClientVEXISTECompleted;
        
        public event System.EventHandler<GetAllClientVBYIDCompletedEventArgs> GetAllClientVBYIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertClientVCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateClientVCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteClientVCompleted;
        
        public event System.EventHandler<GetAllMarqueCompletedEventArgs> GetAllMarqueCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertMarqueCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateMarqueCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletMarqueCompleted;
        
        public event System.EventHandler<GetAllResourceCompletedEventArgs> GetAllResourceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertResourceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateResourceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteResourceCompleted;
        
        public event System.EventHandler<GetAllAppointmentCompletedEventArgs> GetAllAppointmentCompleted;
        
        public event System.EventHandler<GetAllAppointmentBycodeCompletedEventArgs> GetAllAppointmentBycodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertAppointmentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateAppointmentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAppointmentCompleted;
        
        public event System.EventHandler<GetAllStatuCompletedEventArgs> GetAllStatuCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertStatuCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateStatuCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletStatuCompleted;
        
        public event System.EventHandler<GetAllMotifTableCompletedEventArgs> GetAllMotifTableCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertMotifTableCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateMotifTableCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletMotifTableCompleted;
        
        public event System.EventHandler<GetAllCatSuppCompletedEventArgs> GetAllCatSuppCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertCatSuppCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateCatSuppCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCatSuppCompleted;
        
        public event System.EventHandler<GetAllFamilleProduitCompletedEventArgs> GetAllFamilleProduitCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertFamilleProduitCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateFamilleProduitCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletFamilleProduitCompleted;
        
        public event System.EventHandler<GetAllProdfCompletedEventArgs> GetAllProdfCompleted;
        
        public event System.EventHandler<GetAllProdfbycodeabarreCompletedEventArgs> GetAllProdfbycodeabarreCompleted;
        
        public event System.EventHandler<GetAllProdfbycodeCompletedEventArgs> GetAllProdfbycodeCompleted;
        
        public event System.EventHandler<GetAllProdfbyficheCompletedEventArgs> GetAllProdfbyficheCompleted;
        
        public event System.EventHandler<InsertProdfCompletedEventArgs> InsertProdfCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateProdfCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteProdfCompleted;
        
        public event System.EventHandler<GetAllCommandeCompletedEventArgs> GetAllCommandeCompleted;
        
        public event System.EventHandler<GetAllCommandebydatecommandeCompletedEventArgs> GetAllCommandebydatecommandeCompleted;
        
        public event System.EventHandler<GetAllCommandebydatereceptionCompletedEventArgs> GetAllCommandebydatereceptionCompleted;
        
        public event System.EventHandler<InsertCommandeCompletedEventArgs> InsertCommandeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateCommandeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterFactureVenteRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterDicomImageRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterMontureRefreshClientCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterMontureRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterMontureSupplementRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterAnamneseRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterRendezVouRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterAppointmentRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterResourceRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterExamensOptométriquesRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterAdaptationLentilleRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterPaintRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterExamenBinoculaireRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterLentilleClientRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterLentilleClientRefreshListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterProdflistRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterTcabRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterVerreRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterIncompatibiliteRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterVerreAssocieRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterSupplementRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterLentilleRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterTarifVerreRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterFactureRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterSoldeF1RefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterSoldeF1MultipleRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterListeF1RefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterListeRecoufRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterDepenseRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterClientVRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterTransactionACHATRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterTransactionPaiementRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterAmsRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterMotifTableRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterStatuRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterFamilleProduitRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterCatSuppRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterMarqueRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterProduitStockRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterProdfReceptRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterRecoufRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterCommandeRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterProdfRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterFactureAchatSansProdfRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TestConnectCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadDocumentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterFournRefreshCompleted;
        
        public event System.EventHandler<DownloadDocumentCompletedEventArgs> DownloadDocumentCompleted;
        
        public event System.EventHandler<DownloadDocumentIsHereCompletedEventArgs> DownloadDocumentIsHereCompleted;
        
        public event System.EventHandler<GetAllMembershipOpticsCompletedEventArgs> GetAllMembershipOpticsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertMembershipOpticsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateMembershipOpticsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteMembershipOpticsCompleted;
        
        public event System.EventHandler<GetAllDicomFichierCompletedEventArgs> GetAllDicomFichierCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertDicomFichierCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDicomFichierCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDicomFichierCompleted;
        
        public event System.EventHandler<GetAllParamétreCompletedEventArgs> GetAllParamétreCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateParamétreCompleted;
        
        public event System.EventHandler<GetAllProduitCompletedEventArgs> GetAllProduitCompleted;
        
        public event System.EventHandler<GetAllProduitbyidCompletedEventArgs> GetAllProduitbyidCompleted;
        
        public event System.EventHandler<GetAllProduitbycabCompletedEventArgs> GetAllProduitbycabCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertProduitCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateProduitCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteProduitCompleted;
        
        public event System.EventHandler<GetAllAdaptationLentilleCompletedEventArgs> GetAllAdaptationLentilleCompleted;
        
        public event System.EventHandler<GetAllAdaptationLentillebycodeCompletedEventArgs> GetAllAdaptationLentillebycodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertAdaptationLentilleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateAdaptationLentilleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAdaptationLentilleCompleted;
        
        public event System.EventHandler<GetAllRendezVoubycodeCompletedEventArgs> GetAllRendezVoubycodeCompleted;
        
        public event System.EventHandler<GetAllRendezVouCompletedEventArgs> GetAllRendezVouCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertRendezVouCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateRendezVouCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteRendezVouCompleted;
        
        public event System.EventHandler<GetAllPaintCompletedEventArgs> GetAllPaintCompleted;
        
        public event System.EventHandler<GetAllPaintbycodeCompletedEventArgs> GetAllPaintbycodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertPaintCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePaintCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePaintCompleted;
        
        public event System.EventHandler<GetAllAnamneseCompletedEventArgs> GetAllAnamneseCompleted;
        
        public event System.EventHandler<GetAllAnamnesebycodeCompletedEventArgs> GetAllAnamnesebycodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertAnamneseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateAnamneseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAnamneseCompleted;
        
        public event System.EventHandler<GetAllExamenBinoculaireCompletedEventArgs> GetAllExamenBinoculaireCompleted;
        
        public event System.EventHandler<GetAllExamenBinoculairebycodeCompletedEventArgs> GetAllExamenBinoculairebycodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertExamenBinoculaireCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateExamenBinoculaireCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteExamenBinoculaireCompleted;
        
        public event System.EventHandler<GetAllExamensOptométriquesCompletedEventArgs> GetAllExamensOptométriquesCompleted;
        
        public event System.EventHandler<GetAllExamensOptométriquesbycodeCompletedEventArgs> GetAllExamensOptométriquesbycodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertExamensOptométriquesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateExamensOptométriquesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteExamensOptométriquesCompleted;
        
        public event System.EventHandler<GetAllMontureSupplementCompletedEventArgs> GetAllMontureSupplementCompleted;
        
        public event System.EventHandler<GetAllMontureSupplementbycleCompletedEventArgs> GetAllMontureSupplementbycleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertMontureSupplementCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateMontureSupplementCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteMontureSupplementCompleted;
        
        public event System.EventHandler<GetAllMontureCompletedEventArgs> GetAllMontureCompleted;
        
        public event System.EventHandler<GetAllMontureDateCompletedEventArgs> GetAllMontureDateCompleted;
        
        public event System.EventHandler<GetAllMontureDateLivraisonCompletedEventArgs> GetAllMontureDateLivraisonCompleted;
        
        public event System.EventHandler<GetAllMonturebyDossierCompletedEventArgs> GetAllMonturebyDossierCompleted;
        
        public event System.EventHandler<GetAllMonturebycodebarCompletedEventArgs> GetAllMonturebycodebarCompleted;
        
        public event System.EventHandler<GetAllMonturebycodeCompletedEventArgs> GetAllMonturebycodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertMontureCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateMontureCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteMontureCompleted;
        
        public event System.EventHandler<GetAllLentilleClientCompletedEventArgs> GetAllLentilleClientCompleted;
        
        public event System.EventHandler<GetAllLentilleClientDateCompletedEventArgs> GetAllLentilleClientDateCompleted;
        
        public event System.EventHandler<GetAllLentilleClientDateLivraisonCompletedEventArgs> GetAllLentilleClientDateLivraisonCompleted;
        
        public event System.EventHandler<GetAllLentilleClientbycodebarCompletedEventArgs> GetAllLentilleClientbycodebarCompleted;
        
        public event System.EventHandler<GetAllLentilleClientbyDossierCompletedEventArgs> GetAllLentilleClientbyDossierCompleted;
        
        public event System.EventHandler<GetAllLentilleClientbycodeCompletedEventArgs> GetAllLentilleClientbycodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertLentilleClientCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateLentilleClientCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteLentilleClientCompleted;
        
        public event System.EventHandler<GetAllLentilleCompletedEventArgs> GetAllLentilleCompleted;
        
        public event System.EventHandler<GetAllLentillebycodeCompletedEventArgs> GetAllLentillebycodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertLentilleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateLentilleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteLentilleCompleted;
        
        public event System.EventHandler<GetAllIncompatibiliteCompletedEventArgs> GetAllIncompatibiliteCompleted;
        
        public event System.EventHandler<GetAllIncompatibilitebySupplementCompletedEventArgs> GetAllIncompatibilitebySupplementCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertIncompatibiliteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateIncompatibiliteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteIncompatibiliteCompleted;
        
        public void DeleteCommande(NewOptics.SVC.Commande obj) {
            base.Channel.DeleteCommande(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteCommande(NewOptics.SVC.Commande obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteCommande(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteCommande(System.IAsyncResult result) {
            base.Channel.EndDeleteCommande(result);
        }
        
        private System.IAsyncResult OnBeginDeleteCommande(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Commande obj = ((NewOptics.SVC.Commande)(inValues[0]));
            return this.BeginDeleteCommande(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteCommande(System.IAsyncResult result) {
            this.EndDeleteCommande(result);
            return null;
        }
        
        private void OnDeleteCommandeCompleted(object state) {
            if ((this.DeleteCommandeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCommandeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCommandeAsync(NewOptics.SVC.Commande obj) {
            this.DeleteCommandeAsync(obj, null);
        }
        
        public void DeleteCommandeAsync(NewOptics.SVC.Commande obj, object userState) {
            if ((this.onBeginDeleteCommandeDelegate == null)) {
                this.onBeginDeleteCommandeDelegate = new BeginOperationDelegate(this.OnBeginDeleteCommande);
            }
            if ((this.onEndDeleteCommandeDelegate == null)) {
                this.onEndDeleteCommandeDelegate = new EndOperationDelegate(this.OnEndDeleteCommande);
            }
            if ((this.onDeleteCommandeCompletedDelegate == null)) {
                this.onDeleteCommandeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCommandeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCommandeDelegate, new object[] {
                        obj}, this.onEndDeleteCommandeDelegate, this.onDeleteCommandeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Recouf> GetAllRecouf() {
            return base.Channel.GetAllRecouf();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllRecouf(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllRecouf(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Recouf> EndGetAllRecouf(System.IAsyncResult result) {
            return base.Channel.EndGetAllRecouf(result);
        }
        
        private System.IAsyncResult OnBeginGetAllRecouf(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllRecouf(callback, asyncState);
        }
        
        private object[] OnEndGetAllRecouf(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Recouf> retVal = this.EndGetAllRecouf(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllRecoufCompleted(object state) {
            if ((this.GetAllRecoufCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllRecoufCompleted(this, new GetAllRecoufCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllRecoufAsync() {
            this.GetAllRecoufAsync(null);
        }
        
        public void GetAllRecoufAsync(object userState) {
            if ((this.onBeginGetAllRecoufDelegate == null)) {
                this.onBeginGetAllRecoufDelegate = new BeginOperationDelegate(this.OnBeginGetAllRecouf);
            }
            if ((this.onEndGetAllRecoufDelegate == null)) {
                this.onEndGetAllRecoufDelegate = new EndOperationDelegate(this.OnEndGetAllRecouf);
            }
            if ((this.onGetAllRecoufCompletedDelegate == null)) {
                this.onGetAllRecoufCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllRecoufCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllRecoufDelegate, null, this.onEndGetAllRecoufDelegate, this.onGetAllRecoufCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Recouf> GetAllRecoufBycode(int idpatient) {
            return base.Channel.GetAllRecoufBycode(idpatient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllRecoufBycode(int idpatient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllRecoufBycode(idpatient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Recouf> EndGetAllRecoufBycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllRecoufBycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllRecoufBycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idpatient = ((int)(inValues[0]));
            return this.BeginGetAllRecoufBycode(idpatient, callback, asyncState);
        }
        
        private object[] OnEndGetAllRecoufBycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Recouf> retVal = this.EndGetAllRecoufBycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllRecoufBycodeCompleted(object state) {
            if ((this.GetAllRecoufBycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllRecoufBycodeCompleted(this, new GetAllRecoufBycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllRecoufBycodeAsync(int idpatient) {
            this.GetAllRecoufBycodeAsync(idpatient, null);
        }
        
        public void GetAllRecoufBycodeAsync(int idpatient, object userState) {
            if ((this.onBeginGetAllRecoufBycodeDelegate == null)) {
                this.onBeginGetAllRecoufBycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllRecoufBycode);
            }
            if ((this.onEndGetAllRecoufBycodeDelegate == null)) {
                this.onEndGetAllRecoufBycodeDelegate = new EndOperationDelegate(this.OnEndGetAllRecoufBycode);
            }
            if ((this.onGetAllRecoufBycodeCompletedDelegate == null)) {
                this.onGetAllRecoufBycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllRecoufBycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllRecoufBycodeDelegate, new object[] {
                        idpatient}, this.onEndGetAllRecoufBycodeDelegate, this.onGetAllRecoufBycodeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Recouf> GetAllRecoufbydate(System.DateTime d1, System.DateTime d2) {
            return base.Channel.GetAllRecoufbydate(d1, d2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllRecoufbydate(System.DateTime d1, System.DateTime d2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllRecoufbydate(d1, d2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Recouf> EndGetAllRecoufbydate(System.IAsyncResult result) {
            return base.Channel.EndGetAllRecoufbydate(result);
        }
        
        private System.IAsyncResult OnBeginGetAllRecoufbydate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime d1 = ((System.DateTime)(inValues[0]));
            System.DateTime d2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllRecoufbydate(d1, d2, callback, asyncState);
        }
        
        private object[] OnEndGetAllRecoufbydate(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Recouf> retVal = this.EndGetAllRecoufbydate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllRecoufbydateCompleted(object state) {
            if ((this.GetAllRecoufbydateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllRecoufbydateCompleted(this, new GetAllRecoufbydateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllRecoufbydateAsync(System.DateTime d1, System.DateTime d2) {
            this.GetAllRecoufbydateAsync(d1, d2, null);
        }
        
        public void GetAllRecoufbydateAsync(System.DateTime d1, System.DateTime d2, object userState) {
            if ((this.onBeginGetAllRecoufbydateDelegate == null)) {
                this.onBeginGetAllRecoufbydateDelegate = new BeginOperationDelegate(this.OnBeginGetAllRecoufbydate);
            }
            if ((this.onEndGetAllRecoufbydateDelegate == null)) {
                this.onEndGetAllRecoufbydateDelegate = new EndOperationDelegate(this.OnEndGetAllRecoufbydate);
            }
            if ((this.onGetAllRecoufbydateCompletedDelegate == null)) {
                this.onGetAllRecoufbydateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllRecoufbydateCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllRecoufbydateDelegate, new object[] {
                        d1,
                        d2}, this.onEndGetAllRecoufbydateDelegate, this.onGetAllRecoufbydateCompletedDelegate, userState);
        }
        
        public bool InsertRecouf(NewOptics.SVC.Recouf obj) {
            return base.Channel.InsertRecouf(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertRecouf(NewOptics.SVC.Recouf obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertRecouf(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndInsertRecouf(System.IAsyncResult result) {
            return base.Channel.EndInsertRecouf(result);
        }
        
        private System.IAsyncResult OnBeginInsertRecouf(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Recouf obj = ((NewOptics.SVC.Recouf)(inValues[0]));
            return this.BeginInsertRecouf(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertRecouf(System.IAsyncResult result) {
            bool retVal = this.EndInsertRecouf(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertRecoufCompleted(object state) {
            if ((this.InsertRecoufCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertRecoufCompleted(this, new InsertRecoufCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertRecoufAsync(NewOptics.SVC.Recouf obj) {
            this.InsertRecoufAsync(obj, null);
        }
        
        public void InsertRecoufAsync(NewOptics.SVC.Recouf obj, object userState) {
            if ((this.onBeginInsertRecoufDelegate == null)) {
                this.onBeginInsertRecoufDelegate = new BeginOperationDelegate(this.OnBeginInsertRecouf);
            }
            if ((this.onEndInsertRecoufDelegate == null)) {
                this.onEndInsertRecoufDelegate = new EndOperationDelegate(this.OnEndInsertRecouf);
            }
            if ((this.onInsertRecoufCompletedDelegate == null)) {
                this.onInsertRecoufCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertRecoufCompleted);
            }
            base.InvokeAsync(this.onBeginInsertRecoufDelegate, new object[] {
                        obj}, this.onEndInsertRecoufDelegate, this.onInsertRecoufCompletedDelegate, userState);
        }
        
        public void UpdateRecouf(NewOptics.SVC.Recouf obj) {
            base.Channel.UpdateRecouf(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateRecouf(NewOptics.SVC.Recouf obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRecouf(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateRecouf(System.IAsyncResult result) {
            base.Channel.EndUpdateRecouf(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRecouf(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Recouf obj = ((NewOptics.SVC.Recouf)(inValues[0]));
            return this.BeginUpdateRecouf(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateRecouf(System.IAsyncResult result) {
            this.EndUpdateRecouf(result);
            return null;
        }
        
        private void OnUpdateRecoufCompleted(object state) {
            if ((this.UpdateRecoufCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRecoufCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRecoufAsync(NewOptics.SVC.Recouf obj) {
            this.UpdateRecoufAsync(obj, null);
        }
        
        public void UpdateRecoufAsync(NewOptics.SVC.Recouf obj, object userState) {
            if ((this.onBeginUpdateRecoufDelegate == null)) {
                this.onBeginUpdateRecoufDelegate = new BeginOperationDelegate(this.OnBeginUpdateRecouf);
            }
            if ((this.onEndUpdateRecoufDelegate == null)) {
                this.onEndUpdateRecoufDelegate = new EndOperationDelegate(this.OnEndUpdateRecouf);
            }
            if ((this.onUpdateRecoufCompletedDelegate == null)) {
                this.onUpdateRecoufCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRecoufCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRecoufDelegate, new object[] {
                        obj}, this.onEndUpdateRecoufDelegate, this.onUpdateRecoufCompletedDelegate, userState);
        }
        
        public void DeleteRecouf(NewOptics.SVC.Recouf obj) {
            base.Channel.DeleteRecouf(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteRecouf(NewOptics.SVC.Recouf obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRecouf(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteRecouf(System.IAsyncResult result) {
            base.Channel.EndDeleteRecouf(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRecouf(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Recouf obj = ((NewOptics.SVC.Recouf)(inValues[0]));
            return this.BeginDeleteRecouf(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteRecouf(System.IAsyncResult result) {
            this.EndDeleteRecouf(result);
            return null;
        }
        
        private void OnDeleteRecoufCompleted(object state) {
            if ((this.DeleteRecoufCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRecoufCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRecoufAsync(NewOptics.SVC.Recouf obj) {
            this.DeleteRecoufAsync(obj, null);
        }
        
        public void DeleteRecoufAsync(NewOptics.SVC.Recouf obj, object userState) {
            if ((this.onBeginDeleteRecoufDelegate == null)) {
                this.onBeginDeleteRecoufDelegate = new BeginOperationDelegate(this.OnBeginDeleteRecouf);
            }
            if ((this.onEndDeleteRecoufDelegate == null)) {
                this.onEndDeleteRecoufDelegate = new EndOperationDelegate(this.OnEndDeleteRecouf);
            }
            if ((this.onDeleteRecoufCompletedDelegate == null)) {
                this.onDeleteRecoufCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRecoufCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRecoufDelegate, new object[] {
                        obj}, this.onEndDeleteRecoufDelegate, this.onDeleteRecoufCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Recept> GetAllRecept() {
            return base.Channel.GetAllRecept();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllRecept(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllRecept(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Recept> EndGetAllRecept(System.IAsyncResult result) {
            return base.Channel.EndGetAllRecept(result);
        }
        
        private System.IAsyncResult OnBeginGetAllRecept(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllRecept(callback, asyncState);
        }
        
        private object[] OnEndGetAllRecept(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Recept> retVal = this.EndGetAllRecept(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllReceptCompleted(object state) {
            if ((this.GetAllReceptCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllReceptCompleted(this, new GetAllReceptCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllReceptAsync() {
            this.GetAllReceptAsync(null);
        }
        
        public void GetAllReceptAsync(object userState) {
            if ((this.onBeginGetAllReceptDelegate == null)) {
                this.onBeginGetAllReceptDelegate = new BeginOperationDelegate(this.OnBeginGetAllRecept);
            }
            if ((this.onEndGetAllReceptDelegate == null)) {
                this.onEndGetAllReceptDelegate = new EndOperationDelegate(this.OnEndGetAllRecept);
            }
            if ((this.onGetAllReceptCompletedDelegate == null)) {
                this.onGetAllReceptCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllReceptCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllReceptDelegate, null, this.onEndGetAllReceptDelegate, this.onGetAllReceptCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Recept> GetAllReceptBYNFACT(string nfact) {
            return base.Channel.GetAllReceptBYNFACT(nfact);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllReceptBYNFACT(string nfact, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllReceptBYNFACT(nfact, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Recept> EndGetAllReceptBYNFACT(System.IAsyncResult result) {
            return base.Channel.EndGetAllReceptBYNFACT(result);
        }
        
        private System.IAsyncResult OnBeginGetAllReceptBYNFACT(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nfact = ((string)(inValues[0]));
            return this.BeginGetAllReceptBYNFACT(nfact, callback, asyncState);
        }
        
        private object[] OnEndGetAllReceptBYNFACT(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Recept> retVal = this.EndGetAllReceptBYNFACT(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllReceptBYNFACTCompleted(object state) {
            if ((this.GetAllReceptBYNFACTCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllReceptBYNFACTCompleted(this, new GetAllReceptBYNFACTCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllReceptBYNFACTAsync(string nfact) {
            this.GetAllReceptBYNFACTAsync(nfact, null);
        }
        
        public void GetAllReceptBYNFACTAsync(string nfact, object userState) {
            if ((this.onBeginGetAllReceptBYNFACTDelegate == null)) {
                this.onBeginGetAllReceptBYNFACTDelegate = new BeginOperationDelegate(this.OnBeginGetAllReceptBYNFACT);
            }
            if ((this.onEndGetAllReceptBYNFACTDelegate == null)) {
                this.onEndGetAllReceptBYNFACTDelegate = new EndOperationDelegate(this.OnEndGetAllReceptBYNFACT);
            }
            if ((this.onGetAllReceptBYNFACTCompletedDelegate == null)) {
                this.onGetAllReceptBYNFACTCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllReceptBYNFACTCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllReceptBYNFACTDelegate, new object[] {
                        nfact}, this.onEndGetAllReceptBYNFACTDelegate, this.onGetAllReceptBYNFACTCompletedDelegate, userState);
        }
        
        public bool InsertRecept(NewOptics.SVC.Recept obj) {
            return base.Channel.InsertRecept(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertRecept(NewOptics.SVC.Recept obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertRecept(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndInsertRecept(System.IAsyncResult result) {
            return base.Channel.EndInsertRecept(result);
        }
        
        private System.IAsyncResult OnBeginInsertRecept(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Recept obj = ((NewOptics.SVC.Recept)(inValues[0]));
            return this.BeginInsertRecept(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertRecept(System.IAsyncResult result) {
            bool retVal = this.EndInsertRecept(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertReceptCompleted(object state) {
            if ((this.InsertReceptCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertReceptCompleted(this, new InsertReceptCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertReceptAsync(NewOptics.SVC.Recept obj) {
            this.InsertReceptAsync(obj, null);
        }
        
        public void InsertReceptAsync(NewOptics.SVC.Recept obj, object userState) {
            if ((this.onBeginInsertReceptDelegate == null)) {
                this.onBeginInsertReceptDelegate = new BeginOperationDelegate(this.OnBeginInsertRecept);
            }
            if ((this.onEndInsertReceptDelegate == null)) {
                this.onEndInsertReceptDelegate = new EndOperationDelegate(this.OnEndInsertRecept);
            }
            if ((this.onInsertReceptCompletedDelegate == null)) {
                this.onInsertReceptCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertReceptCompleted);
            }
            base.InvokeAsync(this.onBeginInsertReceptDelegate, new object[] {
                        obj}, this.onEndInsertReceptDelegate, this.onInsertReceptCompletedDelegate, userState);
        }
        
        public void UpdateRecept(NewOptics.SVC.Recept obj) {
            base.Channel.UpdateRecept(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateRecept(NewOptics.SVC.Recept obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRecept(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateRecept(System.IAsyncResult result) {
            base.Channel.EndUpdateRecept(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRecept(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Recept obj = ((NewOptics.SVC.Recept)(inValues[0]));
            return this.BeginUpdateRecept(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateRecept(System.IAsyncResult result) {
            this.EndUpdateRecept(result);
            return null;
        }
        
        private void OnUpdateReceptCompleted(object state) {
            if ((this.UpdateReceptCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateReceptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateReceptAsync(NewOptics.SVC.Recept obj) {
            this.UpdateReceptAsync(obj, null);
        }
        
        public void UpdateReceptAsync(NewOptics.SVC.Recept obj, object userState) {
            if ((this.onBeginUpdateReceptDelegate == null)) {
                this.onBeginUpdateReceptDelegate = new BeginOperationDelegate(this.OnBeginUpdateRecept);
            }
            if ((this.onEndUpdateReceptDelegate == null)) {
                this.onEndUpdateReceptDelegate = new EndOperationDelegate(this.OnEndUpdateRecept);
            }
            if ((this.onUpdateReceptCompletedDelegate == null)) {
                this.onUpdateReceptCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateReceptCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateReceptDelegate, new object[] {
                        obj}, this.onEndUpdateReceptDelegate, this.onUpdateReceptCompletedDelegate, userState);
        }
        
        public void DeleteRecept(NewOptics.SVC.Recept obj) {
            base.Channel.DeleteRecept(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteRecept(NewOptics.SVC.Recept obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRecept(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteRecept(System.IAsyncResult result) {
            base.Channel.EndDeleteRecept(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRecept(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Recept obj = ((NewOptics.SVC.Recept)(inValues[0]));
            return this.BeginDeleteRecept(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteRecept(System.IAsyncResult result) {
            this.EndDeleteRecept(result);
            return null;
        }
        
        private void OnDeleteReceptCompleted(object state) {
            if ((this.DeleteReceptCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteReceptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteReceptAsync(NewOptics.SVC.Recept obj) {
            this.DeleteReceptAsync(obj, null);
        }
        
        public void DeleteReceptAsync(NewOptics.SVC.Recept obj, object userState) {
            if ((this.onBeginDeleteReceptDelegate == null)) {
                this.onBeginDeleteReceptDelegate = new BeginOperationDelegate(this.OnBeginDeleteRecept);
            }
            if ((this.onEndDeleteReceptDelegate == null)) {
                this.onEndDeleteReceptDelegate = new EndOperationDelegate(this.OnEndDeleteRecept);
            }
            if ((this.onDeleteReceptCompletedDelegate == null)) {
                this.onDeleteReceptCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteReceptCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteReceptDelegate, new object[] {
                        obj}, this.onEndDeleteReceptDelegate, this.onDeleteReceptCompletedDelegate, userState);
        }
        
        public bool Connect(NewOptics.SVC.Client client) {
            return base.Channel.Connect(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnect(NewOptics.SVC.Client client, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnect(client, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndConnect(System.IAsyncResult result) {
            return base.Channel.EndConnect(result);
        }
        
        private System.IAsyncResult OnBeginConnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Client client = ((NewOptics.SVC.Client)(inValues[0]));
            return this.BeginConnect(client, callback, asyncState);
        }
        
        private object[] OnEndConnect(System.IAsyncResult result) {
            bool retVal = this.EndConnect(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConnectCompleted(object state) {
            if ((this.ConnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectCompleted(this, new ConnectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectAsync(NewOptics.SVC.Client client) {
            this.ConnectAsync(client, null);
        }
        
        public void ConnectAsync(NewOptics.SVC.Client client, object userState) {
            if ((this.onBeginConnectDelegate == null)) {
                this.onBeginConnectDelegate = new BeginOperationDelegate(this.OnBeginConnect);
            }
            if ((this.onEndConnectDelegate == null)) {
                this.onEndConnectDelegate = new EndOperationDelegate(this.OnEndConnect);
            }
            if ((this.onConnectCompletedDelegate == null)) {
                this.onConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectCompleted);
            }
            base.InvokeAsync(this.onBeginConnectDelegate, new object[] {
                        client}, this.onEndConnectDelegate, this.onConnectCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Client> GetAllClient() {
            return base.Channel.GetAllClient();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllClient(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllClient(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Client> EndGetAllClient(System.IAsyncResult result) {
            return base.Channel.EndGetAllClient(result);
        }
        
        private System.IAsyncResult OnBeginGetAllClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllClient(callback, asyncState);
        }
        
        private object[] OnEndGetAllClient(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Client> retVal = this.EndGetAllClient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllClientCompleted(object state) {
            if ((this.GetAllClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllClientCompleted(this, new GetAllClientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllClientAsync() {
            this.GetAllClientAsync(null);
        }
        
        public void GetAllClientAsync(object userState) {
            if ((this.onBeginGetAllClientDelegate == null)) {
                this.onBeginGetAllClientDelegate = new BeginOperationDelegate(this.OnBeginGetAllClient);
            }
            if ((this.onEndGetAllClientDelegate == null)) {
                this.onEndGetAllClientDelegate = new EndOperationDelegate(this.OnEndGetAllClient);
            }
            if ((this.onGetAllClientCompletedDelegate == null)) {
                this.onGetAllClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClientCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllClientDelegate, null, this.onEndGetAllClientDelegate, this.onGetAllClientCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.Dictionary<NewOptics.SVC.Client, object> GetAllClientDict() {
            return base.Channel.GetAllClientDict();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllClientDict(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllClientDict(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.Dictionary<NewOptics.SVC.Client, object> EndGetAllClientDict(System.IAsyncResult result) {
            return base.Channel.EndGetAllClientDict(result);
        }
        
        private System.IAsyncResult OnBeginGetAllClientDict(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllClientDict(callback, asyncState);
        }
        
        private object[] OnEndGetAllClientDict(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<NewOptics.SVC.Client, object> retVal = this.EndGetAllClientDict(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllClientDictCompleted(object state) {
            if ((this.GetAllClientDictCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllClientDictCompleted(this, new GetAllClientDictCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllClientDictAsync() {
            this.GetAllClientDictAsync(null);
        }
        
        public void GetAllClientDictAsync(object userState) {
            if ((this.onBeginGetAllClientDictDelegate == null)) {
                this.onBeginGetAllClientDictDelegate = new BeginOperationDelegate(this.OnBeginGetAllClientDict);
            }
            if ((this.onEndGetAllClientDictDelegate == null)) {
                this.onEndGetAllClientDictDelegate = new EndOperationDelegate(this.OnEndGetAllClientDict);
            }
            if ((this.onGetAllClientDictCompletedDelegate == null)) {
                this.onGetAllClientDictCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClientDictCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllClientDictDelegate, null, this.onEndGetAllClientDictDelegate, this.onGetAllClientDictCompletedDelegate, userState);
        }
        
        public void ReConnect(NewOptics.SVC.Client LocalClient) {
            base.Channel.ReConnect(LocalClient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReConnect(NewOptics.SVC.Client LocalClient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReConnect(LocalClient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndReConnect(System.IAsyncResult result) {
            base.Channel.EndReConnect(result);
        }
        
        private System.IAsyncResult OnBeginReConnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Client LocalClient = ((NewOptics.SVC.Client)(inValues[0]));
            return this.BeginReConnect(LocalClient, callback, asyncState);
        }
        
        private object[] OnEndReConnect(System.IAsyncResult result) {
            this.EndReConnect(result);
            return null;
        }
        
        private void OnReConnectCompleted(object state) {
            if ((this.ReConnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReConnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReConnectAsync(NewOptics.SVC.Client LocalClient) {
            this.ReConnectAsync(LocalClient, null);
        }
        
        public void ReConnectAsync(NewOptics.SVC.Client LocalClient, object userState) {
            if ((this.onBeginReConnectDelegate == null)) {
                this.onBeginReConnectDelegate = new BeginOperationDelegate(this.OnBeginReConnect);
            }
            if ((this.onEndReConnectDelegate == null)) {
                this.onEndReConnectDelegate = new EndOperationDelegate(this.OnEndReConnect);
            }
            if ((this.onReConnectCompletedDelegate == null)) {
                this.onReConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReConnectCompleted);
            }
            base.InvokeAsync(this.onBeginReConnectDelegate, new object[] {
                        LocalClient}, this.onEndReConnectDelegate, this.onReConnectCompletedDelegate, userState);
        }
        
        public void Say(NewOptics.SVC.Message msg) {
            base.Channel.Say(msg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSay(NewOptics.SVC.Message msg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSay(msg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSay(System.IAsyncResult result) {
            base.Channel.EndSay(result);
        }
        
        private System.IAsyncResult OnBeginSay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Message msg = ((NewOptics.SVC.Message)(inValues[0]));
            return this.BeginSay(msg, callback, asyncState);
        }
        
        private object[] OnEndSay(System.IAsyncResult result) {
            this.EndSay(result);
            return null;
        }
        
        private void OnSayCompleted(object state) {
            if ((this.SayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SayAsync(NewOptics.SVC.Message msg) {
            this.SayAsync(msg, null);
        }
        
        public void SayAsync(NewOptics.SVC.Message msg, object userState) {
            if ((this.onBeginSayDelegate == null)) {
                this.onBeginSayDelegate = new BeginOperationDelegate(this.OnBeginSay);
            }
            if ((this.onEndSayDelegate == null)) {
                this.onEndSayDelegate = new EndOperationDelegate(this.OnEndSay);
            }
            if ((this.onSayCompletedDelegate == null)) {
                this.onSayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSayCompleted);
            }
            base.InvokeAsync(this.onBeginSayDelegate, new object[] {
                        msg}, this.onEndSayDelegate, this.onSayCompletedDelegate, userState);
        }
        
        public void Whisper(NewOptics.SVC.Message msg, NewOptics.SVC.Client receiver) {
            base.Channel.Whisper(msg, receiver);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWhisper(NewOptics.SVC.Message msg, NewOptics.SVC.Client receiver, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWhisper(msg, receiver, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndWhisper(System.IAsyncResult result) {
            base.Channel.EndWhisper(result);
        }
        
        private System.IAsyncResult OnBeginWhisper(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Message msg = ((NewOptics.SVC.Message)(inValues[0]));
            NewOptics.SVC.Client receiver = ((NewOptics.SVC.Client)(inValues[1]));
            return this.BeginWhisper(msg, receiver, callback, asyncState);
        }
        
        private object[] OnEndWhisper(System.IAsyncResult result) {
            this.EndWhisper(result);
            return null;
        }
        
        private void OnWhisperCompleted(object state) {
            if ((this.WhisperCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WhisperCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WhisperAsync(NewOptics.SVC.Message msg, NewOptics.SVC.Client receiver) {
            this.WhisperAsync(msg, receiver, null);
        }
        
        public void WhisperAsync(NewOptics.SVC.Message msg, NewOptics.SVC.Client receiver, object userState) {
            if ((this.onBeginWhisperDelegate == null)) {
                this.onBeginWhisperDelegate = new BeginOperationDelegate(this.OnBeginWhisper);
            }
            if ((this.onEndWhisperDelegate == null)) {
                this.onEndWhisperDelegate = new EndOperationDelegate(this.OnEndWhisper);
            }
            if ((this.onWhisperCompletedDelegate == null)) {
                this.onWhisperCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWhisperCompleted);
            }
            base.InvokeAsync(this.onBeginWhisperDelegate, new object[] {
                        msg,
                        receiver}, this.onEndWhisperDelegate, this.onWhisperCompletedDelegate, userState);
        }
        
        public void IsWriting(NewOptics.SVC.Client client) {
            base.Channel.IsWriting(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsWriting(NewOptics.SVC.Client client, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsWriting(client, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndIsWriting(System.IAsyncResult result) {
            base.Channel.EndIsWriting(result);
        }
        
        private System.IAsyncResult OnBeginIsWriting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Client client = ((NewOptics.SVC.Client)(inValues[0]));
            return this.BeginIsWriting(client, callback, asyncState);
        }
        
        private object[] OnEndIsWriting(System.IAsyncResult result) {
            this.EndIsWriting(result);
            return null;
        }
        
        private void OnIsWritingCompleted(object state) {
            if ((this.IsWritingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsWritingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsWritingAsync(NewOptics.SVC.Client client) {
            this.IsWritingAsync(client, null);
        }
        
        public void IsWritingAsync(NewOptics.SVC.Client client, object userState) {
            if ((this.onBeginIsWritingDelegate == null)) {
                this.onBeginIsWritingDelegate = new BeginOperationDelegate(this.OnBeginIsWriting);
            }
            if ((this.onEndIsWritingDelegate == null)) {
                this.onEndIsWritingDelegate = new EndOperationDelegate(this.OnEndIsWriting);
            }
            if ((this.onIsWritingCompletedDelegate == null)) {
                this.onIsWritingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsWritingCompleted);
            }
            base.InvokeAsync(this.onBeginIsWritingDelegate, new object[] {
                        client}, this.onEndIsWritingDelegate, this.onIsWritingCompletedDelegate, userState);
        }
        
        public bool SendFile(NewOptics.SVC.FileMessage fileMsg, NewOptics.SVC.Client receiver) {
            return base.Channel.SendFile(fileMsg, receiver);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendFile(NewOptics.SVC.FileMessage fileMsg, NewOptics.SVC.Client receiver, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendFile(fileMsg, receiver, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSendFile(System.IAsyncResult result) {
            return base.Channel.EndSendFile(result);
        }
        
        private System.IAsyncResult OnBeginSendFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.FileMessage fileMsg = ((NewOptics.SVC.FileMessage)(inValues[0]));
            NewOptics.SVC.Client receiver = ((NewOptics.SVC.Client)(inValues[1]));
            return this.BeginSendFile(fileMsg, receiver, callback, asyncState);
        }
        
        private object[] OnEndSendFile(System.IAsyncResult result) {
            bool retVal = this.EndSendFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendFileCompleted(object state) {
            if ((this.SendFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendFileCompleted(this, new SendFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendFileAsync(NewOptics.SVC.FileMessage fileMsg, NewOptics.SVC.Client receiver) {
            this.SendFileAsync(fileMsg, receiver, null);
        }
        
        public void SendFileAsync(NewOptics.SVC.FileMessage fileMsg, NewOptics.SVC.Client receiver, object userState) {
            if ((this.onBeginSendFileDelegate == null)) {
                this.onBeginSendFileDelegate = new BeginOperationDelegate(this.OnBeginSendFile);
            }
            if ((this.onEndSendFileDelegate == null)) {
                this.onEndSendFileDelegate = new EndOperationDelegate(this.OnEndSendFile);
            }
            if ((this.onSendFileCompletedDelegate == null)) {
                this.onSendFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendFileCompleted);
            }
            base.InvokeAsync(this.onBeginSendFileDelegate, new object[] {
                        fileMsg,
                        receiver}, this.onEndSendFileDelegate, this.onSendFileCompletedDelegate, userState);
        }
        
        public void Disconnect(NewOptics.SVC.Client client) {
            base.Channel.Disconnect(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDisconnect(NewOptics.SVC.Client client, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisconnect(client, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDisconnect(System.IAsyncResult result) {
            base.Channel.EndDisconnect(result);
        }
        
        private System.IAsyncResult OnBeginDisconnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Client client = ((NewOptics.SVC.Client)(inValues[0]));
            return this.BeginDisconnect(client, callback, asyncState);
        }
        
        private object[] OnEndDisconnect(System.IAsyncResult result) {
            this.EndDisconnect(result);
            return null;
        }
        
        private void OnDisconnectCompleted(object state) {
            if ((this.DisconnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisconnectAsync(NewOptics.SVC.Client client) {
            this.DisconnectAsync(client, null);
        }
        
        public void DisconnectAsync(NewOptics.SVC.Client client, object userState) {
            if ((this.onBeginDisconnectDelegate == null)) {
                this.onBeginDisconnectDelegate = new BeginOperationDelegate(this.OnBeginDisconnect);
            }
            if ((this.onEndDisconnectDelegate == null)) {
                this.onEndDisconnectDelegate = new EndOperationDelegate(this.OnEndDisconnect);
            }
            if ((this.onDisconnectCompletedDelegate == null)) {
                this.onDisconnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisconnectCompleted);
            }
            base.InvokeAsync(this.onBeginDisconnectDelegate, new object[] {
                        client}, this.onEndDisconnectDelegate, this.onDisconnectCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.VerreAssocie> GetAllVerreAssocie() {
            return base.Channel.GetAllVerreAssocie();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllVerreAssocie(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllVerreAssocie(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.VerreAssocie> EndGetAllVerreAssocie(System.IAsyncResult result) {
            return base.Channel.EndGetAllVerreAssocie(result);
        }
        
        private System.IAsyncResult OnBeginGetAllVerreAssocie(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllVerreAssocie(callback, asyncState);
        }
        
        private object[] OnEndGetAllVerreAssocie(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.VerreAssocie> retVal = this.EndGetAllVerreAssocie(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllVerreAssocieCompleted(object state) {
            if ((this.GetAllVerreAssocieCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllVerreAssocieCompleted(this, new GetAllVerreAssocieCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllVerreAssocieAsync() {
            this.GetAllVerreAssocieAsync(null);
        }
        
        public void GetAllVerreAssocieAsync(object userState) {
            if ((this.onBeginGetAllVerreAssocieDelegate == null)) {
                this.onBeginGetAllVerreAssocieDelegate = new BeginOperationDelegate(this.OnBeginGetAllVerreAssocie);
            }
            if ((this.onEndGetAllVerreAssocieDelegate == null)) {
                this.onEndGetAllVerreAssocieDelegate = new EndOperationDelegate(this.OnEndGetAllVerreAssocie);
            }
            if ((this.onGetAllVerreAssocieCompletedDelegate == null)) {
                this.onGetAllVerreAssocieCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllVerreAssocieCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllVerreAssocieDelegate, null, this.onEndGetAllVerreAssocieDelegate, this.onGetAllVerreAssocieCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.VerreAssocie> GetAllVerreAssociebySupplement(string code) {
            return base.Channel.GetAllVerreAssociebySupplement(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllVerreAssociebySupplement(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllVerreAssociebySupplement(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.VerreAssocie> EndGetAllVerreAssociebySupplement(System.IAsyncResult result) {
            return base.Channel.EndGetAllVerreAssociebySupplement(result);
        }
        
        private System.IAsyncResult OnBeginGetAllVerreAssociebySupplement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetAllVerreAssociebySupplement(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllVerreAssociebySupplement(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.VerreAssocie> retVal = this.EndGetAllVerreAssociebySupplement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllVerreAssociebySupplementCompleted(object state) {
            if ((this.GetAllVerreAssociebySupplementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllVerreAssociebySupplementCompleted(this, new GetAllVerreAssociebySupplementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllVerreAssociebySupplementAsync(string code) {
            this.GetAllVerreAssociebySupplementAsync(code, null);
        }
        
        public void GetAllVerreAssociebySupplementAsync(string code, object userState) {
            if ((this.onBeginGetAllVerreAssociebySupplementDelegate == null)) {
                this.onBeginGetAllVerreAssociebySupplementDelegate = new BeginOperationDelegate(this.OnBeginGetAllVerreAssociebySupplement);
            }
            if ((this.onEndGetAllVerreAssociebySupplementDelegate == null)) {
                this.onEndGetAllVerreAssociebySupplementDelegate = new EndOperationDelegate(this.OnEndGetAllVerreAssociebySupplement);
            }
            if ((this.onGetAllVerreAssociebySupplementCompletedDelegate == null)) {
                this.onGetAllVerreAssociebySupplementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllVerreAssociebySupplementCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllVerreAssociebySupplementDelegate, new object[] {
                        code}, this.onEndGetAllVerreAssociebySupplementDelegate, this.onGetAllVerreAssociebySupplementCompletedDelegate, userState);
        }
        
        public void InsertVerreAssocie(NewOptics.SVC.VerreAssocie obj) {
            base.Channel.InsertVerreAssocie(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertVerreAssocie(NewOptics.SVC.VerreAssocie obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertVerreAssocie(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertVerreAssocie(System.IAsyncResult result) {
            base.Channel.EndInsertVerreAssocie(result);
        }
        
        private System.IAsyncResult OnBeginInsertVerreAssocie(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.VerreAssocie obj = ((NewOptics.SVC.VerreAssocie)(inValues[0]));
            return this.BeginInsertVerreAssocie(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertVerreAssocie(System.IAsyncResult result) {
            this.EndInsertVerreAssocie(result);
            return null;
        }
        
        private void OnInsertVerreAssocieCompleted(object state) {
            if ((this.InsertVerreAssocieCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertVerreAssocieCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertVerreAssocieAsync(NewOptics.SVC.VerreAssocie obj) {
            this.InsertVerreAssocieAsync(obj, null);
        }
        
        public void InsertVerreAssocieAsync(NewOptics.SVC.VerreAssocie obj, object userState) {
            if ((this.onBeginInsertVerreAssocieDelegate == null)) {
                this.onBeginInsertVerreAssocieDelegate = new BeginOperationDelegate(this.OnBeginInsertVerreAssocie);
            }
            if ((this.onEndInsertVerreAssocieDelegate == null)) {
                this.onEndInsertVerreAssocieDelegate = new EndOperationDelegate(this.OnEndInsertVerreAssocie);
            }
            if ((this.onInsertVerreAssocieCompletedDelegate == null)) {
                this.onInsertVerreAssocieCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertVerreAssocieCompleted);
            }
            base.InvokeAsync(this.onBeginInsertVerreAssocieDelegate, new object[] {
                        obj}, this.onEndInsertVerreAssocieDelegate, this.onInsertVerreAssocieCompletedDelegate, userState);
        }
        
        public void UpdateVerreAssocie(NewOptics.SVC.VerreAssocie obj) {
            base.Channel.UpdateVerreAssocie(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateVerreAssocie(NewOptics.SVC.VerreAssocie obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateVerreAssocie(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateVerreAssocie(System.IAsyncResult result) {
            base.Channel.EndUpdateVerreAssocie(result);
        }
        
        private System.IAsyncResult OnBeginUpdateVerreAssocie(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.VerreAssocie obj = ((NewOptics.SVC.VerreAssocie)(inValues[0]));
            return this.BeginUpdateVerreAssocie(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateVerreAssocie(System.IAsyncResult result) {
            this.EndUpdateVerreAssocie(result);
            return null;
        }
        
        private void OnUpdateVerreAssocieCompleted(object state) {
            if ((this.UpdateVerreAssocieCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateVerreAssocieCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateVerreAssocieAsync(NewOptics.SVC.VerreAssocie obj) {
            this.UpdateVerreAssocieAsync(obj, null);
        }
        
        public void UpdateVerreAssocieAsync(NewOptics.SVC.VerreAssocie obj, object userState) {
            if ((this.onBeginUpdateVerreAssocieDelegate == null)) {
                this.onBeginUpdateVerreAssocieDelegate = new BeginOperationDelegate(this.OnBeginUpdateVerreAssocie);
            }
            if ((this.onEndUpdateVerreAssocieDelegate == null)) {
                this.onEndUpdateVerreAssocieDelegate = new EndOperationDelegate(this.OnEndUpdateVerreAssocie);
            }
            if ((this.onUpdateVerreAssocieCompletedDelegate == null)) {
                this.onUpdateVerreAssocieCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateVerreAssocieCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateVerreAssocieDelegate, new object[] {
                        obj}, this.onEndUpdateVerreAssocieDelegate, this.onUpdateVerreAssocieCompletedDelegate, userState);
        }
        
        public void DeleteVerreAssocie(NewOptics.SVC.VerreAssocie obj) {
            base.Channel.DeleteVerreAssocie(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteVerreAssocie(NewOptics.SVC.VerreAssocie obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteVerreAssocie(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteVerreAssocie(System.IAsyncResult result) {
            base.Channel.EndDeleteVerreAssocie(result);
        }
        
        private System.IAsyncResult OnBeginDeleteVerreAssocie(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.VerreAssocie obj = ((NewOptics.SVC.VerreAssocie)(inValues[0]));
            return this.BeginDeleteVerreAssocie(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteVerreAssocie(System.IAsyncResult result) {
            this.EndDeleteVerreAssocie(result);
            return null;
        }
        
        private void OnDeleteVerreAssocieCompleted(object state) {
            if ((this.DeleteVerreAssocieCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteVerreAssocieCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteVerreAssocieAsync(NewOptics.SVC.VerreAssocie obj) {
            this.DeleteVerreAssocieAsync(obj, null);
        }
        
        public void DeleteVerreAssocieAsync(NewOptics.SVC.VerreAssocie obj, object userState) {
            if ((this.onBeginDeleteVerreAssocieDelegate == null)) {
                this.onBeginDeleteVerreAssocieDelegate = new BeginOperationDelegate(this.OnBeginDeleteVerreAssocie);
            }
            if ((this.onEndDeleteVerreAssocieDelegate == null)) {
                this.onEndDeleteVerreAssocieDelegate = new EndOperationDelegate(this.OnEndDeleteVerreAssocie);
            }
            if ((this.onDeleteVerreAssocieCompletedDelegate == null)) {
                this.onDeleteVerreAssocieCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteVerreAssocieCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteVerreAssocieDelegate, new object[] {
                        obj}, this.onEndDeleteVerreAssocieDelegate, this.onDeleteVerreAssocieCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Supplement> GetAllSupplement() {
            return base.Channel.GetAllSupplement();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllSupplement(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllSupplement(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Supplement> EndGetAllSupplement(System.IAsyncResult result) {
            return base.Channel.EndGetAllSupplement(result);
        }
        
        private System.IAsyncResult OnBeginGetAllSupplement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllSupplement(callback, asyncState);
        }
        
        private object[] OnEndGetAllSupplement(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Supplement> retVal = this.EndGetAllSupplement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllSupplementCompleted(object state) {
            if ((this.GetAllSupplementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllSupplementCompleted(this, new GetAllSupplementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllSupplementAsync() {
            this.GetAllSupplementAsync(null);
        }
        
        public void GetAllSupplementAsync(object userState) {
            if ((this.onBeginGetAllSupplementDelegate == null)) {
                this.onBeginGetAllSupplementDelegate = new BeginOperationDelegate(this.OnBeginGetAllSupplement);
            }
            if ((this.onEndGetAllSupplementDelegate == null)) {
                this.onEndGetAllSupplementDelegate = new EndOperationDelegate(this.OnEndGetAllSupplement);
            }
            if ((this.onGetAllSupplementCompletedDelegate == null)) {
                this.onGetAllSupplementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllSupplementCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllSupplementDelegate, null, this.onEndGetAllSupplementDelegate, this.onGetAllSupplementCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Supplement> GetAllSupplementbycode(int code) {
            return base.Channel.GetAllSupplementbycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllSupplementbycode(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllSupplementbycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Supplement> EndGetAllSupplementbycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllSupplementbycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllSupplementbycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginGetAllSupplementbycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllSupplementbycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Supplement> retVal = this.EndGetAllSupplementbycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllSupplementbycodeCompleted(object state) {
            if ((this.GetAllSupplementbycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllSupplementbycodeCompleted(this, new GetAllSupplementbycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllSupplementbycodeAsync(int code) {
            this.GetAllSupplementbycodeAsync(code, null);
        }
        
        public void GetAllSupplementbycodeAsync(int code, object userState) {
            if ((this.onBeginGetAllSupplementbycodeDelegate == null)) {
                this.onBeginGetAllSupplementbycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllSupplementbycode);
            }
            if ((this.onEndGetAllSupplementbycodeDelegate == null)) {
                this.onEndGetAllSupplementbycodeDelegate = new EndOperationDelegate(this.OnEndGetAllSupplementbycode);
            }
            if ((this.onGetAllSupplementbycodeCompletedDelegate == null)) {
                this.onGetAllSupplementbycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllSupplementbycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllSupplementbycodeDelegate, new object[] {
                        code}, this.onEndGetAllSupplementbycodeDelegate, this.onGetAllSupplementbycodeCompletedDelegate, userState);
        }
        
        public void InsertSupplement(NewOptics.SVC.Supplement obj) {
            base.Channel.InsertSupplement(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertSupplement(NewOptics.SVC.Supplement obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertSupplement(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertSupplement(System.IAsyncResult result) {
            base.Channel.EndInsertSupplement(result);
        }
        
        private System.IAsyncResult OnBeginInsertSupplement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Supplement obj = ((NewOptics.SVC.Supplement)(inValues[0]));
            return this.BeginInsertSupplement(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertSupplement(System.IAsyncResult result) {
            this.EndInsertSupplement(result);
            return null;
        }
        
        private void OnInsertSupplementCompleted(object state) {
            if ((this.InsertSupplementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertSupplementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertSupplementAsync(NewOptics.SVC.Supplement obj) {
            this.InsertSupplementAsync(obj, null);
        }
        
        public void InsertSupplementAsync(NewOptics.SVC.Supplement obj, object userState) {
            if ((this.onBeginInsertSupplementDelegate == null)) {
                this.onBeginInsertSupplementDelegate = new BeginOperationDelegate(this.OnBeginInsertSupplement);
            }
            if ((this.onEndInsertSupplementDelegate == null)) {
                this.onEndInsertSupplementDelegate = new EndOperationDelegate(this.OnEndInsertSupplement);
            }
            if ((this.onInsertSupplementCompletedDelegate == null)) {
                this.onInsertSupplementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertSupplementCompleted);
            }
            base.InvokeAsync(this.onBeginInsertSupplementDelegate, new object[] {
                        obj}, this.onEndInsertSupplementDelegate, this.onInsertSupplementCompletedDelegate, userState);
        }
        
        public void UpdateSupplement(NewOptics.SVC.Supplement obj) {
            base.Channel.UpdateSupplement(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateSupplement(NewOptics.SVC.Supplement obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSupplement(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateSupplement(System.IAsyncResult result) {
            base.Channel.EndUpdateSupplement(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSupplement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Supplement obj = ((NewOptics.SVC.Supplement)(inValues[0]));
            return this.BeginUpdateSupplement(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateSupplement(System.IAsyncResult result) {
            this.EndUpdateSupplement(result);
            return null;
        }
        
        private void OnUpdateSupplementCompleted(object state) {
            if ((this.UpdateSupplementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSupplementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSupplementAsync(NewOptics.SVC.Supplement obj) {
            this.UpdateSupplementAsync(obj, null);
        }
        
        public void UpdateSupplementAsync(NewOptics.SVC.Supplement obj, object userState) {
            if ((this.onBeginUpdateSupplementDelegate == null)) {
                this.onBeginUpdateSupplementDelegate = new BeginOperationDelegate(this.OnBeginUpdateSupplement);
            }
            if ((this.onEndUpdateSupplementDelegate == null)) {
                this.onEndUpdateSupplementDelegate = new EndOperationDelegate(this.OnEndUpdateSupplement);
            }
            if ((this.onUpdateSupplementCompletedDelegate == null)) {
                this.onUpdateSupplementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSupplementCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSupplementDelegate, new object[] {
                        obj}, this.onEndUpdateSupplementDelegate, this.onUpdateSupplementCompletedDelegate, userState);
        }
        
        public void DeleteSupplement(NewOptics.SVC.Supplement obj) {
            base.Channel.DeleteSupplement(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteSupplement(NewOptics.SVC.Supplement obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSupplement(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteSupplement(System.IAsyncResult result) {
            base.Channel.EndDeleteSupplement(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSupplement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Supplement obj = ((NewOptics.SVC.Supplement)(inValues[0]));
            return this.BeginDeleteSupplement(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteSupplement(System.IAsyncResult result) {
            this.EndDeleteSupplement(result);
            return null;
        }
        
        private void OnDeleteSupplementCompleted(object state) {
            if ((this.DeleteSupplementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteSupplementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteSupplementAsync(NewOptics.SVC.Supplement obj) {
            this.DeleteSupplementAsync(obj, null);
        }
        
        public void DeleteSupplementAsync(NewOptics.SVC.Supplement obj, object userState) {
            if ((this.onBeginDeleteSupplementDelegate == null)) {
                this.onBeginDeleteSupplementDelegate = new BeginOperationDelegate(this.OnBeginDeleteSupplement);
            }
            if ((this.onEndDeleteSupplementDelegate == null)) {
                this.onEndDeleteSupplementDelegate = new EndOperationDelegate(this.OnEndDeleteSupplement);
            }
            if ((this.onDeleteSupplementCompletedDelegate == null)) {
                this.onDeleteSupplementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteSupplementCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteSupplementDelegate, new object[] {
                        obj}, this.onEndDeleteSupplementDelegate, this.onDeleteSupplementCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Verre> GetAllVerre() {
            return base.Channel.GetAllVerre();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllVerre(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllVerre(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Verre> EndGetAllVerre(System.IAsyncResult result) {
            return base.Channel.EndGetAllVerre(result);
        }
        
        private System.IAsyncResult OnBeginGetAllVerre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllVerre(callback, asyncState);
        }
        
        private object[] OnEndGetAllVerre(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Verre> retVal = this.EndGetAllVerre(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllVerreCompleted(object state) {
            if ((this.GetAllVerreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllVerreCompleted(this, new GetAllVerreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllVerreAsync() {
            this.GetAllVerreAsync(null);
        }
        
        public void GetAllVerreAsync(object userState) {
            if ((this.onBeginGetAllVerreDelegate == null)) {
                this.onBeginGetAllVerreDelegate = new BeginOperationDelegate(this.OnBeginGetAllVerre);
            }
            if ((this.onEndGetAllVerreDelegate == null)) {
                this.onEndGetAllVerreDelegate = new EndOperationDelegate(this.OnEndGetAllVerre);
            }
            if ((this.onGetAllVerreCompletedDelegate == null)) {
                this.onGetAllVerreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllVerreCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllVerreDelegate, null, this.onEndGetAllVerreDelegate, this.onGetAllVerreCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Verre> GetAllVerrebycode(string code) {
            return base.Channel.GetAllVerrebycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllVerrebycode(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllVerrebycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Verre> EndGetAllVerrebycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllVerrebycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllVerrebycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetAllVerrebycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllVerrebycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Verre> retVal = this.EndGetAllVerrebycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllVerrebycodeCompleted(object state) {
            if ((this.GetAllVerrebycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllVerrebycodeCompleted(this, new GetAllVerrebycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllVerrebycodeAsync(string code) {
            this.GetAllVerrebycodeAsync(code, null);
        }
        
        public void GetAllVerrebycodeAsync(string code, object userState) {
            if ((this.onBeginGetAllVerrebycodeDelegate == null)) {
                this.onBeginGetAllVerrebycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllVerrebycode);
            }
            if ((this.onEndGetAllVerrebycodeDelegate == null)) {
                this.onEndGetAllVerrebycodeDelegate = new EndOperationDelegate(this.OnEndGetAllVerrebycode);
            }
            if ((this.onGetAllVerrebycodeCompletedDelegate == null)) {
                this.onGetAllVerrebycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllVerrebycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllVerrebycodeDelegate, new object[] {
                        code}, this.onEndGetAllVerrebycodeDelegate, this.onGetAllVerrebycodeCompletedDelegate, userState);
        }
        
        public void InsertVerre(NewOptics.SVC.Verre obj) {
            base.Channel.InsertVerre(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertVerre(NewOptics.SVC.Verre obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertVerre(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertVerre(System.IAsyncResult result) {
            base.Channel.EndInsertVerre(result);
        }
        
        private System.IAsyncResult OnBeginInsertVerre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Verre obj = ((NewOptics.SVC.Verre)(inValues[0]));
            return this.BeginInsertVerre(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertVerre(System.IAsyncResult result) {
            this.EndInsertVerre(result);
            return null;
        }
        
        private void OnInsertVerreCompleted(object state) {
            if ((this.InsertVerreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertVerreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertVerreAsync(NewOptics.SVC.Verre obj) {
            this.InsertVerreAsync(obj, null);
        }
        
        public void InsertVerreAsync(NewOptics.SVC.Verre obj, object userState) {
            if ((this.onBeginInsertVerreDelegate == null)) {
                this.onBeginInsertVerreDelegate = new BeginOperationDelegate(this.OnBeginInsertVerre);
            }
            if ((this.onEndInsertVerreDelegate == null)) {
                this.onEndInsertVerreDelegate = new EndOperationDelegate(this.OnEndInsertVerre);
            }
            if ((this.onInsertVerreCompletedDelegate == null)) {
                this.onInsertVerreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertVerreCompleted);
            }
            base.InvokeAsync(this.onBeginInsertVerreDelegate, new object[] {
                        obj}, this.onEndInsertVerreDelegate, this.onInsertVerreCompletedDelegate, userState);
        }
        
        public void UpdateVerre(NewOptics.SVC.Verre obj) {
            base.Channel.UpdateVerre(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateVerre(NewOptics.SVC.Verre obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateVerre(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateVerre(System.IAsyncResult result) {
            base.Channel.EndUpdateVerre(result);
        }
        
        private System.IAsyncResult OnBeginUpdateVerre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Verre obj = ((NewOptics.SVC.Verre)(inValues[0]));
            return this.BeginUpdateVerre(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateVerre(System.IAsyncResult result) {
            this.EndUpdateVerre(result);
            return null;
        }
        
        private void OnUpdateVerreCompleted(object state) {
            if ((this.UpdateVerreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateVerreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateVerreAsync(NewOptics.SVC.Verre obj) {
            this.UpdateVerreAsync(obj, null);
        }
        
        public void UpdateVerreAsync(NewOptics.SVC.Verre obj, object userState) {
            if ((this.onBeginUpdateVerreDelegate == null)) {
                this.onBeginUpdateVerreDelegate = new BeginOperationDelegate(this.OnBeginUpdateVerre);
            }
            if ((this.onEndUpdateVerreDelegate == null)) {
                this.onEndUpdateVerreDelegate = new EndOperationDelegate(this.OnEndUpdateVerre);
            }
            if ((this.onUpdateVerreCompletedDelegate == null)) {
                this.onUpdateVerreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateVerreCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateVerreDelegate, new object[] {
                        obj}, this.onEndUpdateVerreDelegate, this.onUpdateVerreCompletedDelegate, userState);
        }
        
        public void DeleteVerre(NewOptics.SVC.Verre obj) {
            base.Channel.DeleteVerre(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteVerre(NewOptics.SVC.Verre obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteVerre(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteVerre(System.IAsyncResult result) {
            base.Channel.EndDeleteVerre(result);
        }
        
        private System.IAsyncResult OnBeginDeleteVerre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Verre obj = ((NewOptics.SVC.Verre)(inValues[0]));
            return this.BeginDeleteVerre(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteVerre(System.IAsyncResult result) {
            this.EndDeleteVerre(result);
            return null;
        }
        
        private void OnDeleteVerreCompleted(object state) {
            if ((this.DeleteVerreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteVerreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteVerreAsync(NewOptics.SVC.Verre obj) {
            this.DeleteVerreAsync(obj, null);
        }
        
        public void DeleteVerreAsync(NewOptics.SVC.Verre obj, object userState) {
            if ((this.onBeginDeleteVerreDelegate == null)) {
                this.onBeginDeleteVerreDelegate = new BeginOperationDelegate(this.OnBeginDeleteVerre);
            }
            if ((this.onEndDeleteVerreDelegate == null)) {
                this.onEndDeleteVerreDelegate = new EndOperationDelegate(this.OnEndDeleteVerre);
            }
            if ((this.onDeleteVerreCompletedDelegate == null)) {
                this.onDeleteVerreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteVerreCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteVerreDelegate, new object[] {
                        obj}, this.onEndDeleteVerreDelegate, this.onDeleteVerreCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.TarifVerre> GetAllTarifVerre() {
            return base.Channel.GetAllTarifVerre();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllTarifVerre(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTarifVerre(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.TarifVerre> EndGetAllTarifVerre(System.IAsyncResult result) {
            return base.Channel.EndGetAllTarifVerre(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTarifVerre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllTarifVerre(callback, asyncState);
        }
        
        private object[] OnEndGetAllTarifVerre(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.TarifVerre> retVal = this.EndGetAllTarifVerre(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTarifVerreCompleted(object state) {
            if ((this.GetAllTarifVerreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTarifVerreCompleted(this, new GetAllTarifVerreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTarifVerreAsync() {
            this.GetAllTarifVerreAsync(null);
        }
        
        public void GetAllTarifVerreAsync(object userState) {
            if ((this.onBeginGetAllTarifVerreDelegate == null)) {
                this.onBeginGetAllTarifVerreDelegate = new BeginOperationDelegate(this.OnBeginGetAllTarifVerre);
            }
            if ((this.onEndGetAllTarifVerreDelegate == null)) {
                this.onEndGetAllTarifVerreDelegate = new EndOperationDelegate(this.OnEndGetAllTarifVerre);
            }
            if ((this.onGetAllTarifVerreCompletedDelegate == null)) {
                this.onGetAllTarifVerreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTarifVerreCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTarifVerreDelegate, null, this.onEndGetAllTarifVerreDelegate, this.onGetAllTarifVerreCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.TarifVerre> GetAllTarifVerrebycode(string code) {
            return base.Channel.GetAllTarifVerrebycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllTarifVerrebycode(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTarifVerrebycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.TarifVerre> EndGetAllTarifVerrebycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllTarifVerrebycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTarifVerrebycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetAllTarifVerrebycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllTarifVerrebycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.TarifVerre> retVal = this.EndGetAllTarifVerrebycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTarifVerrebycodeCompleted(object state) {
            if ((this.GetAllTarifVerrebycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTarifVerrebycodeCompleted(this, new GetAllTarifVerrebycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTarifVerrebycodeAsync(string code) {
            this.GetAllTarifVerrebycodeAsync(code, null);
        }
        
        public void GetAllTarifVerrebycodeAsync(string code, object userState) {
            if ((this.onBeginGetAllTarifVerrebycodeDelegate == null)) {
                this.onBeginGetAllTarifVerrebycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllTarifVerrebycode);
            }
            if ((this.onEndGetAllTarifVerrebycodeDelegate == null)) {
                this.onEndGetAllTarifVerrebycodeDelegate = new EndOperationDelegate(this.OnEndGetAllTarifVerrebycode);
            }
            if ((this.onGetAllTarifVerrebycodeCompletedDelegate == null)) {
                this.onGetAllTarifVerrebycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTarifVerrebycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTarifVerrebycodeDelegate, new object[] {
                        code}, this.onEndGetAllTarifVerrebycodeDelegate, this.onGetAllTarifVerrebycodeCompletedDelegate, userState);
        }
        
        public void InsertTarifVerre(NewOptics.SVC.TarifVerre obj) {
            base.Channel.InsertTarifVerre(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertTarifVerre(NewOptics.SVC.TarifVerre obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertTarifVerre(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertTarifVerre(System.IAsyncResult result) {
            base.Channel.EndInsertTarifVerre(result);
        }
        
        private System.IAsyncResult OnBeginInsertTarifVerre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.TarifVerre obj = ((NewOptics.SVC.TarifVerre)(inValues[0]));
            return this.BeginInsertTarifVerre(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertTarifVerre(System.IAsyncResult result) {
            this.EndInsertTarifVerre(result);
            return null;
        }
        
        private void OnInsertTarifVerreCompleted(object state) {
            if ((this.InsertTarifVerreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertTarifVerreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertTarifVerreAsync(NewOptics.SVC.TarifVerre obj) {
            this.InsertTarifVerreAsync(obj, null);
        }
        
        public void InsertTarifVerreAsync(NewOptics.SVC.TarifVerre obj, object userState) {
            if ((this.onBeginInsertTarifVerreDelegate == null)) {
                this.onBeginInsertTarifVerreDelegate = new BeginOperationDelegate(this.OnBeginInsertTarifVerre);
            }
            if ((this.onEndInsertTarifVerreDelegate == null)) {
                this.onEndInsertTarifVerreDelegate = new EndOperationDelegate(this.OnEndInsertTarifVerre);
            }
            if ((this.onInsertTarifVerreCompletedDelegate == null)) {
                this.onInsertTarifVerreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertTarifVerreCompleted);
            }
            base.InvokeAsync(this.onBeginInsertTarifVerreDelegate, new object[] {
                        obj}, this.onEndInsertTarifVerreDelegate, this.onInsertTarifVerreCompletedDelegate, userState);
        }
        
        public void UpdateTarifVerre(NewOptics.SVC.TarifVerre obj) {
            base.Channel.UpdateTarifVerre(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateTarifVerre(NewOptics.SVC.TarifVerre obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTarifVerre(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateTarifVerre(System.IAsyncResult result) {
            base.Channel.EndUpdateTarifVerre(result);
        }
        
        private System.IAsyncResult OnBeginUpdateTarifVerre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.TarifVerre obj = ((NewOptics.SVC.TarifVerre)(inValues[0]));
            return this.BeginUpdateTarifVerre(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateTarifVerre(System.IAsyncResult result) {
            this.EndUpdateTarifVerre(result);
            return null;
        }
        
        private void OnUpdateTarifVerreCompleted(object state) {
            if ((this.UpdateTarifVerreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTarifVerreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTarifVerreAsync(NewOptics.SVC.TarifVerre obj) {
            this.UpdateTarifVerreAsync(obj, null);
        }
        
        public void UpdateTarifVerreAsync(NewOptics.SVC.TarifVerre obj, object userState) {
            if ((this.onBeginUpdateTarifVerreDelegate == null)) {
                this.onBeginUpdateTarifVerreDelegate = new BeginOperationDelegate(this.OnBeginUpdateTarifVerre);
            }
            if ((this.onEndUpdateTarifVerreDelegate == null)) {
                this.onEndUpdateTarifVerreDelegate = new EndOperationDelegate(this.OnEndUpdateTarifVerre);
            }
            if ((this.onUpdateTarifVerreCompletedDelegate == null)) {
                this.onUpdateTarifVerreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTarifVerreCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTarifVerreDelegate, new object[] {
                        obj}, this.onEndUpdateTarifVerreDelegate, this.onUpdateTarifVerreCompletedDelegate, userState);
        }
        
        public void DeleteTarifVerre(NewOptics.SVC.TarifVerre obj) {
            base.Channel.DeleteTarifVerre(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteTarifVerre(NewOptics.SVC.TarifVerre obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTarifVerre(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteTarifVerre(System.IAsyncResult result) {
            base.Channel.EndDeleteTarifVerre(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTarifVerre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.TarifVerre obj = ((NewOptics.SVC.TarifVerre)(inValues[0]));
            return this.BeginDeleteTarifVerre(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteTarifVerre(System.IAsyncResult result) {
            this.EndDeleteTarifVerre(result);
            return null;
        }
        
        private void OnDeleteTarifVerreCompleted(object state) {
            if ((this.DeleteTarifVerreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTarifVerreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTarifVerreAsync(NewOptics.SVC.TarifVerre obj) {
            this.DeleteTarifVerreAsync(obj, null);
        }
        
        public void DeleteTarifVerreAsync(NewOptics.SVC.TarifVerre obj, object userState) {
            if ((this.onBeginDeleteTarifVerreDelegate == null)) {
                this.onBeginDeleteTarifVerreDelegate = new BeginOperationDelegate(this.OnBeginDeleteTarifVerre);
            }
            if ((this.onEndDeleteTarifVerreDelegate == null)) {
                this.onEndDeleteTarifVerreDelegate = new EndOperationDelegate(this.OnEndDeleteTarifVerre);
            }
            if ((this.onDeleteTarifVerreCompletedDelegate == null)) {
                this.onDeleteTarifVerreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTarifVerreCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTarifVerreDelegate, new object[] {
                        obj}, this.onEndDeleteTarifVerreDelegate, this.onDeleteTarifVerreCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Tcab> GetAllTcab() {
            return base.Channel.GetAllTcab();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllTcab(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTcab(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Tcab> EndGetAllTcab(System.IAsyncResult result) {
            return base.Channel.EndGetAllTcab(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTcab(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllTcab(callback, asyncState);
        }
        
        private object[] OnEndGetAllTcab(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Tcab> retVal = this.EndGetAllTcab(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTcabCompleted(object state) {
            if ((this.GetAllTcabCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTcabCompleted(this, new GetAllTcabCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTcabAsync() {
            this.GetAllTcabAsync(null);
        }
        
        public void GetAllTcabAsync(object userState) {
            if ((this.onBeginGetAllTcabDelegate == null)) {
                this.onBeginGetAllTcabDelegate = new BeginOperationDelegate(this.OnBeginGetAllTcab);
            }
            if ((this.onEndGetAllTcabDelegate == null)) {
                this.onEndGetAllTcabDelegate = new EndOperationDelegate(this.OnEndGetAllTcab);
            }
            if ((this.onGetAllTcabCompletedDelegate == null)) {
                this.onGetAllTcabCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTcabCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTcabDelegate, null, this.onEndGetAllTcabDelegate, this.onGetAllTcabCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Tcab> GetAllTcabbycode(string code) {
            return base.Channel.GetAllTcabbycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllTcabbycode(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTcabbycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Tcab> EndGetAllTcabbycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllTcabbycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTcabbycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetAllTcabbycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllTcabbycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Tcab> retVal = this.EndGetAllTcabbycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTcabbycodeCompleted(object state) {
            if ((this.GetAllTcabbycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTcabbycodeCompleted(this, new GetAllTcabbycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTcabbycodeAsync(string code) {
            this.GetAllTcabbycodeAsync(code, null);
        }
        
        public void GetAllTcabbycodeAsync(string code, object userState) {
            if ((this.onBeginGetAllTcabbycodeDelegate == null)) {
                this.onBeginGetAllTcabbycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllTcabbycode);
            }
            if ((this.onEndGetAllTcabbycodeDelegate == null)) {
                this.onEndGetAllTcabbycodeDelegate = new EndOperationDelegate(this.OnEndGetAllTcabbycode);
            }
            if ((this.onGetAllTcabbycodeCompletedDelegate == null)) {
                this.onGetAllTcabbycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTcabbycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTcabbycodeDelegate, new object[] {
                        code}, this.onEndGetAllTcabbycodeDelegate, this.onGetAllTcabbycodeCompletedDelegate, userState);
        }
        
        public void InsertTcab(NewOptics.SVC.Tcab obj) {
            base.Channel.InsertTcab(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertTcab(NewOptics.SVC.Tcab obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertTcab(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertTcab(System.IAsyncResult result) {
            base.Channel.EndInsertTcab(result);
        }
        
        private System.IAsyncResult OnBeginInsertTcab(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Tcab obj = ((NewOptics.SVC.Tcab)(inValues[0]));
            return this.BeginInsertTcab(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertTcab(System.IAsyncResult result) {
            this.EndInsertTcab(result);
            return null;
        }
        
        private void OnInsertTcabCompleted(object state) {
            if ((this.InsertTcabCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertTcabCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertTcabAsync(NewOptics.SVC.Tcab obj) {
            this.InsertTcabAsync(obj, null);
        }
        
        public void InsertTcabAsync(NewOptics.SVC.Tcab obj, object userState) {
            if ((this.onBeginInsertTcabDelegate == null)) {
                this.onBeginInsertTcabDelegate = new BeginOperationDelegate(this.OnBeginInsertTcab);
            }
            if ((this.onEndInsertTcabDelegate == null)) {
                this.onEndInsertTcabDelegate = new EndOperationDelegate(this.OnEndInsertTcab);
            }
            if ((this.onInsertTcabCompletedDelegate == null)) {
                this.onInsertTcabCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertTcabCompleted);
            }
            base.InvokeAsync(this.onBeginInsertTcabDelegate, new object[] {
                        obj}, this.onEndInsertTcabDelegate, this.onInsertTcabCompletedDelegate, userState);
        }
        
        public void UpdateTcab(NewOptics.SVC.Tcab obj) {
            base.Channel.UpdateTcab(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateTcab(NewOptics.SVC.Tcab obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTcab(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateTcab(System.IAsyncResult result) {
            base.Channel.EndUpdateTcab(result);
        }
        
        private System.IAsyncResult OnBeginUpdateTcab(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Tcab obj = ((NewOptics.SVC.Tcab)(inValues[0]));
            return this.BeginUpdateTcab(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateTcab(System.IAsyncResult result) {
            this.EndUpdateTcab(result);
            return null;
        }
        
        private void OnUpdateTcabCompleted(object state) {
            if ((this.UpdateTcabCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTcabCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTcabAsync(NewOptics.SVC.Tcab obj) {
            this.UpdateTcabAsync(obj, null);
        }
        
        public void UpdateTcabAsync(NewOptics.SVC.Tcab obj, object userState) {
            if ((this.onBeginUpdateTcabDelegate == null)) {
                this.onBeginUpdateTcabDelegate = new BeginOperationDelegate(this.OnBeginUpdateTcab);
            }
            if ((this.onEndUpdateTcabDelegate == null)) {
                this.onEndUpdateTcabDelegate = new EndOperationDelegate(this.OnEndUpdateTcab);
            }
            if ((this.onUpdateTcabCompletedDelegate == null)) {
                this.onUpdateTcabCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTcabCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTcabDelegate, new object[] {
                        obj}, this.onEndUpdateTcabDelegate, this.onUpdateTcabCompletedDelegate, userState);
        }
        
        public void DeleteTcab(NewOptics.SVC.Tcab obj) {
            base.Channel.DeleteTcab(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteTcab(NewOptics.SVC.Tcab obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTcab(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteTcab(System.IAsyncResult result) {
            base.Channel.EndDeleteTcab(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTcab(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Tcab obj = ((NewOptics.SVC.Tcab)(inValues[0]));
            return this.BeginDeleteTcab(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteTcab(System.IAsyncResult result) {
            this.EndDeleteTcab(result);
            return null;
        }
        
        private void OnDeleteTcabCompleted(object state) {
            if ((this.DeleteTcabCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTcabCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTcabAsync(NewOptics.SVC.Tcab obj) {
            this.DeleteTcabAsync(obj, null);
        }
        
        public void DeleteTcabAsync(NewOptics.SVC.Tcab obj, object userState) {
            if ((this.onBeginDeleteTcabDelegate == null)) {
                this.onBeginDeleteTcabDelegate = new BeginOperationDelegate(this.OnBeginDeleteTcab);
            }
            if ((this.onEndDeleteTcabDelegate == null)) {
                this.onEndDeleteTcabDelegate = new EndOperationDelegate(this.OnEndDeleteTcab);
            }
            if ((this.onDeleteTcabCompletedDelegate == null)) {
                this.onDeleteTcabCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTcabCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTcabDelegate, new object[] {
                        obj}, this.onEndDeleteTcabDelegate, this.onDeleteTcabCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Fourn> GetAllFourn() {
            return base.Channel.GetAllFourn();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllFourn(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFourn(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Fourn> EndGetAllFourn(System.IAsyncResult result) {
            return base.Channel.EndGetAllFourn(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFourn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllFourn(callback, asyncState);
        }
        
        private object[] OnEndGetAllFourn(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Fourn> retVal = this.EndGetAllFourn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFournCompleted(object state) {
            if ((this.GetAllFournCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFournCompleted(this, new GetAllFournCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFournAsync() {
            this.GetAllFournAsync(null);
        }
        
        public void GetAllFournAsync(object userState) {
            if ((this.onBeginGetAllFournDelegate == null)) {
                this.onBeginGetAllFournDelegate = new BeginOperationDelegate(this.OnBeginGetAllFourn);
            }
            if ((this.onEndGetAllFournDelegate == null)) {
                this.onEndGetAllFournDelegate = new EndOperationDelegate(this.OnEndGetAllFourn);
            }
            if ((this.onGetAllFournCompletedDelegate == null)) {
                this.onGetAllFournCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFournCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFournDelegate, null, this.onEndGetAllFournDelegate, this.onGetAllFournCompletedDelegate, userState);
        }
        
        public void InsertFourn(NewOptics.SVC.Fourn obj) {
            base.Channel.InsertFourn(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertFourn(NewOptics.SVC.Fourn obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertFourn(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertFourn(System.IAsyncResult result) {
            base.Channel.EndInsertFourn(result);
        }
        
        private System.IAsyncResult OnBeginInsertFourn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Fourn obj = ((NewOptics.SVC.Fourn)(inValues[0]));
            return this.BeginInsertFourn(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertFourn(System.IAsyncResult result) {
            this.EndInsertFourn(result);
            return null;
        }
        
        private void OnInsertFournCompleted(object state) {
            if ((this.InsertFournCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertFournCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertFournAsync(NewOptics.SVC.Fourn obj) {
            this.InsertFournAsync(obj, null);
        }
        
        public void InsertFournAsync(NewOptics.SVC.Fourn obj, object userState) {
            if ((this.onBeginInsertFournDelegate == null)) {
                this.onBeginInsertFournDelegate = new BeginOperationDelegate(this.OnBeginInsertFourn);
            }
            if ((this.onEndInsertFournDelegate == null)) {
                this.onEndInsertFournDelegate = new EndOperationDelegate(this.OnEndInsertFourn);
            }
            if ((this.onInsertFournCompletedDelegate == null)) {
                this.onInsertFournCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertFournCompleted);
            }
            base.InvokeAsync(this.onBeginInsertFournDelegate, new object[] {
                        obj}, this.onEndInsertFournDelegate, this.onInsertFournCompletedDelegate, userState);
        }
        
        public void UpdateFourn(NewOptics.SVC.Fourn obj) {
            base.Channel.UpdateFourn(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateFourn(NewOptics.SVC.Fourn obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateFourn(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateFourn(System.IAsyncResult result) {
            base.Channel.EndUpdateFourn(result);
        }
        
        private System.IAsyncResult OnBeginUpdateFourn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Fourn obj = ((NewOptics.SVC.Fourn)(inValues[0]));
            return this.BeginUpdateFourn(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateFourn(System.IAsyncResult result) {
            this.EndUpdateFourn(result);
            return null;
        }
        
        private void OnUpdateFournCompleted(object state) {
            if ((this.UpdateFournCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateFournCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateFournAsync(NewOptics.SVC.Fourn obj) {
            this.UpdateFournAsync(obj, null);
        }
        
        public void UpdateFournAsync(NewOptics.SVC.Fourn obj, object userState) {
            if ((this.onBeginUpdateFournDelegate == null)) {
                this.onBeginUpdateFournDelegate = new BeginOperationDelegate(this.OnBeginUpdateFourn);
            }
            if ((this.onEndUpdateFournDelegate == null)) {
                this.onEndUpdateFournDelegate = new EndOperationDelegate(this.OnEndUpdateFourn);
            }
            if ((this.onUpdateFournCompletedDelegate == null)) {
                this.onUpdateFournCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateFournCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateFournDelegate, new object[] {
                        obj}, this.onEndUpdateFournDelegate, this.onUpdateFournCompletedDelegate, userState);
        }
        
        public void DeleteFourn(NewOptics.SVC.Fourn obj) {
            base.Channel.DeleteFourn(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteFourn(NewOptics.SVC.Fourn obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteFourn(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteFourn(System.IAsyncResult result) {
            base.Channel.EndDeleteFourn(result);
        }
        
        private System.IAsyncResult OnBeginDeleteFourn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Fourn obj = ((NewOptics.SVC.Fourn)(inValues[0]));
            return this.BeginDeleteFourn(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteFourn(System.IAsyncResult result) {
            this.EndDeleteFourn(result);
            return null;
        }
        
        private void OnDeleteFournCompleted(object state) {
            if ((this.DeleteFournCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteFournCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteFournAsync(NewOptics.SVC.Fourn obj) {
            this.DeleteFournAsync(obj, null);
        }
        
        public void DeleteFournAsync(NewOptics.SVC.Fourn obj, object userState) {
            if ((this.onBeginDeleteFournDelegate == null)) {
                this.onBeginDeleteFournDelegate = new BeginOperationDelegate(this.OnBeginDeleteFourn);
            }
            if ((this.onEndDeleteFournDelegate == null)) {
                this.onEndDeleteFournDelegate = new EndOperationDelegate(this.OnEndDeleteFourn);
            }
            if ((this.onDeleteFournCompletedDelegate == null)) {
                this.onDeleteFournCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteFournCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteFournDelegate, new object[] {
                        obj}, this.onEndDeleteFournDelegate, this.onDeleteFournCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.F1> GetAllF1(System.DateTime date1, System.DateTime date2) {
            return base.Channel.GetAllF1(date1, date2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllF1(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllF1(date1, date2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.F1> EndGetAllF1(System.IAsyncResult result) {
            return base.Channel.EndGetAllF1(result);
        }
        
        private System.IAsyncResult OnBeginGetAllF1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime date1 = ((System.DateTime)(inValues[0]));
            System.DateTime date2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllF1(date1, date2, callback, asyncState);
        }
        
        private object[] OnEndGetAllF1(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.F1> retVal = this.EndGetAllF1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllF1Completed(object state) {
            if ((this.GetAllF1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllF1Completed(this, new GetAllF1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllF1Async(System.DateTime date1, System.DateTime date2) {
            this.GetAllF1Async(date1, date2, null);
        }
        
        public void GetAllF1Async(System.DateTime date1, System.DateTime date2, object userState) {
            if ((this.onBeginGetAllF1Delegate == null)) {
                this.onBeginGetAllF1Delegate = new BeginOperationDelegate(this.OnBeginGetAllF1);
            }
            if ((this.onEndGetAllF1Delegate == null)) {
                this.onEndGetAllF1Delegate = new EndOperationDelegate(this.OnEndGetAllF1);
            }
            if ((this.onGetAllF1CompletedDelegate == null)) {
                this.onGetAllF1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllF1Completed);
            }
            base.InvokeAsync(this.onBeginGetAllF1Delegate, new object[] {
                        date1,
                        date2}, this.onEndGetAllF1Delegate, this.onGetAllF1CompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.F1> GetAllF1All() {
            return base.Channel.GetAllF1All();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllF1All(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllF1All(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.F1> EndGetAllF1All(System.IAsyncResult result) {
            return base.Channel.EndGetAllF1All(result);
        }
        
        private System.IAsyncResult OnBeginGetAllF1All(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllF1All(callback, asyncState);
        }
        
        private object[] OnEndGetAllF1All(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.F1> retVal = this.EndGetAllF1All(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllF1AllCompleted(object state) {
            if ((this.GetAllF1AllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllF1AllCompleted(this, new GetAllF1AllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllF1AllAsync() {
            this.GetAllF1AllAsync(null);
        }
        
        public void GetAllF1AllAsync(object userState) {
            if ((this.onBeginGetAllF1AllDelegate == null)) {
                this.onBeginGetAllF1AllDelegate = new BeginOperationDelegate(this.OnBeginGetAllF1All);
            }
            if ((this.onEndGetAllF1AllDelegate == null)) {
                this.onEndGetAllF1AllDelegate = new EndOperationDelegate(this.OnEndGetAllF1All);
            }
            if ((this.onGetAllF1AllCompletedDelegate == null)) {
                this.onGetAllF1AllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllF1AllCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllF1AllDelegate, null, this.onEndGetAllF1AllDelegate, this.onGetAllF1AllCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.F1> GetAllF1Bycode(int idF1) {
            return base.Channel.GetAllF1Bycode(idF1);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllF1Bycode(int idF1, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllF1Bycode(idF1, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.F1> EndGetAllF1Bycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllF1Bycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllF1Bycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idF1 = ((int)(inValues[0]));
            return this.BeginGetAllF1Bycode(idF1, callback, asyncState);
        }
        
        private object[] OnEndGetAllF1Bycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.F1> retVal = this.EndGetAllF1Bycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllF1BycodeCompleted(object state) {
            if ((this.GetAllF1BycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllF1BycodeCompleted(this, new GetAllF1BycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllF1BycodeAsync(int idF1) {
            this.GetAllF1BycodeAsync(idF1, null);
        }
        
        public void GetAllF1BycodeAsync(int idF1, object userState) {
            if ((this.onBeginGetAllF1BycodeDelegate == null)) {
                this.onBeginGetAllF1BycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllF1Bycode);
            }
            if ((this.onEndGetAllF1BycodeDelegate == null)) {
                this.onEndGetAllF1BycodeDelegate = new EndOperationDelegate(this.OnEndGetAllF1Bycode);
            }
            if ((this.onGetAllF1BycodeCompletedDelegate == null)) {
                this.onGetAllF1BycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllF1BycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllF1BycodeDelegate, new object[] {
                        idF1}, this.onEndGetAllF1BycodeDelegate, this.onGetAllF1BycodeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.F1> GetAllF1ByCle(string clepatient) {
            return base.Channel.GetAllF1ByCle(clepatient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllF1ByCle(string clepatient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllF1ByCle(clepatient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.F1> EndGetAllF1ByCle(System.IAsyncResult result) {
            return base.Channel.EndGetAllF1ByCle(result);
        }
        
        private System.IAsyncResult OnBeginGetAllF1ByCle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clepatient = ((string)(inValues[0]));
            return this.BeginGetAllF1ByCle(clepatient, callback, asyncState);
        }
        
        private object[] OnEndGetAllF1ByCle(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.F1> retVal = this.EndGetAllF1ByCle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllF1ByCleCompleted(object state) {
            if ((this.GetAllF1ByCleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllF1ByCleCompleted(this, new GetAllF1ByCleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllF1ByCleAsync(string clepatient) {
            this.GetAllF1ByCleAsync(clepatient, null);
        }
        
        public void GetAllF1ByCleAsync(string clepatient, object userState) {
            if ((this.onBeginGetAllF1ByCleDelegate == null)) {
                this.onBeginGetAllF1ByCleDelegate = new BeginOperationDelegate(this.OnBeginGetAllF1ByCle);
            }
            if ((this.onEndGetAllF1ByCleDelegate == null)) {
                this.onEndGetAllF1ByCleDelegate = new EndOperationDelegate(this.OnEndGetAllF1ByCle);
            }
            if ((this.onGetAllF1ByCleCompletedDelegate == null)) {
                this.onGetAllF1ByCleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllF1ByCleCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllF1ByCleDelegate, new object[] {
                        clepatient}, this.onEndGetAllF1ByCleDelegate, this.onGetAllF1ByCleCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.F1> GetAllF1ByCleDossier(string clepatient) {
            return base.Channel.GetAllF1ByCleDossier(clepatient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllF1ByCleDossier(string clepatient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllF1ByCleDossier(clepatient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.F1> EndGetAllF1ByCleDossier(System.IAsyncResult result) {
            return base.Channel.EndGetAllF1ByCleDossier(result);
        }
        
        private System.IAsyncResult OnBeginGetAllF1ByCleDossier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clepatient = ((string)(inValues[0]));
            return this.BeginGetAllF1ByCleDossier(clepatient, callback, asyncState);
        }
        
        private object[] OnEndGetAllF1ByCleDossier(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.F1> retVal = this.EndGetAllF1ByCleDossier(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllF1ByCleDossierCompleted(object state) {
            if ((this.GetAllF1ByCleDossierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllF1ByCleDossierCompleted(this, new GetAllF1ByCleDossierCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllF1ByCleDossierAsync(string clepatient) {
            this.GetAllF1ByCleDossierAsync(clepatient, null);
        }
        
        public void GetAllF1ByCleDossierAsync(string clepatient, object userState) {
            if ((this.onBeginGetAllF1ByCleDossierDelegate == null)) {
                this.onBeginGetAllF1ByCleDossierDelegate = new BeginOperationDelegate(this.OnBeginGetAllF1ByCleDossier);
            }
            if ((this.onEndGetAllF1ByCleDossierDelegate == null)) {
                this.onEndGetAllF1ByCleDossierDelegate = new EndOperationDelegate(this.OnEndGetAllF1ByCleDossier);
            }
            if ((this.onGetAllF1ByCleDossierCompletedDelegate == null)) {
                this.onGetAllF1ByCleDossierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllF1ByCleDossierCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllF1ByCleDossierDelegate, new object[] {
                        clepatient}, this.onEndGetAllF1ByCleDossierDelegate, this.onGetAllF1ByCleDossierCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.F1> GetAllF1ByVisiteOper(string idmedecin) {
            return base.Channel.GetAllF1ByVisiteOper(idmedecin);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllF1ByVisiteOper(string idmedecin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllF1ByVisiteOper(idmedecin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.F1> EndGetAllF1ByVisiteOper(System.IAsyncResult result) {
            return base.Channel.EndGetAllF1ByVisiteOper(result);
        }
        
        private System.IAsyncResult OnBeginGetAllF1ByVisiteOper(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idmedecin = ((string)(inValues[0]));
            return this.BeginGetAllF1ByVisiteOper(idmedecin, callback, asyncState);
        }
        
        private object[] OnEndGetAllF1ByVisiteOper(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.F1> retVal = this.EndGetAllF1ByVisiteOper(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllF1ByVisiteOperCompleted(object state) {
            if ((this.GetAllF1ByVisiteOperCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllF1ByVisiteOperCompleted(this, new GetAllF1ByVisiteOperCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllF1ByVisiteOperAsync(string idmedecin) {
            this.GetAllF1ByVisiteOperAsync(idmedecin, null);
        }
        
        public void GetAllF1ByVisiteOperAsync(string idmedecin, object userState) {
            if ((this.onBeginGetAllF1ByVisiteOperDelegate == null)) {
                this.onBeginGetAllF1ByVisiteOperDelegate = new BeginOperationDelegate(this.OnBeginGetAllF1ByVisiteOper);
            }
            if ((this.onEndGetAllF1ByVisiteOperDelegate == null)) {
                this.onEndGetAllF1ByVisiteOperDelegate = new EndOperationDelegate(this.OnEndGetAllF1ByVisiteOper);
            }
            if ((this.onGetAllF1ByVisiteOperCompletedDelegate == null)) {
                this.onGetAllF1ByVisiteOperCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllF1ByVisiteOperCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllF1ByVisiteOperDelegate, new object[] {
                        idmedecin}, this.onEndGetAllF1ByVisiteOperDelegate, this.onGetAllF1ByVisiteOperCompletedDelegate, userState);
        }
        
        public void InsertF1(NewOptics.SVC.F1 obj) {
            base.Channel.InsertF1(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertF1(NewOptics.SVC.F1 obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertF1(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertF1(System.IAsyncResult result) {
            base.Channel.EndInsertF1(result);
        }
        
        private System.IAsyncResult OnBeginInsertF1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.F1 obj = ((NewOptics.SVC.F1)(inValues[0]));
            return this.BeginInsertF1(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertF1(System.IAsyncResult result) {
            this.EndInsertF1(result);
            return null;
        }
        
        private void OnInsertF1Completed(object state) {
            if ((this.InsertF1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertF1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertF1Async(NewOptics.SVC.F1 obj) {
            this.InsertF1Async(obj, null);
        }
        
        public void InsertF1Async(NewOptics.SVC.F1 obj, object userState) {
            if ((this.onBeginInsertF1Delegate == null)) {
                this.onBeginInsertF1Delegate = new BeginOperationDelegate(this.OnBeginInsertF1);
            }
            if ((this.onEndInsertF1Delegate == null)) {
                this.onEndInsertF1Delegate = new EndOperationDelegate(this.OnEndInsertF1);
            }
            if ((this.onInsertF1CompletedDelegate == null)) {
                this.onInsertF1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertF1Completed);
            }
            base.InvokeAsync(this.onBeginInsertF1Delegate, new object[] {
                        obj}, this.onEndInsertF1Delegate, this.onInsertF1CompletedDelegate, userState);
        }
        
        public void UpdateF1(NewOptics.SVC.F1 obj) {
            base.Channel.UpdateF1(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateF1(NewOptics.SVC.F1 obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateF1(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateF1(System.IAsyncResult result) {
            base.Channel.EndUpdateF1(result);
        }
        
        private System.IAsyncResult OnBeginUpdateF1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.F1 obj = ((NewOptics.SVC.F1)(inValues[0]));
            return this.BeginUpdateF1(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateF1(System.IAsyncResult result) {
            this.EndUpdateF1(result);
            return null;
        }
        
        private void OnUpdateF1Completed(object state) {
            if ((this.UpdateF1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateF1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateF1Async(NewOptics.SVC.F1 obj) {
            this.UpdateF1Async(obj, null);
        }
        
        public void UpdateF1Async(NewOptics.SVC.F1 obj, object userState) {
            if ((this.onBeginUpdateF1Delegate == null)) {
                this.onBeginUpdateF1Delegate = new BeginOperationDelegate(this.OnBeginUpdateF1);
            }
            if ((this.onEndUpdateF1Delegate == null)) {
                this.onEndUpdateF1Delegate = new EndOperationDelegate(this.OnEndUpdateF1);
            }
            if ((this.onUpdateF1CompletedDelegate == null)) {
                this.onUpdateF1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateF1Completed);
            }
            base.InvokeAsync(this.onBeginUpdateF1Delegate, new object[] {
                        obj}, this.onEndUpdateF1Delegate, this.onUpdateF1CompletedDelegate, userState);
        }
        
        public void DeleteF1(NewOptics.SVC.F1 obj) {
            base.Channel.DeleteF1(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteF1(NewOptics.SVC.F1 obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteF1(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteF1(System.IAsyncResult result) {
            base.Channel.EndDeleteF1(result);
        }
        
        private System.IAsyncResult OnBeginDeleteF1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.F1 obj = ((NewOptics.SVC.F1)(inValues[0]));
            return this.BeginDeleteF1(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteF1(System.IAsyncResult result) {
            this.EndDeleteF1(result);
            return null;
        }
        
        private void OnDeleteF1Completed(object state) {
            if ((this.DeleteF1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteF1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteF1Async(NewOptics.SVC.F1 obj) {
            this.DeleteF1Async(obj, null);
        }
        
        public void DeleteF1Async(NewOptics.SVC.F1 obj, object userState) {
            if ((this.onBeginDeleteF1Delegate == null)) {
                this.onBeginDeleteF1Delegate = new BeginOperationDelegate(this.OnBeginDeleteF1);
            }
            if ((this.onEndDeleteF1Delegate == null)) {
                this.onEndDeleteF1Delegate = new EndOperationDelegate(this.OnEndDeleteF1);
            }
            if ((this.onDeleteF1CompletedDelegate == null)) {
                this.onDeleteF1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteF1Completed);
            }
            base.InvokeAsync(this.onBeginDeleteF1Delegate, new object[] {
                        obj}, this.onEndDeleteF1Delegate, this.onDeleteF1CompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFactureBycodeproduit(int idF1) {
            return base.Channel.GetAllFactureBycodeproduit(idF1);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllFactureBycodeproduit(int idF1, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFactureBycodeproduit(idF1, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFactureBycodeproduit(System.IAsyncResult result) {
            return base.Channel.EndGetAllFactureBycodeproduit(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFactureBycodeproduit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idF1 = ((int)(inValues[0]));
            return this.BeginGetAllFactureBycodeproduit(idF1, callback, asyncState);
        }
        
        private object[] OnEndGetAllFactureBycodeproduit(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Facture> retVal = this.EndGetAllFactureBycodeproduit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFactureBycodeproduitCompleted(object state) {
            if ((this.GetAllFactureBycodeproduitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFactureBycodeproduitCompleted(this, new GetAllFactureBycodeproduitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFactureBycodeproduitAsync(int idF1) {
            this.GetAllFactureBycodeproduitAsync(idF1, null);
        }
        
        public void GetAllFactureBycodeproduitAsync(int idF1, object userState) {
            if ((this.onBeginGetAllFactureBycodeproduitDelegate == null)) {
                this.onBeginGetAllFactureBycodeproduitDelegate = new BeginOperationDelegate(this.OnBeginGetAllFactureBycodeproduit);
            }
            if ((this.onEndGetAllFactureBycodeproduitDelegate == null)) {
                this.onEndGetAllFactureBycodeproduitDelegate = new EndOperationDelegate(this.OnEndGetAllFactureBycodeproduit);
            }
            if ((this.onGetAllFactureBycodeproduitCompletedDelegate == null)) {
                this.onGetAllFactureBycodeproduitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFactureBycodeproduitCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFactureBycodeproduitDelegate, new object[] {
                        idF1}, this.onEndGetAllFactureBycodeproduitDelegate, this.onGetAllFactureBycodeproduitCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFacture(System.DateTime date1, System.DateTime date2) {
            return base.Channel.GetAllFacture(date1, date2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllFacture(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFacture(date1, date2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFacture(System.IAsyncResult result) {
            return base.Channel.EndGetAllFacture(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFacture(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime date1 = ((System.DateTime)(inValues[0]));
            System.DateTime date2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllFacture(date1, date2, callback, asyncState);
        }
        
        private object[] OnEndGetAllFacture(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Facture> retVal = this.EndGetAllFacture(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFactureCompleted(object state) {
            if ((this.GetAllFactureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFactureCompleted(this, new GetAllFactureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFactureAsync(System.DateTime date1, System.DateTime date2) {
            this.GetAllFactureAsync(date1, date2, null);
        }
        
        public void GetAllFactureAsync(System.DateTime date1, System.DateTime date2, object userState) {
            if ((this.onBeginGetAllFactureDelegate == null)) {
                this.onBeginGetAllFactureDelegate = new BeginOperationDelegate(this.OnBeginGetAllFacture);
            }
            if ((this.onEndGetAllFactureDelegate == null)) {
                this.onEndGetAllFactureDelegate = new EndOperationDelegate(this.OnEndGetAllFacture);
            }
            if ((this.onGetAllFactureCompletedDelegate == null)) {
                this.onGetAllFactureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFactureCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFactureDelegate, new object[] {
                        date1,
                        date2}, this.onEndGetAllFactureDelegate, this.onGetAllFactureCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFactureAll() {
            return base.Channel.GetAllFactureAll();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllFactureAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFactureAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFactureAll(System.IAsyncResult result) {
            return base.Channel.EndGetAllFactureAll(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFactureAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllFactureAll(callback, asyncState);
        }
        
        private object[] OnEndGetAllFactureAll(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Facture> retVal = this.EndGetAllFactureAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFactureAllCompleted(object state) {
            if ((this.GetAllFactureAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFactureAllCompleted(this, new GetAllFactureAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFactureAllAsync() {
            this.GetAllFactureAllAsync(null);
        }
        
        public void GetAllFactureAllAsync(object userState) {
            if ((this.onBeginGetAllFactureAllDelegate == null)) {
                this.onBeginGetAllFactureAllDelegate = new BeginOperationDelegate(this.OnBeginGetAllFactureAll);
            }
            if ((this.onEndGetAllFactureAllDelegate == null)) {
                this.onEndGetAllFactureAllDelegate = new EndOperationDelegate(this.OnEndGetAllFactureAll);
            }
            if ((this.onGetAllFactureAllCompletedDelegate == null)) {
                this.onGetAllFactureAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFactureAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFactureAllDelegate, null, this.onEndGetAllFactureAllDelegate, this.onGetAllFactureAllCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFactureBycompteur(string idF1) {
            return base.Channel.GetAllFactureBycompteur(idF1);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllFactureBycompteur(string idF1, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFactureBycompteur(idF1, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFactureBycompteur(System.IAsyncResult result) {
            return base.Channel.EndGetAllFactureBycompteur(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFactureBycompteur(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idF1 = ((string)(inValues[0]));
            return this.BeginGetAllFactureBycompteur(idF1, callback, asyncState);
        }
        
        private object[] OnEndGetAllFactureBycompteur(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Facture> retVal = this.EndGetAllFactureBycompteur(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFactureBycompteurCompleted(object state) {
            if ((this.GetAllFactureBycompteurCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFactureBycompteurCompleted(this, new GetAllFactureBycompteurCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFactureBycompteurAsync(string idF1) {
            this.GetAllFactureBycompteurAsync(idF1, null);
        }
        
        public void GetAllFactureBycompteurAsync(string idF1, object userState) {
            if ((this.onBeginGetAllFactureBycompteurDelegate == null)) {
                this.onBeginGetAllFactureBycompteurDelegate = new BeginOperationDelegate(this.OnBeginGetAllFactureBycompteur);
            }
            if ((this.onEndGetAllFactureBycompteurDelegate == null)) {
                this.onEndGetAllFactureBycompteurDelegate = new EndOperationDelegate(this.OnEndGetAllFactureBycompteur);
            }
            if ((this.onGetAllFactureBycompteurCompletedDelegate == null)) {
                this.onGetAllFactureBycompteurCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFactureBycompteurCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFactureBycompteurDelegate, new object[] {
                        idF1}, this.onEndGetAllFactureBycompteurDelegate, this.onGetAllFactureBycompteurCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFactureByCode(int clepatient) {
            return base.Channel.GetAllFactureByCode(clepatient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllFactureByCode(int clepatient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFactureByCode(clepatient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFactureByCode(System.IAsyncResult result) {
            return base.Channel.EndGetAllFactureByCode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFactureByCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int clepatient = ((int)(inValues[0]));
            return this.BeginGetAllFactureByCode(clepatient, callback, asyncState);
        }
        
        private object[] OnEndGetAllFactureByCode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Facture> retVal = this.EndGetAllFactureByCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFactureByCodeCompleted(object state) {
            if ((this.GetAllFactureByCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFactureByCodeCompleted(this, new GetAllFactureByCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFactureByCodeAsync(int clepatient) {
            this.GetAllFactureByCodeAsync(clepatient, null);
        }
        
        public void GetAllFactureByCodeAsync(int clepatient, object userState) {
            if ((this.onBeginGetAllFactureByCodeDelegate == null)) {
                this.onBeginGetAllFactureByCodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllFactureByCode);
            }
            if ((this.onEndGetAllFactureByCodeDelegate == null)) {
                this.onEndGetAllFactureByCodeDelegate = new EndOperationDelegate(this.OnEndGetAllFactureByCode);
            }
            if ((this.onGetAllFactureByCodeCompletedDelegate == null)) {
                this.onGetAllFactureByCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFactureByCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFactureByCodeDelegate, new object[] {
                        clepatient}, this.onEndGetAllFactureByCodeDelegate, this.onGetAllFactureByCodeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFactureByCle(string clepatient) {
            return base.Channel.GetAllFactureByCle(clepatient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllFactureByCle(string clepatient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFactureByCle(clepatient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFactureByCle(System.IAsyncResult result) {
            return base.Channel.EndGetAllFactureByCle(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFactureByCle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clepatient = ((string)(inValues[0]));
            return this.BeginGetAllFactureByCle(clepatient, callback, asyncState);
        }
        
        private object[] OnEndGetAllFactureByCle(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Facture> retVal = this.EndGetAllFactureByCle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFactureByCleCompleted(object state) {
            if ((this.GetAllFactureByCleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFactureByCleCompleted(this, new GetAllFactureByCleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFactureByCleAsync(string clepatient) {
            this.GetAllFactureByCleAsync(clepatient, null);
        }
        
        public void GetAllFactureByCleAsync(string clepatient, object userState) {
            if ((this.onBeginGetAllFactureByCleDelegate == null)) {
                this.onBeginGetAllFactureByCleDelegate = new BeginOperationDelegate(this.OnBeginGetAllFactureByCle);
            }
            if ((this.onEndGetAllFactureByCleDelegate == null)) {
                this.onEndGetAllFactureByCleDelegate = new EndOperationDelegate(this.OnEndGetAllFactureByCle);
            }
            if ((this.onGetAllFactureByCleCompletedDelegate == null)) {
                this.onGetAllFactureByCleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFactureByCleCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFactureByCleDelegate, new object[] {
                        clepatient}, this.onEndGetAllFactureByCleDelegate, this.onGetAllFactureByCleCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Facture> GetAllFactureByOper(string idmedecin) {
            return base.Channel.GetAllFactureByOper(idmedecin);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllFactureByOper(string idmedecin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFactureByOper(idmedecin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Facture> EndGetAllFactureByOper(System.IAsyncResult result) {
            return base.Channel.EndGetAllFactureByOper(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFactureByOper(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idmedecin = ((string)(inValues[0]));
            return this.BeginGetAllFactureByOper(idmedecin, callback, asyncState);
        }
        
        private object[] OnEndGetAllFactureByOper(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Facture> retVal = this.EndGetAllFactureByOper(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFactureByOperCompleted(object state) {
            if ((this.GetAllFactureByOperCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFactureByOperCompleted(this, new GetAllFactureByOperCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFactureByOperAsync(string idmedecin) {
            this.GetAllFactureByOperAsync(idmedecin, null);
        }
        
        public void GetAllFactureByOperAsync(string idmedecin, object userState) {
            if ((this.onBeginGetAllFactureByOperDelegate == null)) {
                this.onBeginGetAllFactureByOperDelegate = new BeginOperationDelegate(this.OnBeginGetAllFactureByOper);
            }
            if ((this.onEndGetAllFactureByOperDelegate == null)) {
                this.onEndGetAllFactureByOperDelegate = new EndOperationDelegate(this.OnEndGetAllFactureByOper);
            }
            if ((this.onGetAllFactureByOperCompletedDelegate == null)) {
                this.onGetAllFactureByOperCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFactureByOperCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFactureByOperDelegate, new object[] {
                        idmedecin}, this.onEndGetAllFactureByOperDelegate, this.onGetAllFactureByOperCompletedDelegate, userState);
        }
        
        public bool InsertFacture(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE, string document) {
            return base.Channel.InsertFacture(objf1, LISTFACTURE, document);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertFacture(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE, string document, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertFacture(objf1, LISTFACTURE, document, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndInsertFacture(System.IAsyncResult result) {
            return base.Channel.EndInsertFacture(result);
        }
        
        private System.IAsyncResult OnBeginInsertFacture(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.F1 objf1 = ((NewOptics.SVC.F1)(inValues[0]));
            System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE = ((System.Collections.Generic.List<NewOptics.SVC.Facture>)(inValues[1]));
            string document = ((string)(inValues[2]));
            return this.BeginInsertFacture(objf1, LISTFACTURE, document, callback, asyncState);
        }
        
        private object[] OnEndInsertFacture(System.IAsyncResult result) {
            bool retVal = this.EndInsertFacture(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertFactureCompleted(object state) {
            if ((this.InsertFactureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertFactureCompleted(this, new InsertFactureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertFactureAsync(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE, string document) {
            this.InsertFactureAsync(objf1, LISTFACTURE, document, null);
        }
        
        public void InsertFactureAsync(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE, string document, object userState) {
            if ((this.onBeginInsertFactureDelegate == null)) {
                this.onBeginInsertFactureDelegate = new BeginOperationDelegate(this.OnBeginInsertFacture);
            }
            if ((this.onEndInsertFactureDelegate == null)) {
                this.onEndInsertFactureDelegate = new EndOperationDelegate(this.OnEndInsertFacture);
            }
            if ((this.onInsertFactureCompletedDelegate == null)) {
                this.onInsertFactureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertFactureCompleted);
            }
            base.InvokeAsync(this.onBeginInsertFactureDelegate, new object[] {
                        objf1,
                        LISTFACTURE,
                        document}, this.onEndInsertFactureDelegate, this.onInsertFactureCompletedDelegate, userState);
        }
        
        public bool InsertFactureSansStock(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE, string document) {
            return base.Channel.InsertFactureSansStock(objf1, LISTFACTURE, document);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertFactureSansStock(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE, string document, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertFactureSansStock(objf1, LISTFACTURE, document, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndInsertFactureSansStock(System.IAsyncResult result) {
            return base.Channel.EndInsertFactureSansStock(result);
        }
        
        private System.IAsyncResult OnBeginInsertFactureSansStock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.F1 objf1 = ((NewOptics.SVC.F1)(inValues[0]));
            System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE = ((System.Collections.Generic.List<NewOptics.SVC.Facture>)(inValues[1]));
            string document = ((string)(inValues[2]));
            return this.BeginInsertFactureSansStock(objf1, LISTFACTURE, document, callback, asyncState);
        }
        
        private object[] OnEndInsertFactureSansStock(System.IAsyncResult result) {
            bool retVal = this.EndInsertFactureSansStock(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertFactureSansStockCompleted(object state) {
            if ((this.InsertFactureSansStockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertFactureSansStockCompleted(this, new InsertFactureSansStockCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertFactureSansStockAsync(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE, string document) {
            this.InsertFactureSansStockAsync(objf1, LISTFACTURE, document, null);
        }
        
        public void InsertFactureSansStockAsync(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> LISTFACTURE, string document, object userState) {
            if ((this.onBeginInsertFactureSansStockDelegate == null)) {
                this.onBeginInsertFactureSansStockDelegate = new BeginOperationDelegate(this.OnBeginInsertFactureSansStock);
            }
            if ((this.onEndInsertFactureSansStockDelegate == null)) {
                this.onEndInsertFactureSansStockDelegate = new EndOperationDelegate(this.OnEndInsertFactureSansStock);
            }
            if ((this.onInsertFactureSansStockCompletedDelegate == null)) {
                this.onInsertFactureSansStockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertFactureSansStockCompleted);
            }
            base.InvokeAsync(this.onBeginInsertFactureSansStockDelegate, new object[] {
                        objf1,
                        LISTFACTURE,
                        document}, this.onEndInsertFactureSansStockDelegate, this.onInsertFactureSansStockCompletedDelegate, userState);
        }
        
        public bool UpdateFacture(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE, System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture, string document) {
            return base.Channel.UpdateFacture(objf1, NouvelleFACTURE, AncienneFacture, document);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateFacture(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE, System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture, string document, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateFacture(objf1, NouvelleFACTURE, AncienneFacture, document, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateFacture(System.IAsyncResult result) {
            return base.Channel.EndUpdateFacture(result);
        }
        
        private System.IAsyncResult OnBeginUpdateFacture(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.F1 objf1 = ((NewOptics.SVC.F1)(inValues[0]));
            System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE = ((System.Collections.Generic.List<NewOptics.SVC.Facture>)(inValues[1]));
            System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture = ((System.Collections.Generic.List<NewOptics.SVC.Facture>)(inValues[2]));
            string document = ((string)(inValues[3]));
            return this.BeginUpdateFacture(objf1, NouvelleFACTURE, AncienneFacture, document, callback, asyncState);
        }
        
        private object[] OnEndUpdateFacture(System.IAsyncResult result) {
            bool retVal = this.EndUpdateFacture(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateFactureCompleted(object state) {
            if ((this.UpdateFactureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateFactureCompleted(this, new UpdateFactureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateFactureAsync(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE, System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture, string document) {
            this.UpdateFactureAsync(objf1, NouvelleFACTURE, AncienneFacture, document, null);
        }
        
        public void UpdateFactureAsync(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE, System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture, string document, object userState) {
            if ((this.onBeginUpdateFactureDelegate == null)) {
                this.onBeginUpdateFactureDelegate = new BeginOperationDelegate(this.OnBeginUpdateFacture);
            }
            if ((this.onEndUpdateFactureDelegate == null)) {
                this.onEndUpdateFactureDelegate = new EndOperationDelegate(this.OnEndUpdateFacture);
            }
            if ((this.onUpdateFactureCompletedDelegate == null)) {
                this.onUpdateFactureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateFactureCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateFactureDelegate, new object[] {
                        objf1,
                        NouvelleFACTURE,
                        AncienneFacture,
                        document}, this.onEndUpdateFactureDelegate, this.onUpdateFactureCompletedDelegate, userState);
        }
        
        public bool UpdateFactureSansStock(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE, System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture, string document) {
            return base.Channel.UpdateFactureSansStock(objf1, NouvelleFACTURE, AncienneFacture, document);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateFactureSansStock(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE, System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture, string document, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateFactureSansStock(objf1, NouvelleFACTURE, AncienneFacture, document, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateFactureSansStock(System.IAsyncResult result) {
            return base.Channel.EndUpdateFactureSansStock(result);
        }
        
        private System.IAsyncResult OnBeginUpdateFactureSansStock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.F1 objf1 = ((NewOptics.SVC.F1)(inValues[0]));
            System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE = ((System.Collections.Generic.List<NewOptics.SVC.Facture>)(inValues[1]));
            System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture = ((System.Collections.Generic.List<NewOptics.SVC.Facture>)(inValues[2]));
            string document = ((string)(inValues[3]));
            return this.BeginUpdateFactureSansStock(objf1, NouvelleFACTURE, AncienneFacture, document, callback, asyncState);
        }
        
        private object[] OnEndUpdateFactureSansStock(System.IAsyncResult result) {
            bool retVal = this.EndUpdateFactureSansStock(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateFactureSansStockCompleted(object state) {
            if ((this.UpdateFactureSansStockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateFactureSansStockCompleted(this, new UpdateFactureSansStockCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateFactureSansStockAsync(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE, System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture, string document) {
            this.UpdateFactureSansStockAsync(objf1, NouvelleFACTURE, AncienneFacture, document, null);
        }
        
        public void UpdateFactureSansStockAsync(NewOptics.SVC.F1 objf1, System.Collections.Generic.List<NewOptics.SVC.Facture> NouvelleFACTURE, System.Collections.Generic.List<NewOptics.SVC.Facture> AncienneFacture, string document, object userState) {
            if ((this.onBeginUpdateFactureSansStockDelegate == null)) {
                this.onBeginUpdateFactureSansStockDelegate = new BeginOperationDelegate(this.OnBeginUpdateFactureSansStock);
            }
            if ((this.onEndUpdateFactureSansStockDelegate == null)) {
                this.onEndUpdateFactureSansStockDelegate = new EndOperationDelegate(this.OnEndUpdateFactureSansStock);
            }
            if ((this.onUpdateFactureSansStockCompletedDelegate == null)) {
                this.onUpdateFactureSansStockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateFactureSansStockCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateFactureSansStockDelegate, new object[] {
                        objf1,
                        NouvelleFACTURE,
                        AncienneFacture,
                        document}, this.onEndUpdateFactureSansStockDelegate, this.onUpdateFactureSansStockCompletedDelegate, userState);
        }
        
        public void DeleteFacture(NewOptics.SVC.Facture obj) {
            base.Channel.DeleteFacture(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteFacture(NewOptics.SVC.Facture obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteFacture(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteFacture(System.IAsyncResult result) {
            base.Channel.EndDeleteFacture(result);
        }
        
        private System.IAsyncResult OnBeginDeleteFacture(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Facture obj = ((NewOptics.SVC.Facture)(inValues[0]));
            return this.BeginDeleteFacture(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteFacture(System.IAsyncResult result) {
            this.EndDeleteFacture(result);
            return null;
        }
        
        private void OnDeleteFactureCompleted(object state) {
            if ((this.DeleteFactureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteFactureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteFactureAsync(NewOptics.SVC.Facture obj) {
            this.DeleteFactureAsync(obj, null);
        }
        
        public void DeleteFactureAsync(NewOptics.SVC.Facture obj, object userState) {
            if ((this.onBeginDeleteFactureDelegate == null)) {
                this.onBeginDeleteFactureDelegate = new BeginOperationDelegate(this.OnBeginDeleteFacture);
            }
            if ((this.onEndDeleteFactureDelegate == null)) {
                this.onEndDeleteFactureDelegate = new EndOperationDelegate(this.OnEndDeleteFacture);
            }
            if ((this.onDeleteFactureCompletedDelegate == null)) {
                this.onDeleteFactureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteFactureCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteFactureDelegate, new object[] {
                        obj}, this.onEndDeleteFactureDelegate, this.onDeleteFactureCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.DepeiementMultipleFournisseur> GetAllDepeiementMultipleFournisseur() {
            return base.Channel.GetAllDepeiementMultipleFournisseur();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDepeiementMultipleFournisseur(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDepeiementMultipleFournisseur(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.DepeiementMultipleFournisseur> EndGetAllDepeiementMultipleFournisseur(System.IAsyncResult result) {
            return base.Channel.EndGetAllDepeiementMultipleFournisseur(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDepeiementMultipleFournisseur(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllDepeiementMultipleFournisseur(callback, asyncState);
        }
        
        private object[] OnEndGetAllDepeiementMultipleFournisseur(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.DepeiementMultipleFournisseur> retVal = this.EndGetAllDepeiementMultipleFournisseur(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDepeiementMultipleFournisseurCompleted(object state) {
            if ((this.GetAllDepeiementMultipleFournisseurCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDepeiementMultipleFournisseurCompleted(this, new GetAllDepeiementMultipleFournisseurCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDepeiementMultipleFournisseurAsync() {
            this.GetAllDepeiementMultipleFournisseurAsync(null);
        }
        
        public void GetAllDepeiementMultipleFournisseurAsync(object userState) {
            if ((this.onBeginGetAllDepeiementMultipleFournisseurDelegate == null)) {
                this.onBeginGetAllDepeiementMultipleFournisseurDelegate = new BeginOperationDelegate(this.OnBeginGetAllDepeiementMultipleFournisseur);
            }
            if ((this.onEndGetAllDepeiementMultipleFournisseurDelegate == null)) {
                this.onEndGetAllDepeiementMultipleFournisseurDelegate = new EndOperationDelegate(this.OnEndGetAllDepeiementMultipleFournisseur);
            }
            if ((this.onGetAllDepeiementMultipleFournisseurCompletedDelegate == null)) {
                this.onGetAllDepeiementMultipleFournisseurCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDepeiementMultipleFournisseurCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDepeiementMultipleFournisseurDelegate, null, this.onEndGetAllDepeiementMultipleFournisseurDelegate, this.onGetAllDepeiementMultipleFournisseurCompletedDelegate, userState);
        }
        
        public void InsertDepeiementMultipleFournisseur(NewOptics.SVC.DepeiementMultipleFournisseur obj) {
            base.Channel.InsertDepeiementMultipleFournisseur(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertDepeiementMultipleFournisseur(NewOptics.SVC.DepeiementMultipleFournisseur obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDepeiementMultipleFournisseur(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertDepeiementMultipleFournisseur(System.IAsyncResult result) {
            base.Channel.EndInsertDepeiementMultipleFournisseur(result);
        }
        
        private System.IAsyncResult OnBeginInsertDepeiementMultipleFournisseur(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.DepeiementMultipleFournisseur obj = ((NewOptics.SVC.DepeiementMultipleFournisseur)(inValues[0]));
            return this.BeginInsertDepeiementMultipleFournisseur(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertDepeiementMultipleFournisseur(System.IAsyncResult result) {
            this.EndInsertDepeiementMultipleFournisseur(result);
            return null;
        }
        
        private void OnInsertDepeiementMultipleFournisseurCompleted(object state) {
            if ((this.InsertDepeiementMultipleFournisseurCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDepeiementMultipleFournisseurCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDepeiementMultipleFournisseurAsync(NewOptics.SVC.DepeiementMultipleFournisseur obj) {
            this.InsertDepeiementMultipleFournisseurAsync(obj, null);
        }
        
        public void InsertDepeiementMultipleFournisseurAsync(NewOptics.SVC.DepeiementMultipleFournisseur obj, object userState) {
            if ((this.onBeginInsertDepeiementMultipleFournisseurDelegate == null)) {
                this.onBeginInsertDepeiementMultipleFournisseurDelegate = new BeginOperationDelegate(this.OnBeginInsertDepeiementMultipleFournisseur);
            }
            if ((this.onEndInsertDepeiementMultipleFournisseurDelegate == null)) {
                this.onEndInsertDepeiementMultipleFournisseurDelegate = new EndOperationDelegate(this.OnEndInsertDepeiementMultipleFournisseur);
            }
            if ((this.onInsertDepeiementMultipleFournisseurCompletedDelegate == null)) {
                this.onInsertDepeiementMultipleFournisseurCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDepeiementMultipleFournisseurCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDepeiementMultipleFournisseurDelegate, new object[] {
                        obj}, this.onEndInsertDepeiementMultipleFournisseurDelegate, this.onInsertDepeiementMultipleFournisseurCompletedDelegate, userState);
        }
        
        public void UpdateDepeiementMultipleFournisseur(NewOptics.SVC.DepeiementMultipleFournisseur obj) {
            base.Channel.UpdateDepeiementMultipleFournisseur(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDepeiementMultipleFournisseur(NewOptics.SVC.DepeiementMultipleFournisseur obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDepeiementMultipleFournisseur(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateDepeiementMultipleFournisseur(System.IAsyncResult result) {
            base.Channel.EndUpdateDepeiementMultipleFournisseur(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDepeiementMultipleFournisseur(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.DepeiementMultipleFournisseur obj = ((NewOptics.SVC.DepeiementMultipleFournisseur)(inValues[0]));
            return this.BeginUpdateDepeiementMultipleFournisseur(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateDepeiementMultipleFournisseur(System.IAsyncResult result) {
            this.EndUpdateDepeiementMultipleFournisseur(result);
            return null;
        }
        
        private void OnUpdateDepeiementMultipleFournisseurCompleted(object state) {
            if ((this.UpdateDepeiementMultipleFournisseurCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDepeiementMultipleFournisseurCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDepeiementMultipleFournisseurAsync(NewOptics.SVC.DepeiementMultipleFournisseur obj) {
            this.UpdateDepeiementMultipleFournisseurAsync(obj, null);
        }
        
        public void UpdateDepeiementMultipleFournisseurAsync(NewOptics.SVC.DepeiementMultipleFournisseur obj, object userState) {
            if ((this.onBeginUpdateDepeiementMultipleFournisseurDelegate == null)) {
                this.onBeginUpdateDepeiementMultipleFournisseurDelegate = new BeginOperationDelegate(this.OnBeginUpdateDepeiementMultipleFournisseur);
            }
            if ((this.onEndUpdateDepeiementMultipleFournisseurDelegate == null)) {
                this.onEndUpdateDepeiementMultipleFournisseurDelegate = new EndOperationDelegate(this.OnEndUpdateDepeiementMultipleFournisseur);
            }
            if ((this.onUpdateDepeiementMultipleFournisseurCompletedDelegate == null)) {
                this.onUpdateDepeiementMultipleFournisseurCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDepeiementMultipleFournisseurCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDepeiementMultipleFournisseurDelegate, new object[] {
                        obj}, this.onEndUpdateDepeiementMultipleFournisseurDelegate, this.onUpdateDepeiementMultipleFournisseurCompletedDelegate, userState);
        }
        
        public void DeleteDepeiementMultipleFournisseur(NewOptics.SVC.DepeiementMultipleFournisseur obj) {
            base.Channel.DeleteDepeiementMultipleFournisseur(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDepeiementMultipleFournisseur(NewOptics.SVC.DepeiementMultipleFournisseur obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDepeiementMultipleFournisseur(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDepeiementMultipleFournisseur(System.IAsyncResult result) {
            base.Channel.EndDeleteDepeiementMultipleFournisseur(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDepeiementMultipleFournisseur(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.DepeiementMultipleFournisseur obj = ((NewOptics.SVC.DepeiementMultipleFournisseur)(inValues[0]));
            return this.BeginDeleteDepeiementMultipleFournisseur(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteDepeiementMultipleFournisseur(System.IAsyncResult result) {
            this.EndDeleteDepeiementMultipleFournisseur(result);
            return null;
        }
        
        private void OnDeleteDepeiementMultipleFournisseurCompleted(object state) {
            if ((this.DeleteDepeiementMultipleFournisseurCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDepeiementMultipleFournisseurCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDepeiementMultipleFournisseurAsync(NewOptics.SVC.DepeiementMultipleFournisseur obj) {
            this.DeleteDepeiementMultipleFournisseurAsync(obj, null);
        }
        
        public void DeleteDepeiementMultipleFournisseurAsync(NewOptics.SVC.DepeiementMultipleFournisseur obj, object userState) {
            if ((this.onBeginDeleteDepeiementMultipleFournisseurDelegate == null)) {
                this.onBeginDeleteDepeiementMultipleFournisseurDelegate = new BeginOperationDelegate(this.OnBeginDeleteDepeiementMultipleFournisseur);
            }
            if ((this.onEndDeleteDepeiementMultipleFournisseurDelegate == null)) {
                this.onEndDeleteDepeiementMultipleFournisseurDelegate = new EndOperationDelegate(this.OnEndDeleteDepeiementMultipleFournisseur);
            }
            if ((this.onDeleteDepeiementMultipleFournisseurCompletedDelegate == null)) {
                this.onDeleteDepeiementMultipleFournisseurCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDepeiementMultipleFournisseurCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDepeiementMultipleFournisseurDelegate, new object[] {
                        obj}, this.onEndDeleteDepeiementMultipleFournisseurDelegate, this.onDeleteDepeiementMultipleFournisseurCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.DepeiementMultiple> GetAllDepeiementMultiple() {
            return base.Channel.GetAllDepeiementMultiple();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDepeiementMultiple(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDepeiementMultiple(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.DepeiementMultiple> EndGetAllDepeiementMultiple(System.IAsyncResult result) {
            return base.Channel.EndGetAllDepeiementMultiple(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDepeiementMultiple(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllDepeiementMultiple(callback, asyncState);
        }
        
        private object[] OnEndGetAllDepeiementMultiple(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.DepeiementMultiple> retVal = this.EndGetAllDepeiementMultiple(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDepeiementMultipleCompleted(object state) {
            if ((this.GetAllDepeiementMultipleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDepeiementMultipleCompleted(this, new GetAllDepeiementMultipleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDepeiementMultipleAsync() {
            this.GetAllDepeiementMultipleAsync(null);
        }
        
        public void GetAllDepeiementMultipleAsync(object userState) {
            if ((this.onBeginGetAllDepeiementMultipleDelegate == null)) {
                this.onBeginGetAllDepeiementMultipleDelegate = new BeginOperationDelegate(this.OnBeginGetAllDepeiementMultiple);
            }
            if ((this.onEndGetAllDepeiementMultipleDelegate == null)) {
                this.onEndGetAllDepeiementMultipleDelegate = new EndOperationDelegate(this.OnEndGetAllDepeiementMultiple);
            }
            if ((this.onGetAllDepeiementMultipleCompletedDelegate == null)) {
                this.onGetAllDepeiementMultipleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDepeiementMultipleCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDepeiementMultipleDelegate, null, this.onEndGetAllDepeiementMultipleDelegate, this.onGetAllDepeiementMultipleCompletedDelegate, userState);
        }
        
        public void InsertDepeiementMultiple(NewOptics.SVC.DepeiementMultiple obj) {
            base.Channel.InsertDepeiementMultiple(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertDepeiementMultiple(NewOptics.SVC.DepeiementMultiple obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDepeiementMultiple(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertDepeiementMultiple(System.IAsyncResult result) {
            base.Channel.EndInsertDepeiementMultiple(result);
        }
        
        private System.IAsyncResult OnBeginInsertDepeiementMultiple(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.DepeiementMultiple obj = ((NewOptics.SVC.DepeiementMultiple)(inValues[0]));
            return this.BeginInsertDepeiementMultiple(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertDepeiementMultiple(System.IAsyncResult result) {
            this.EndInsertDepeiementMultiple(result);
            return null;
        }
        
        private void OnInsertDepeiementMultipleCompleted(object state) {
            if ((this.InsertDepeiementMultipleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDepeiementMultipleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDepeiementMultipleAsync(NewOptics.SVC.DepeiementMultiple obj) {
            this.InsertDepeiementMultipleAsync(obj, null);
        }
        
        public void InsertDepeiementMultipleAsync(NewOptics.SVC.DepeiementMultiple obj, object userState) {
            if ((this.onBeginInsertDepeiementMultipleDelegate == null)) {
                this.onBeginInsertDepeiementMultipleDelegate = new BeginOperationDelegate(this.OnBeginInsertDepeiementMultiple);
            }
            if ((this.onEndInsertDepeiementMultipleDelegate == null)) {
                this.onEndInsertDepeiementMultipleDelegate = new EndOperationDelegate(this.OnEndInsertDepeiementMultiple);
            }
            if ((this.onInsertDepeiementMultipleCompletedDelegate == null)) {
                this.onInsertDepeiementMultipleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDepeiementMultipleCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDepeiementMultipleDelegate, new object[] {
                        obj}, this.onEndInsertDepeiementMultipleDelegate, this.onInsertDepeiementMultipleCompletedDelegate, userState);
        }
        
        public void UpdateDepeiementMultiple(NewOptics.SVC.DepeiementMultiple obj) {
            base.Channel.UpdateDepeiementMultiple(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDepeiementMultiple(NewOptics.SVC.DepeiementMultiple obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDepeiementMultiple(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateDepeiementMultiple(System.IAsyncResult result) {
            base.Channel.EndUpdateDepeiementMultiple(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDepeiementMultiple(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.DepeiementMultiple obj = ((NewOptics.SVC.DepeiementMultiple)(inValues[0]));
            return this.BeginUpdateDepeiementMultiple(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateDepeiementMultiple(System.IAsyncResult result) {
            this.EndUpdateDepeiementMultiple(result);
            return null;
        }
        
        private void OnUpdateDepeiementMultipleCompleted(object state) {
            if ((this.UpdateDepeiementMultipleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDepeiementMultipleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDepeiementMultipleAsync(NewOptics.SVC.DepeiementMultiple obj) {
            this.UpdateDepeiementMultipleAsync(obj, null);
        }
        
        public void UpdateDepeiementMultipleAsync(NewOptics.SVC.DepeiementMultiple obj, object userState) {
            if ((this.onBeginUpdateDepeiementMultipleDelegate == null)) {
                this.onBeginUpdateDepeiementMultipleDelegate = new BeginOperationDelegate(this.OnBeginUpdateDepeiementMultiple);
            }
            if ((this.onEndUpdateDepeiementMultipleDelegate == null)) {
                this.onEndUpdateDepeiementMultipleDelegate = new EndOperationDelegate(this.OnEndUpdateDepeiementMultiple);
            }
            if ((this.onUpdateDepeiementMultipleCompletedDelegate == null)) {
                this.onUpdateDepeiementMultipleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDepeiementMultipleCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDepeiementMultipleDelegate, new object[] {
                        obj}, this.onEndUpdateDepeiementMultipleDelegate, this.onUpdateDepeiementMultipleCompletedDelegate, userState);
        }
        
        public void DeleteDepeiementMultiple(NewOptics.SVC.DepeiementMultiple obj) {
            base.Channel.DeleteDepeiementMultiple(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDepeiementMultiple(NewOptics.SVC.DepeiementMultiple obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDepeiementMultiple(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDepeiementMultiple(System.IAsyncResult result) {
            base.Channel.EndDeleteDepeiementMultiple(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDepeiementMultiple(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.DepeiementMultiple obj = ((NewOptics.SVC.DepeiementMultiple)(inValues[0]));
            return this.BeginDeleteDepeiementMultiple(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteDepeiementMultiple(System.IAsyncResult result) {
            this.EndDeleteDepeiementMultiple(result);
            return null;
        }
        
        private void OnDeleteDepeiementMultipleCompleted(object state) {
            if ((this.DeleteDepeiementMultipleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDepeiementMultipleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDepeiementMultipleAsync(NewOptics.SVC.DepeiementMultiple obj) {
            this.DeleteDepeiementMultipleAsync(obj, null);
        }
        
        public void DeleteDepeiementMultipleAsync(NewOptics.SVC.DepeiementMultiple obj, object userState) {
            if ((this.onBeginDeleteDepeiementMultipleDelegate == null)) {
                this.onBeginDeleteDepeiementMultipleDelegate = new BeginOperationDelegate(this.OnBeginDeleteDepeiementMultiple);
            }
            if ((this.onEndDeleteDepeiementMultipleDelegate == null)) {
                this.onEndDeleteDepeiementMultipleDelegate = new EndOperationDelegate(this.OnEndDeleteDepeiementMultiple);
            }
            if ((this.onDeleteDepeiementMultipleCompletedDelegate == null)) {
                this.onDeleteDepeiementMultipleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDepeiementMultipleCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDepeiementMultipleDelegate, new object[] {
                        obj}, this.onEndDeleteDepeiementMultipleDelegate, this.onDeleteDepeiementMultipleCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.depaief> GetAlldepaief() {
            return base.Channel.GetAlldepaief();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAlldepaief(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAlldepaief(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.depaief> EndGetAlldepaief(System.IAsyncResult result) {
            return base.Channel.EndGetAlldepaief(result);
        }
        
        private System.IAsyncResult OnBeginGetAlldepaief(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAlldepaief(callback, asyncState);
        }
        
        private object[] OnEndGetAlldepaief(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.depaief> retVal = this.EndGetAlldepaief(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAlldepaiefCompleted(object state) {
            if ((this.GetAlldepaiefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAlldepaiefCompleted(this, new GetAlldepaiefCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAlldepaiefAsync() {
            this.GetAlldepaiefAsync(null);
        }
        
        public void GetAlldepaiefAsync(object userState) {
            if ((this.onBeginGetAlldepaiefDelegate == null)) {
                this.onBeginGetAlldepaiefDelegate = new BeginOperationDelegate(this.OnBeginGetAlldepaief);
            }
            if ((this.onEndGetAlldepaiefDelegate == null)) {
                this.onEndGetAlldepaiefDelegate = new EndOperationDelegate(this.OnEndGetAlldepaief);
            }
            if ((this.onGetAlldepaiefCompletedDelegate == null)) {
                this.onGetAlldepaiefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAlldepaiefCompleted);
            }
            base.InvokeAsync(this.onBeginGetAlldepaiefDelegate, null, this.onEndGetAlldepaiefDelegate, this.onGetAlldepaiefCompletedDelegate, userState);
        }
        
        public void Insertdepaief(NewOptics.SVC.depaief obj) {
            base.Channel.Insertdepaief(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertdepaief(NewOptics.SVC.depaief obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertdepaief(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertdepaief(System.IAsyncResult result) {
            base.Channel.EndInsertdepaief(result);
        }
        
        private System.IAsyncResult OnBeginInsertdepaief(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.depaief obj = ((NewOptics.SVC.depaief)(inValues[0]));
            return this.BeginInsertdepaief(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertdepaief(System.IAsyncResult result) {
            this.EndInsertdepaief(result);
            return null;
        }
        
        private void OnInsertdepaiefCompleted(object state) {
            if ((this.InsertdepaiefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertdepaiefCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertdepaiefAsync(NewOptics.SVC.depaief obj) {
            this.InsertdepaiefAsync(obj, null);
        }
        
        public void InsertdepaiefAsync(NewOptics.SVC.depaief obj, object userState) {
            if ((this.onBeginInsertdepaiefDelegate == null)) {
                this.onBeginInsertdepaiefDelegate = new BeginOperationDelegate(this.OnBeginInsertdepaief);
            }
            if ((this.onEndInsertdepaiefDelegate == null)) {
                this.onEndInsertdepaiefDelegate = new EndOperationDelegate(this.OnEndInsertdepaief);
            }
            if ((this.onInsertdepaiefCompletedDelegate == null)) {
                this.onInsertdepaiefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertdepaiefCompleted);
            }
            base.InvokeAsync(this.onBeginInsertdepaiefDelegate, new object[] {
                        obj}, this.onEndInsertdepaiefDelegate, this.onInsertdepaiefCompletedDelegate, userState);
        }
        
        public void Updatedepaief(NewOptics.SVC.depaief obj) {
            base.Channel.Updatedepaief(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatedepaief(NewOptics.SVC.depaief obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatedepaief(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdatedepaief(System.IAsyncResult result) {
            base.Channel.EndUpdatedepaief(result);
        }
        
        private System.IAsyncResult OnBeginUpdatedepaief(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.depaief obj = ((NewOptics.SVC.depaief)(inValues[0]));
            return this.BeginUpdatedepaief(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdatedepaief(System.IAsyncResult result) {
            this.EndUpdatedepaief(result);
            return null;
        }
        
        private void OnUpdatedepaiefCompleted(object state) {
            if ((this.UpdatedepaiefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatedepaiefCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatedepaiefAsync(NewOptics.SVC.depaief obj) {
            this.UpdatedepaiefAsync(obj, null);
        }
        
        public void UpdatedepaiefAsync(NewOptics.SVC.depaief obj, object userState) {
            if ((this.onBeginUpdatedepaiefDelegate == null)) {
                this.onBeginUpdatedepaiefDelegate = new BeginOperationDelegate(this.OnBeginUpdatedepaief);
            }
            if ((this.onEndUpdatedepaiefDelegate == null)) {
                this.onEndUpdatedepaiefDelegate = new EndOperationDelegate(this.OnEndUpdatedepaief);
            }
            if ((this.onUpdatedepaiefCompletedDelegate == null)) {
                this.onUpdatedepaiefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatedepaiefCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatedepaiefDelegate, new object[] {
                        obj}, this.onEndUpdatedepaiefDelegate, this.onUpdatedepaiefCompletedDelegate, userState);
        }
        
        public void Deletedepaief(NewOptics.SVC.depaief obj) {
            base.Channel.Deletedepaief(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletedepaief(NewOptics.SVC.depaief obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletedepaief(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletedepaief(System.IAsyncResult result) {
            base.Channel.EndDeletedepaief(result);
        }
        
        private System.IAsyncResult OnBeginDeletedepaief(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.depaief obj = ((NewOptics.SVC.depaief)(inValues[0]));
            return this.BeginDeletedepaief(obj, callback, asyncState);
        }
        
        private object[] OnEndDeletedepaief(System.IAsyncResult result) {
            this.EndDeletedepaief(result);
            return null;
        }
        
        private void OnDeletedepaiefCompleted(object state) {
            if ((this.DeletedepaiefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletedepaiefCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletedepaiefAsync(NewOptics.SVC.depaief obj) {
            this.DeletedepaiefAsync(obj, null);
        }
        
        public void DeletedepaiefAsync(NewOptics.SVC.depaief obj, object userState) {
            if ((this.onBeginDeletedepaiefDelegate == null)) {
                this.onBeginDeletedepaiefDelegate = new BeginOperationDelegate(this.OnBeginDeletedepaief);
            }
            if ((this.onEndDeletedepaiefDelegate == null)) {
                this.onEndDeletedepaiefDelegate = new EndOperationDelegate(this.OnEndDeletedepaief);
            }
            if ((this.onDeletedepaiefCompletedDelegate == null)) {
                this.onDeletedepaiefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletedepaiefCompleted);
            }
            base.InvokeAsync(this.onBeginDeletedepaiefDelegate, new object[] {
                        obj}, this.onEndDeletedepaiefDelegate, this.onDeletedepaiefCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Depeiment> GetAllDepeiment() {
            return base.Channel.GetAllDepeiment();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDepeiment(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDepeiment(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Depeiment> EndGetAllDepeiment(System.IAsyncResult result) {
            return base.Channel.EndGetAllDepeiment(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDepeiment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllDepeiment(callback, asyncState);
        }
        
        private object[] OnEndGetAllDepeiment(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Depeiment> retVal = this.EndGetAllDepeiment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDepeimentCompleted(object state) {
            if ((this.GetAllDepeimentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDepeimentCompleted(this, new GetAllDepeimentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDepeimentAsync() {
            this.GetAllDepeimentAsync(null);
        }
        
        public void GetAllDepeimentAsync(object userState) {
            if ((this.onBeginGetAllDepeimentDelegate == null)) {
                this.onBeginGetAllDepeimentDelegate = new BeginOperationDelegate(this.OnBeginGetAllDepeiment);
            }
            if ((this.onEndGetAllDepeimentDelegate == null)) {
                this.onEndGetAllDepeimentDelegate = new EndOperationDelegate(this.OnEndGetAllDepeiment);
            }
            if ((this.onGetAllDepeimentCompletedDelegate == null)) {
                this.onGetAllDepeimentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDepeimentCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDepeimentDelegate, null, this.onEndGetAllDepeimentDelegate, this.onGetAllDepeimentCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Depeiment> GetAllDepeimentByF1(string stringf) {
            return base.Channel.GetAllDepeimentByF1(stringf);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDepeimentByF1(string stringf, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDepeimentByF1(stringf, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Depeiment> EndGetAllDepeimentByF1(System.IAsyncResult result) {
            return base.Channel.EndGetAllDepeimentByF1(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDepeimentByF1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string stringf = ((string)(inValues[0]));
            return this.BeginGetAllDepeimentByF1(stringf, callback, asyncState);
        }
        
        private object[] OnEndGetAllDepeimentByF1(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Depeiment> retVal = this.EndGetAllDepeimentByF1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDepeimentByF1Completed(object state) {
            if ((this.GetAllDepeimentByF1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDepeimentByF1Completed(this, new GetAllDepeimentByF1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDepeimentByF1Async(string stringf) {
            this.GetAllDepeimentByF1Async(stringf, null);
        }
        
        public void GetAllDepeimentByF1Async(string stringf, object userState) {
            if ((this.onBeginGetAllDepeimentByF1Delegate == null)) {
                this.onBeginGetAllDepeimentByF1Delegate = new BeginOperationDelegate(this.OnBeginGetAllDepeimentByF1);
            }
            if ((this.onEndGetAllDepeimentByF1Delegate == null)) {
                this.onEndGetAllDepeimentByF1Delegate = new EndOperationDelegate(this.OnEndGetAllDepeimentByF1);
            }
            if ((this.onGetAllDepeimentByF1CompletedDelegate == null)) {
                this.onGetAllDepeimentByF1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDepeimentByF1Completed);
            }
            base.InvokeAsync(this.onBeginGetAllDepeimentByF1Delegate, new object[] {
                        stringf}, this.onEndGetAllDepeimentByF1Delegate, this.onGetAllDepeimentByF1CompletedDelegate, userState);
        }
        
        public void InsertDepeiment(NewOptics.SVC.Depeiment obj) {
            base.Channel.InsertDepeiment(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertDepeiment(NewOptics.SVC.Depeiment obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDepeiment(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertDepeiment(System.IAsyncResult result) {
            base.Channel.EndInsertDepeiment(result);
        }
        
        private System.IAsyncResult OnBeginInsertDepeiment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Depeiment obj = ((NewOptics.SVC.Depeiment)(inValues[0]));
            return this.BeginInsertDepeiment(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertDepeiment(System.IAsyncResult result) {
            this.EndInsertDepeiment(result);
            return null;
        }
        
        private void OnInsertDepeimentCompleted(object state) {
            if ((this.InsertDepeimentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDepeimentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDepeimentAsync(NewOptics.SVC.Depeiment obj) {
            this.InsertDepeimentAsync(obj, null);
        }
        
        public void InsertDepeimentAsync(NewOptics.SVC.Depeiment obj, object userState) {
            if ((this.onBeginInsertDepeimentDelegate == null)) {
                this.onBeginInsertDepeimentDelegate = new BeginOperationDelegate(this.OnBeginInsertDepeiment);
            }
            if ((this.onEndInsertDepeimentDelegate == null)) {
                this.onEndInsertDepeimentDelegate = new EndOperationDelegate(this.OnEndInsertDepeiment);
            }
            if ((this.onInsertDepeimentCompletedDelegate == null)) {
                this.onInsertDepeimentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDepeimentCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDepeimentDelegate, new object[] {
                        obj}, this.onEndInsertDepeimentDelegate, this.onInsertDepeimentCompletedDelegate, userState);
        }
        
        public void UpdateDepeiment(NewOptics.SVC.Depeiment obj) {
            base.Channel.UpdateDepeiment(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDepeiment(NewOptics.SVC.Depeiment obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDepeiment(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateDepeiment(System.IAsyncResult result) {
            base.Channel.EndUpdateDepeiment(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDepeiment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Depeiment obj = ((NewOptics.SVC.Depeiment)(inValues[0]));
            return this.BeginUpdateDepeiment(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateDepeiment(System.IAsyncResult result) {
            this.EndUpdateDepeiment(result);
            return null;
        }
        
        private void OnUpdateDepeimentCompleted(object state) {
            if ((this.UpdateDepeimentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDepeimentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDepeimentAsync(NewOptics.SVC.Depeiment obj) {
            this.UpdateDepeimentAsync(obj, null);
        }
        
        public void UpdateDepeimentAsync(NewOptics.SVC.Depeiment obj, object userState) {
            if ((this.onBeginUpdateDepeimentDelegate == null)) {
                this.onBeginUpdateDepeimentDelegate = new BeginOperationDelegate(this.OnBeginUpdateDepeiment);
            }
            if ((this.onEndUpdateDepeimentDelegate == null)) {
                this.onEndUpdateDepeimentDelegate = new EndOperationDelegate(this.OnEndUpdateDepeiment);
            }
            if ((this.onUpdateDepeimentCompletedDelegate == null)) {
                this.onUpdateDepeimentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDepeimentCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDepeimentDelegate, new object[] {
                        obj}, this.onEndUpdateDepeimentDelegate, this.onUpdateDepeimentCompletedDelegate, userState);
        }
        
        public void DeleteDepeiment(NewOptics.SVC.Depeiment obj) {
            base.Channel.DeleteDepeiment(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDepeiment(NewOptics.SVC.Depeiment obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDepeiment(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDepeiment(System.IAsyncResult result) {
            base.Channel.EndDeleteDepeiment(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDepeiment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Depeiment obj = ((NewOptics.SVC.Depeiment)(inValues[0]));
            return this.BeginDeleteDepeiment(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteDepeiment(System.IAsyncResult result) {
            this.EndDeleteDepeiment(result);
            return null;
        }
        
        private void OnDeleteDepeimentCompleted(object state) {
            if ((this.DeleteDepeimentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDepeimentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDepeimentAsync(NewOptics.SVC.Depeiment obj) {
            this.DeleteDepeimentAsync(obj, null);
        }
        
        public void DeleteDepeimentAsync(NewOptics.SVC.Depeiment obj, object userState) {
            if ((this.onBeginDeleteDepeimentDelegate == null)) {
                this.onBeginDeleteDepeimentDelegate = new BeginOperationDelegate(this.OnBeginDeleteDepeiment);
            }
            if ((this.onEndDeleteDepeimentDelegate == null)) {
                this.onEndDeleteDepeimentDelegate = new EndOperationDelegate(this.OnEndDeleteDepeiment);
            }
            if ((this.onDeleteDepeimentCompletedDelegate == null)) {
                this.onDeleteDepeimentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDepeimentCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDepeimentDelegate, new object[] {
                        obj}, this.onEndDeleteDepeimentDelegate, this.onDeleteDepeimentCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.MotifDepense> GetAllMotifDepense() {
            return base.Channel.GetAllMotifDepense();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMotifDepense(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMotifDepense(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.MotifDepense> EndGetAllMotifDepense(System.IAsyncResult result) {
            return base.Channel.EndGetAllMotifDepense(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMotifDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllMotifDepense(callback, asyncState);
        }
        
        private object[] OnEndGetAllMotifDepense(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.MotifDepense> retVal = this.EndGetAllMotifDepense(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMotifDepenseCompleted(object state) {
            if ((this.GetAllMotifDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMotifDepenseCompleted(this, new GetAllMotifDepenseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMotifDepenseAsync() {
            this.GetAllMotifDepenseAsync(null);
        }
        
        public void GetAllMotifDepenseAsync(object userState) {
            if ((this.onBeginGetAllMotifDepenseDelegate == null)) {
                this.onBeginGetAllMotifDepenseDelegate = new BeginOperationDelegate(this.OnBeginGetAllMotifDepense);
            }
            if ((this.onEndGetAllMotifDepenseDelegate == null)) {
                this.onEndGetAllMotifDepenseDelegate = new EndOperationDelegate(this.OnEndGetAllMotifDepense);
            }
            if ((this.onGetAllMotifDepenseCompletedDelegate == null)) {
                this.onGetAllMotifDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMotifDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMotifDepenseDelegate, null, this.onEndGetAllMotifDepenseDelegate, this.onGetAllMotifDepenseCompletedDelegate, userState);
        }
        
        public void InsertMotifDepense(NewOptics.SVC.MotifDepense obj) {
            base.Channel.InsertMotifDepense(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertMotifDepense(NewOptics.SVC.MotifDepense obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertMotifDepense(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertMotifDepense(System.IAsyncResult result) {
            base.Channel.EndInsertMotifDepense(result);
        }
        
        private System.IAsyncResult OnBeginInsertMotifDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.MotifDepense obj = ((NewOptics.SVC.MotifDepense)(inValues[0]));
            return this.BeginInsertMotifDepense(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertMotifDepense(System.IAsyncResult result) {
            this.EndInsertMotifDepense(result);
            return null;
        }
        
        private void OnInsertMotifDepenseCompleted(object state) {
            if ((this.InsertMotifDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertMotifDepenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertMotifDepenseAsync(NewOptics.SVC.MotifDepense obj) {
            this.InsertMotifDepenseAsync(obj, null);
        }
        
        public void InsertMotifDepenseAsync(NewOptics.SVC.MotifDepense obj, object userState) {
            if ((this.onBeginInsertMotifDepenseDelegate == null)) {
                this.onBeginInsertMotifDepenseDelegate = new BeginOperationDelegate(this.OnBeginInsertMotifDepense);
            }
            if ((this.onEndInsertMotifDepenseDelegate == null)) {
                this.onEndInsertMotifDepenseDelegate = new EndOperationDelegate(this.OnEndInsertMotifDepense);
            }
            if ((this.onInsertMotifDepenseCompletedDelegate == null)) {
                this.onInsertMotifDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertMotifDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginInsertMotifDepenseDelegate, new object[] {
                        obj}, this.onEndInsertMotifDepenseDelegate, this.onInsertMotifDepenseCompletedDelegate, userState);
        }
        
        public void UpdateMotifDepense(NewOptics.SVC.MotifDepense obj) {
            base.Channel.UpdateMotifDepense(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateMotifDepense(NewOptics.SVC.MotifDepense obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMotifDepense(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateMotifDepense(System.IAsyncResult result) {
            base.Channel.EndUpdateMotifDepense(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMotifDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.MotifDepense obj = ((NewOptics.SVC.MotifDepense)(inValues[0]));
            return this.BeginUpdateMotifDepense(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateMotifDepense(System.IAsyncResult result) {
            this.EndUpdateMotifDepense(result);
            return null;
        }
        
        private void OnUpdateMotifDepenseCompleted(object state) {
            if ((this.UpdateMotifDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMotifDepenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMotifDepenseAsync(NewOptics.SVC.MotifDepense obj) {
            this.UpdateMotifDepenseAsync(obj, null);
        }
        
        public void UpdateMotifDepenseAsync(NewOptics.SVC.MotifDepense obj, object userState) {
            if ((this.onBeginUpdateMotifDepenseDelegate == null)) {
                this.onBeginUpdateMotifDepenseDelegate = new BeginOperationDelegate(this.OnBeginUpdateMotifDepense);
            }
            if ((this.onEndUpdateMotifDepenseDelegate == null)) {
                this.onEndUpdateMotifDepenseDelegate = new EndOperationDelegate(this.OnEndUpdateMotifDepense);
            }
            if ((this.onUpdateMotifDepenseCompletedDelegate == null)) {
                this.onUpdateMotifDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMotifDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMotifDepenseDelegate, new object[] {
                        obj}, this.onEndUpdateMotifDepenseDelegate, this.onUpdateMotifDepenseCompletedDelegate, userState);
        }
        
        public void DeleteMotifDepense(NewOptics.SVC.MotifDepense obj) {
            base.Channel.DeleteMotifDepense(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteMotifDepense(NewOptics.SVC.MotifDepense obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMotifDepense(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteMotifDepense(System.IAsyncResult result) {
            base.Channel.EndDeleteMotifDepense(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMotifDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.MotifDepense obj = ((NewOptics.SVC.MotifDepense)(inValues[0]));
            return this.BeginDeleteMotifDepense(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteMotifDepense(System.IAsyncResult result) {
            this.EndDeleteMotifDepense(result);
            return null;
        }
        
        private void OnDeleteMotifDepenseCompleted(object state) {
            if ((this.DeleteMotifDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMotifDepenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMotifDepenseAsync(NewOptics.SVC.MotifDepense obj) {
            this.DeleteMotifDepenseAsync(obj, null);
        }
        
        public void DeleteMotifDepenseAsync(NewOptics.SVC.MotifDepense obj, object userState) {
            if ((this.onBeginDeleteMotifDepenseDelegate == null)) {
                this.onBeginDeleteMotifDepenseDelegate = new BeginOperationDelegate(this.OnBeginDeleteMotifDepense);
            }
            if ((this.onEndDeleteMotifDepenseDelegate == null)) {
                this.onEndDeleteMotifDepenseDelegate = new EndOperationDelegate(this.OnEndDeleteMotifDepense);
            }
            if ((this.onDeleteMotifDepenseCompletedDelegate == null)) {
                this.onDeleteMotifDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMotifDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMotifDepenseDelegate, new object[] {
                        obj}, this.onEndDeleteMotifDepenseDelegate, this.onDeleteMotifDepenseCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Depense> GetAllDepense() {
            return base.Channel.GetAllDepense();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDepense(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDepense(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Depense> EndGetAllDepense(System.IAsyncResult result) {
            return base.Channel.EndGetAllDepense(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllDepense(callback, asyncState);
        }
        
        private object[] OnEndGetAllDepense(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Depense> retVal = this.EndGetAllDepense(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDepenseCompleted(object state) {
            if ((this.GetAllDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDepenseCompleted(this, new GetAllDepenseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDepenseAsync() {
            this.GetAllDepenseAsync(null);
        }
        
        public void GetAllDepenseAsync(object userState) {
            if ((this.onBeginGetAllDepenseDelegate == null)) {
                this.onBeginGetAllDepenseDelegate = new BeginOperationDelegate(this.OnBeginGetAllDepense);
            }
            if ((this.onEndGetAllDepenseDelegate == null)) {
                this.onEndGetAllDepenseDelegate = new EndOperationDelegate(this.OnEndGetAllDepense);
            }
            if ((this.onGetAllDepenseCompletedDelegate == null)) {
                this.onGetAllDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDepenseDelegate, null, this.onEndGetAllDepenseDelegate, this.onGetAllDepenseCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Depense> GetAllDepenseByF1(string stringf) {
            return base.Channel.GetAllDepenseByF1(stringf);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDepenseByF1(string stringf, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDepenseByF1(stringf, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Depense> EndGetAllDepenseByF1(System.IAsyncResult result) {
            return base.Channel.EndGetAllDepenseByF1(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDepenseByF1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string stringf = ((string)(inValues[0]));
            return this.BeginGetAllDepenseByF1(stringf, callback, asyncState);
        }
        
        private object[] OnEndGetAllDepenseByF1(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Depense> retVal = this.EndGetAllDepenseByF1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDepenseByF1Completed(object state) {
            if ((this.GetAllDepenseByF1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDepenseByF1Completed(this, new GetAllDepenseByF1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDepenseByF1Async(string stringf) {
            this.GetAllDepenseByF1Async(stringf, null);
        }
        
        public void GetAllDepenseByF1Async(string stringf, object userState) {
            if ((this.onBeginGetAllDepenseByF1Delegate == null)) {
                this.onBeginGetAllDepenseByF1Delegate = new BeginOperationDelegate(this.OnBeginGetAllDepenseByF1);
            }
            if ((this.onEndGetAllDepenseByF1Delegate == null)) {
                this.onEndGetAllDepenseByF1Delegate = new EndOperationDelegate(this.OnEndGetAllDepenseByF1);
            }
            if ((this.onGetAllDepenseByF1CompletedDelegate == null)) {
                this.onGetAllDepenseByF1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDepenseByF1Completed);
            }
            base.InvokeAsync(this.onBeginGetAllDepenseByF1Delegate, new object[] {
                        stringf}, this.onEndGetAllDepenseByF1Delegate, this.onGetAllDepenseByF1CompletedDelegate, userState);
        }
        
        public void InsertDepense(NewOptics.SVC.Depense obj) {
            base.Channel.InsertDepense(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertDepense(NewOptics.SVC.Depense obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDepense(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertDepense(System.IAsyncResult result) {
            base.Channel.EndInsertDepense(result);
        }
        
        private System.IAsyncResult OnBeginInsertDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Depense obj = ((NewOptics.SVC.Depense)(inValues[0]));
            return this.BeginInsertDepense(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertDepense(System.IAsyncResult result) {
            this.EndInsertDepense(result);
            return null;
        }
        
        private void OnInsertDepenseCompleted(object state) {
            if ((this.InsertDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDepenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDepenseAsync(NewOptics.SVC.Depense obj) {
            this.InsertDepenseAsync(obj, null);
        }
        
        public void InsertDepenseAsync(NewOptics.SVC.Depense obj, object userState) {
            if ((this.onBeginInsertDepenseDelegate == null)) {
                this.onBeginInsertDepenseDelegate = new BeginOperationDelegate(this.OnBeginInsertDepense);
            }
            if ((this.onEndInsertDepenseDelegate == null)) {
                this.onEndInsertDepenseDelegate = new EndOperationDelegate(this.OnEndInsertDepense);
            }
            if ((this.onInsertDepenseCompletedDelegate == null)) {
                this.onInsertDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDepenseDelegate, new object[] {
                        obj}, this.onEndInsertDepenseDelegate, this.onInsertDepenseCompletedDelegate, userState);
        }
        
        public void UpdateDepense(NewOptics.SVC.Depense obj) {
            base.Channel.UpdateDepense(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDepense(NewOptics.SVC.Depense obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDepense(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateDepense(System.IAsyncResult result) {
            base.Channel.EndUpdateDepense(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Depense obj = ((NewOptics.SVC.Depense)(inValues[0]));
            return this.BeginUpdateDepense(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateDepense(System.IAsyncResult result) {
            this.EndUpdateDepense(result);
            return null;
        }
        
        private void OnUpdateDepenseCompleted(object state) {
            if ((this.UpdateDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDepenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDepenseAsync(NewOptics.SVC.Depense obj) {
            this.UpdateDepenseAsync(obj, null);
        }
        
        public void UpdateDepenseAsync(NewOptics.SVC.Depense obj, object userState) {
            if ((this.onBeginUpdateDepenseDelegate == null)) {
                this.onBeginUpdateDepenseDelegate = new BeginOperationDelegate(this.OnBeginUpdateDepense);
            }
            if ((this.onEndUpdateDepenseDelegate == null)) {
                this.onEndUpdateDepenseDelegate = new EndOperationDelegate(this.OnEndUpdateDepense);
            }
            if ((this.onUpdateDepenseCompletedDelegate == null)) {
                this.onUpdateDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDepenseDelegate, new object[] {
                        obj}, this.onEndUpdateDepenseDelegate, this.onUpdateDepenseCompletedDelegate, userState);
        }
        
        public void DeleteDepense(NewOptics.SVC.Depense obj) {
            base.Channel.DeleteDepense(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDepense(NewOptics.SVC.Depense obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDepense(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDepense(System.IAsyncResult result) {
            base.Channel.EndDeleteDepense(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Depense obj = ((NewOptics.SVC.Depense)(inValues[0]));
            return this.BeginDeleteDepense(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteDepense(System.IAsyncResult result) {
            this.EndDeleteDepense(result);
            return null;
        }
        
        private void OnDeleteDepenseCompleted(object state) {
            if ((this.DeleteDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDepenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDepenseAsync(NewOptics.SVC.Depense obj) {
            this.DeleteDepenseAsync(obj, null);
        }
        
        public void DeleteDepenseAsync(NewOptics.SVC.Depense obj, object userState) {
            if ((this.onBeginDeleteDepenseDelegate == null)) {
                this.onBeginDeleteDepenseDelegate = new BeginOperationDelegate(this.OnBeginDeleteDepense);
            }
            if ((this.onEndDeleteDepenseDelegate == null)) {
                this.onEndDeleteDepenseDelegate = new EndOperationDelegate(this.OnEndDeleteDepense);
            }
            if ((this.onDeleteDepenseCompletedDelegate == null)) {
                this.onDeleteDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDepenseDelegate, new object[] {
                        obj}, this.onEndDeleteDepenseDelegate, this.onDeleteDepenseCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.am> GetAllam() {
            return base.Channel.GetAllam();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllam(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllam(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.am> EndGetAllam(System.IAsyncResult result) {
            return base.Channel.EndGetAllam(result);
        }
        
        private System.IAsyncResult OnBeginGetAllam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllam(callback, asyncState);
        }
        
        private object[] OnEndGetAllam(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.am> retVal = this.EndGetAllam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllamCompleted(object state) {
            if ((this.GetAllamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllamCompleted(this, new GetAllamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllamAsync() {
            this.GetAllamAsync(null);
        }
        
        public void GetAllamAsync(object userState) {
            if ((this.onBeginGetAllamDelegate == null)) {
                this.onBeginGetAllamDelegate = new BeginOperationDelegate(this.OnBeginGetAllam);
            }
            if ((this.onEndGetAllamDelegate == null)) {
                this.onEndGetAllamDelegate = new EndOperationDelegate(this.OnEndGetAllam);
            }
            if ((this.onGetAllamCompletedDelegate == null)) {
                this.onGetAllamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllamCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllamDelegate, null, this.onEndGetAllamDelegate, this.onGetAllamCompletedDelegate, userState);
        }
        
        public void Insertam(NewOptics.SVC.am obj) {
            base.Channel.Insertam(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertam(NewOptics.SVC.am obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertam(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertam(System.IAsyncResult result) {
            base.Channel.EndInsertam(result);
        }
        
        private System.IAsyncResult OnBeginInsertam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.am obj = ((NewOptics.SVC.am)(inValues[0]));
            return this.BeginInsertam(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertam(System.IAsyncResult result) {
            this.EndInsertam(result);
            return null;
        }
        
        private void OnInsertamCompleted(object state) {
            if ((this.InsertamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertamAsync(NewOptics.SVC.am obj) {
            this.InsertamAsync(obj, null);
        }
        
        public void InsertamAsync(NewOptics.SVC.am obj, object userState) {
            if ((this.onBeginInsertamDelegate == null)) {
                this.onBeginInsertamDelegate = new BeginOperationDelegate(this.OnBeginInsertam);
            }
            if ((this.onEndInsertamDelegate == null)) {
                this.onEndInsertamDelegate = new EndOperationDelegate(this.OnEndInsertam);
            }
            if ((this.onInsertamCompletedDelegate == null)) {
                this.onInsertamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertamCompleted);
            }
            base.InvokeAsync(this.onBeginInsertamDelegate, new object[] {
                        obj}, this.onEndInsertamDelegate, this.onInsertamCompletedDelegate, userState);
        }
        
        public void Updateam(NewOptics.SVC.am obj) {
            base.Channel.Updateam(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateam(NewOptics.SVC.am obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateam(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateam(System.IAsyncResult result) {
            base.Channel.EndUpdateam(result);
        }
        
        private System.IAsyncResult OnBeginUpdateam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.am obj = ((NewOptics.SVC.am)(inValues[0]));
            return this.BeginUpdateam(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateam(System.IAsyncResult result) {
            this.EndUpdateam(result);
            return null;
        }
        
        private void OnUpdateamCompleted(object state) {
            if ((this.UpdateamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateamAsync(NewOptics.SVC.am obj) {
            this.UpdateamAsync(obj, null);
        }
        
        public void UpdateamAsync(NewOptics.SVC.am obj, object userState) {
            if ((this.onBeginUpdateamDelegate == null)) {
                this.onBeginUpdateamDelegate = new BeginOperationDelegate(this.OnBeginUpdateam);
            }
            if ((this.onEndUpdateamDelegate == null)) {
                this.onEndUpdateamDelegate = new EndOperationDelegate(this.OnEndUpdateam);
            }
            if ((this.onUpdateamCompletedDelegate == null)) {
                this.onUpdateamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateamCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateamDelegate, new object[] {
                        obj}, this.onEndUpdateamDelegate, this.onUpdateamCompletedDelegate, userState);
        }
        
        public void Deleteam(NewOptics.SVC.am obj) {
            base.Channel.Deleteam(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteam(NewOptics.SVC.am obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteam(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteam(System.IAsyncResult result) {
            base.Channel.EndDeleteam(result);
        }
        
        private System.IAsyncResult OnBeginDeleteam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.am obj = ((NewOptics.SVC.am)(inValues[0]));
            return this.BeginDeleteam(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteam(System.IAsyncResult result) {
            this.EndDeleteam(result);
            return null;
        }
        
        private void OnDeleteamCompleted(object state) {
            if ((this.DeleteamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteamAsync(NewOptics.SVC.am obj) {
            this.DeleteamAsync(obj, null);
        }
        
        public void DeleteamAsync(NewOptics.SVC.am obj, object userState) {
            if ((this.onBeginDeleteamDelegate == null)) {
                this.onBeginDeleteamDelegate = new BeginOperationDelegate(this.OnBeginDeleteam);
            }
            if ((this.onEndDeleteamDelegate == null)) {
                this.onEndDeleteamDelegate = new EndOperationDelegate(this.OnEndDeleteam);
            }
            if ((this.onDeleteamCompletedDelegate == null)) {
                this.onDeleteamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteamCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteamDelegate, new object[] {
                        obj}, this.onEndDeleteamDelegate, this.onDeleteamCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.ClientV> GetAllClientV() {
            return base.Channel.GetAllClientV();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllClientV(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllClientV(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.ClientV> EndGetAllClientV(System.IAsyncResult result) {
            return base.Channel.EndGetAllClientV(result);
        }
        
        private System.IAsyncResult OnBeginGetAllClientV(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllClientV(callback, asyncState);
        }
        
        private object[] OnEndGetAllClientV(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.ClientV> retVal = this.EndGetAllClientV(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllClientVCompleted(object state) {
            if ((this.GetAllClientVCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllClientVCompleted(this, new GetAllClientVCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllClientVAsync() {
            this.GetAllClientVAsync(null);
        }
        
        public void GetAllClientVAsync(object userState) {
            if ((this.onBeginGetAllClientVDelegate == null)) {
                this.onBeginGetAllClientVDelegate = new BeginOperationDelegate(this.OnBeginGetAllClientV);
            }
            if ((this.onEndGetAllClientVDelegate == null)) {
                this.onEndGetAllClientVDelegate = new EndOperationDelegate(this.OnEndGetAllClientV);
            }
            if ((this.onGetAllClientVCompletedDelegate == null)) {
                this.onGetAllClientVCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClientVCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllClientVDelegate, null, this.onEndGetAllClientVDelegate, this.onGetAllClientVCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.ClientV> GetAllClientVPAR(string PAT) {
            return base.Channel.GetAllClientVPAR(PAT);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllClientVPAR(string PAT, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllClientVPAR(PAT, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.ClientV> EndGetAllClientVPAR(System.IAsyncResult result) {
            return base.Channel.EndGetAllClientVPAR(result);
        }
        
        private System.IAsyncResult OnBeginGetAllClientVPAR(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string PAT = ((string)(inValues[0]));
            return this.BeginGetAllClientVPAR(PAT, callback, asyncState);
        }
        
        private object[] OnEndGetAllClientVPAR(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.ClientV> retVal = this.EndGetAllClientVPAR(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllClientVPARCompleted(object state) {
            if ((this.GetAllClientVPARCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllClientVPARCompleted(this, new GetAllClientVPARCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllClientVPARAsync(string PAT) {
            this.GetAllClientVPARAsync(PAT, null);
        }
        
        public void GetAllClientVPARAsync(string PAT, object userState) {
            if ((this.onBeginGetAllClientVPARDelegate == null)) {
                this.onBeginGetAllClientVPARDelegate = new BeginOperationDelegate(this.OnBeginGetAllClientVPAR);
            }
            if ((this.onEndGetAllClientVPARDelegate == null)) {
                this.onEndGetAllClientVPARDelegate = new EndOperationDelegate(this.OnEndGetAllClientVPAR);
            }
            if ((this.onGetAllClientVPARCompletedDelegate == null)) {
                this.onGetAllClientVPARCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClientVPARCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllClientVPARDelegate, new object[] {
                        PAT}, this.onEndGetAllClientVPARDelegate, this.onGetAllClientVPARCompletedDelegate, userState);
        }
        
        public bool GetAllClientVEXISTE(string Nom) {
            return base.Channel.GetAllClientVEXISTE(Nom);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllClientVEXISTE(string Nom, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllClientVEXISTE(Nom, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetAllClientVEXISTE(System.IAsyncResult result) {
            return base.Channel.EndGetAllClientVEXISTE(result);
        }
        
        private System.IAsyncResult OnBeginGetAllClientVEXISTE(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Nom = ((string)(inValues[0]));
            return this.BeginGetAllClientVEXISTE(Nom, callback, asyncState);
        }
        
        private object[] OnEndGetAllClientVEXISTE(System.IAsyncResult result) {
            bool retVal = this.EndGetAllClientVEXISTE(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllClientVEXISTECompleted(object state) {
            if ((this.GetAllClientVEXISTECompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllClientVEXISTECompleted(this, new GetAllClientVEXISTECompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllClientVEXISTEAsync(string Nom) {
            this.GetAllClientVEXISTEAsync(Nom, null);
        }
        
        public void GetAllClientVEXISTEAsync(string Nom, object userState) {
            if ((this.onBeginGetAllClientVEXISTEDelegate == null)) {
                this.onBeginGetAllClientVEXISTEDelegate = new BeginOperationDelegate(this.OnBeginGetAllClientVEXISTE);
            }
            if ((this.onEndGetAllClientVEXISTEDelegate == null)) {
                this.onEndGetAllClientVEXISTEDelegate = new EndOperationDelegate(this.OnEndGetAllClientVEXISTE);
            }
            if ((this.onGetAllClientVEXISTECompletedDelegate == null)) {
                this.onGetAllClientVEXISTECompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClientVEXISTECompleted);
            }
            base.InvokeAsync(this.onBeginGetAllClientVEXISTEDelegate, new object[] {
                        Nom}, this.onEndGetAllClientVEXISTEDelegate, this.onGetAllClientVEXISTECompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.ClientV> GetAllClientVBYID(int idpatient) {
            return base.Channel.GetAllClientVBYID(idpatient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllClientVBYID(int idpatient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllClientVBYID(idpatient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.ClientV> EndGetAllClientVBYID(System.IAsyncResult result) {
            return base.Channel.EndGetAllClientVBYID(result);
        }
        
        private System.IAsyncResult OnBeginGetAllClientVBYID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idpatient = ((int)(inValues[0]));
            return this.BeginGetAllClientVBYID(idpatient, callback, asyncState);
        }
        
        private object[] OnEndGetAllClientVBYID(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.ClientV> retVal = this.EndGetAllClientVBYID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllClientVBYIDCompleted(object state) {
            if ((this.GetAllClientVBYIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllClientVBYIDCompleted(this, new GetAllClientVBYIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllClientVBYIDAsync(int idpatient) {
            this.GetAllClientVBYIDAsync(idpatient, null);
        }
        
        public void GetAllClientVBYIDAsync(int idpatient, object userState) {
            if ((this.onBeginGetAllClientVBYIDDelegate == null)) {
                this.onBeginGetAllClientVBYIDDelegate = new BeginOperationDelegate(this.OnBeginGetAllClientVBYID);
            }
            if ((this.onEndGetAllClientVBYIDDelegate == null)) {
                this.onEndGetAllClientVBYIDDelegate = new EndOperationDelegate(this.OnEndGetAllClientVBYID);
            }
            if ((this.onGetAllClientVBYIDCompletedDelegate == null)) {
                this.onGetAllClientVBYIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClientVBYIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllClientVBYIDDelegate, new object[] {
                        idpatient}, this.onEndGetAllClientVBYIDDelegate, this.onGetAllClientVBYIDCompletedDelegate, userState);
        }
        
        public void InsertClientV(NewOptics.SVC.ClientV obj) {
            base.Channel.InsertClientV(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertClientV(NewOptics.SVC.ClientV obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertClientV(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertClientV(System.IAsyncResult result) {
            base.Channel.EndInsertClientV(result);
        }
        
        private System.IAsyncResult OnBeginInsertClientV(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.ClientV obj = ((NewOptics.SVC.ClientV)(inValues[0]));
            return this.BeginInsertClientV(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertClientV(System.IAsyncResult result) {
            this.EndInsertClientV(result);
            return null;
        }
        
        private void OnInsertClientVCompleted(object state) {
            if ((this.InsertClientVCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertClientVCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertClientVAsync(NewOptics.SVC.ClientV obj) {
            this.InsertClientVAsync(obj, null);
        }
        
        public void InsertClientVAsync(NewOptics.SVC.ClientV obj, object userState) {
            if ((this.onBeginInsertClientVDelegate == null)) {
                this.onBeginInsertClientVDelegate = new BeginOperationDelegate(this.OnBeginInsertClientV);
            }
            if ((this.onEndInsertClientVDelegate == null)) {
                this.onEndInsertClientVDelegate = new EndOperationDelegate(this.OnEndInsertClientV);
            }
            if ((this.onInsertClientVCompletedDelegate == null)) {
                this.onInsertClientVCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertClientVCompleted);
            }
            base.InvokeAsync(this.onBeginInsertClientVDelegate, new object[] {
                        obj}, this.onEndInsertClientVDelegate, this.onInsertClientVCompletedDelegate, userState);
        }
        
        public void UpdateClientV(NewOptics.SVC.ClientV obj) {
            base.Channel.UpdateClientV(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateClientV(NewOptics.SVC.ClientV obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateClientV(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateClientV(System.IAsyncResult result) {
            base.Channel.EndUpdateClientV(result);
        }
        
        private System.IAsyncResult OnBeginUpdateClientV(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.ClientV obj = ((NewOptics.SVC.ClientV)(inValues[0]));
            return this.BeginUpdateClientV(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateClientV(System.IAsyncResult result) {
            this.EndUpdateClientV(result);
            return null;
        }
        
        private void OnUpdateClientVCompleted(object state) {
            if ((this.UpdateClientVCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateClientVCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateClientVAsync(NewOptics.SVC.ClientV obj) {
            this.UpdateClientVAsync(obj, null);
        }
        
        public void UpdateClientVAsync(NewOptics.SVC.ClientV obj, object userState) {
            if ((this.onBeginUpdateClientVDelegate == null)) {
                this.onBeginUpdateClientVDelegate = new BeginOperationDelegate(this.OnBeginUpdateClientV);
            }
            if ((this.onEndUpdateClientVDelegate == null)) {
                this.onEndUpdateClientVDelegate = new EndOperationDelegate(this.OnEndUpdateClientV);
            }
            if ((this.onUpdateClientVCompletedDelegate == null)) {
                this.onUpdateClientVCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateClientVCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateClientVDelegate, new object[] {
                        obj}, this.onEndUpdateClientVDelegate, this.onUpdateClientVCompletedDelegate, userState);
        }
        
        public void DeleteClientV(NewOptics.SVC.ClientV obj) {
            base.Channel.DeleteClientV(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteClientV(NewOptics.SVC.ClientV obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteClientV(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteClientV(System.IAsyncResult result) {
            base.Channel.EndDeleteClientV(result);
        }
        
        private System.IAsyncResult OnBeginDeleteClientV(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.ClientV obj = ((NewOptics.SVC.ClientV)(inValues[0]));
            return this.BeginDeleteClientV(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteClientV(System.IAsyncResult result) {
            this.EndDeleteClientV(result);
            return null;
        }
        
        private void OnDeleteClientVCompleted(object state) {
            if ((this.DeleteClientVCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteClientVCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteClientVAsync(NewOptics.SVC.ClientV obj) {
            this.DeleteClientVAsync(obj, null);
        }
        
        public void DeleteClientVAsync(NewOptics.SVC.ClientV obj, object userState) {
            if ((this.onBeginDeleteClientVDelegate == null)) {
                this.onBeginDeleteClientVDelegate = new BeginOperationDelegate(this.OnBeginDeleteClientV);
            }
            if ((this.onEndDeleteClientVDelegate == null)) {
                this.onEndDeleteClientVDelegate = new EndOperationDelegate(this.OnEndDeleteClientV);
            }
            if ((this.onDeleteClientVCompletedDelegate == null)) {
                this.onDeleteClientVCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteClientVCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteClientVDelegate, new object[] {
                        obj}, this.onEndDeleteClientVDelegate, this.onDeleteClientVCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Marque> GetAllMarque() {
            return base.Channel.GetAllMarque();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMarque(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMarque(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Marque> EndGetAllMarque(System.IAsyncResult result) {
            return base.Channel.EndGetAllMarque(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMarque(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllMarque(callback, asyncState);
        }
        
        private object[] OnEndGetAllMarque(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Marque> retVal = this.EndGetAllMarque(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMarqueCompleted(object state) {
            if ((this.GetAllMarqueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMarqueCompleted(this, new GetAllMarqueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMarqueAsync() {
            this.GetAllMarqueAsync(null);
        }
        
        public void GetAllMarqueAsync(object userState) {
            if ((this.onBeginGetAllMarqueDelegate == null)) {
                this.onBeginGetAllMarqueDelegate = new BeginOperationDelegate(this.OnBeginGetAllMarque);
            }
            if ((this.onEndGetAllMarqueDelegate == null)) {
                this.onEndGetAllMarqueDelegate = new EndOperationDelegate(this.OnEndGetAllMarque);
            }
            if ((this.onGetAllMarqueCompletedDelegate == null)) {
                this.onGetAllMarqueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMarqueCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMarqueDelegate, null, this.onEndGetAllMarqueDelegate, this.onGetAllMarqueCompletedDelegate, userState);
        }
        
        public void InsertMarque(NewOptics.SVC.Marque obj) {
            base.Channel.InsertMarque(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertMarque(NewOptics.SVC.Marque obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertMarque(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertMarque(System.IAsyncResult result) {
            base.Channel.EndInsertMarque(result);
        }
        
        private System.IAsyncResult OnBeginInsertMarque(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Marque obj = ((NewOptics.SVC.Marque)(inValues[0]));
            return this.BeginInsertMarque(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertMarque(System.IAsyncResult result) {
            this.EndInsertMarque(result);
            return null;
        }
        
        private void OnInsertMarqueCompleted(object state) {
            if ((this.InsertMarqueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertMarqueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertMarqueAsync(NewOptics.SVC.Marque obj) {
            this.InsertMarqueAsync(obj, null);
        }
        
        public void InsertMarqueAsync(NewOptics.SVC.Marque obj, object userState) {
            if ((this.onBeginInsertMarqueDelegate == null)) {
                this.onBeginInsertMarqueDelegate = new BeginOperationDelegate(this.OnBeginInsertMarque);
            }
            if ((this.onEndInsertMarqueDelegate == null)) {
                this.onEndInsertMarqueDelegate = new EndOperationDelegate(this.OnEndInsertMarque);
            }
            if ((this.onInsertMarqueCompletedDelegate == null)) {
                this.onInsertMarqueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertMarqueCompleted);
            }
            base.InvokeAsync(this.onBeginInsertMarqueDelegate, new object[] {
                        obj}, this.onEndInsertMarqueDelegate, this.onInsertMarqueCompletedDelegate, userState);
        }
        
        public void UpdateMarque(NewOptics.SVC.Marque obj) {
            base.Channel.UpdateMarque(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateMarque(NewOptics.SVC.Marque obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMarque(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateMarque(System.IAsyncResult result) {
            base.Channel.EndUpdateMarque(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMarque(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Marque obj = ((NewOptics.SVC.Marque)(inValues[0]));
            return this.BeginUpdateMarque(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateMarque(System.IAsyncResult result) {
            this.EndUpdateMarque(result);
            return null;
        }
        
        private void OnUpdateMarqueCompleted(object state) {
            if ((this.UpdateMarqueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMarqueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMarqueAsync(NewOptics.SVC.Marque obj) {
            this.UpdateMarqueAsync(obj, null);
        }
        
        public void UpdateMarqueAsync(NewOptics.SVC.Marque obj, object userState) {
            if ((this.onBeginUpdateMarqueDelegate == null)) {
                this.onBeginUpdateMarqueDelegate = new BeginOperationDelegate(this.OnBeginUpdateMarque);
            }
            if ((this.onEndUpdateMarqueDelegate == null)) {
                this.onEndUpdateMarqueDelegate = new EndOperationDelegate(this.OnEndUpdateMarque);
            }
            if ((this.onUpdateMarqueCompletedDelegate == null)) {
                this.onUpdateMarqueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMarqueCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMarqueDelegate, new object[] {
                        obj}, this.onEndUpdateMarqueDelegate, this.onUpdateMarqueCompletedDelegate, userState);
        }
        
        public void DeletMarque(NewOptics.SVC.Marque obj) {
            base.Channel.DeletMarque(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletMarque(NewOptics.SVC.Marque obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletMarque(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletMarque(System.IAsyncResult result) {
            base.Channel.EndDeletMarque(result);
        }
        
        private System.IAsyncResult OnBeginDeletMarque(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Marque obj = ((NewOptics.SVC.Marque)(inValues[0]));
            return this.BeginDeletMarque(obj, callback, asyncState);
        }
        
        private object[] OnEndDeletMarque(System.IAsyncResult result) {
            this.EndDeletMarque(result);
            return null;
        }
        
        private void OnDeletMarqueCompleted(object state) {
            if ((this.DeletMarqueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletMarqueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletMarqueAsync(NewOptics.SVC.Marque obj) {
            this.DeletMarqueAsync(obj, null);
        }
        
        public void DeletMarqueAsync(NewOptics.SVC.Marque obj, object userState) {
            if ((this.onBeginDeletMarqueDelegate == null)) {
                this.onBeginDeletMarqueDelegate = new BeginOperationDelegate(this.OnBeginDeletMarque);
            }
            if ((this.onEndDeletMarqueDelegate == null)) {
                this.onEndDeletMarqueDelegate = new EndOperationDelegate(this.OnEndDeletMarque);
            }
            if ((this.onDeletMarqueCompletedDelegate == null)) {
                this.onDeletMarqueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletMarqueCompleted);
            }
            base.InvokeAsync(this.onBeginDeletMarqueDelegate, new object[] {
                        obj}, this.onEndDeletMarqueDelegate, this.onDeletMarqueCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Resource> GetAllResource() {
            return base.Channel.GetAllResource();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllResource(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllResource(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Resource> EndGetAllResource(System.IAsyncResult result) {
            return base.Channel.EndGetAllResource(result);
        }
        
        private System.IAsyncResult OnBeginGetAllResource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllResource(callback, asyncState);
        }
        
        private object[] OnEndGetAllResource(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Resource> retVal = this.EndGetAllResource(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllResourceCompleted(object state) {
            if ((this.GetAllResourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllResourceCompleted(this, new GetAllResourceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllResourceAsync() {
            this.GetAllResourceAsync(null);
        }
        
        public void GetAllResourceAsync(object userState) {
            if ((this.onBeginGetAllResourceDelegate == null)) {
                this.onBeginGetAllResourceDelegate = new BeginOperationDelegate(this.OnBeginGetAllResource);
            }
            if ((this.onEndGetAllResourceDelegate == null)) {
                this.onEndGetAllResourceDelegate = new EndOperationDelegate(this.OnEndGetAllResource);
            }
            if ((this.onGetAllResourceCompletedDelegate == null)) {
                this.onGetAllResourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllResourceCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllResourceDelegate, null, this.onEndGetAllResourceDelegate, this.onGetAllResourceCompletedDelegate, userState);
        }
        
        public void InsertResource(NewOptics.SVC.Resource obj) {
            base.Channel.InsertResource(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertResource(NewOptics.SVC.Resource obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertResource(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertResource(System.IAsyncResult result) {
            base.Channel.EndInsertResource(result);
        }
        
        private System.IAsyncResult OnBeginInsertResource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Resource obj = ((NewOptics.SVC.Resource)(inValues[0]));
            return this.BeginInsertResource(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertResource(System.IAsyncResult result) {
            this.EndInsertResource(result);
            return null;
        }
        
        private void OnInsertResourceCompleted(object state) {
            if ((this.InsertResourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertResourceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertResourceAsync(NewOptics.SVC.Resource obj) {
            this.InsertResourceAsync(obj, null);
        }
        
        public void InsertResourceAsync(NewOptics.SVC.Resource obj, object userState) {
            if ((this.onBeginInsertResourceDelegate == null)) {
                this.onBeginInsertResourceDelegate = new BeginOperationDelegate(this.OnBeginInsertResource);
            }
            if ((this.onEndInsertResourceDelegate == null)) {
                this.onEndInsertResourceDelegate = new EndOperationDelegate(this.OnEndInsertResource);
            }
            if ((this.onInsertResourceCompletedDelegate == null)) {
                this.onInsertResourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertResourceCompleted);
            }
            base.InvokeAsync(this.onBeginInsertResourceDelegate, new object[] {
                        obj}, this.onEndInsertResourceDelegate, this.onInsertResourceCompletedDelegate, userState);
        }
        
        public void UpdateResource(NewOptics.SVC.Resource obj) {
            base.Channel.UpdateResource(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateResource(NewOptics.SVC.Resource obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateResource(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateResource(System.IAsyncResult result) {
            base.Channel.EndUpdateResource(result);
        }
        
        private System.IAsyncResult OnBeginUpdateResource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Resource obj = ((NewOptics.SVC.Resource)(inValues[0]));
            return this.BeginUpdateResource(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateResource(System.IAsyncResult result) {
            this.EndUpdateResource(result);
            return null;
        }
        
        private void OnUpdateResourceCompleted(object state) {
            if ((this.UpdateResourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateResourceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateResourceAsync(NewOptics.SVC.Resource obj) {
            this.UpdateResourceAsync(obj, null);
        }
        
        public void UpdateResourceAsync(NewOptics.SVC.Resource obj, object userState) {
            if ((this.onBeginUpdateResourceDelegate == null)) {
                this.onBeginUpdateResourceDelegate = new BeginOperationDelegate(this.OnBeginUpdateResource);
            }
            if ((this.onEndUpdateResourceDelegate == null)) {
                this.onEndUpdateResourceDelegate = new EndOperationDelegate(this.OnEndUpdateResource);
            }
            if ((this.onUpdateResourceCompletedDelegate == null)) {
                this.onUpdateResourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateResourceCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateResourceDelegate, new object[] {
                        obj}, this.onEndUpdateResourceDelegate, this.onUpdateResourceCompletedDelegate, userState);
        }
        
        public void DeleteResource(NewOptics.SVC.Resource obj) {
            base.Channel.DeleteResource(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteResource(NewOptics.SVC.Resource obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteResource(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteResource(System.IAsyncResult result) {
            base.Channel.EndDeleteResource(result);
        }
        
        private System.IAsyncResult OnBeginDeleteResource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Resource obj = ((NewOptics.SVC.Resource)(inValues[0]));
            return this.BeginDeleteResource(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteResource(System.IAsyncResult result) {
            this.EndDeleteResource(result);
            return null;
        }
        
        private void OnDeleteResourceCompleted(object state) {
            if ((this.DeleteResourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteResourceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteResourceAsync(NewOptics.SVC.Resource obj) {
            this.DeleteResourceAsync(obj, null);
        }
        
        public void DeleteResourceAsync(NewOptics.SVC.Resource obj, object userState) {
            if ((this.onBeginDeleteResourceDelegate == null)) {
                this.onBeginDeleteResourceDelegate = new BeginOperationDelegate(this.OnBeginDeleteResource);
            }
            if ((this.onEndDeleteResourceDelegate == null)) {
                this.onEndDeleteResourceDelegate = new EndOperationDelegate(this.OnEndDeleteResource);
            }
            if ((this.onDeleteResourceCompletedDelegate == null)) {
                this.onDeleteResourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteResourceCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteResourceDelegate, new object[] {
                        obj}, this.onEndDeleteResourceDelegate, this.onDeleteResourceCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Appointment> GetAllAppointment(System.DateTime d1, System.DateTime d2) {
            return base.Channel.GetAllAppointment(d1, d2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllAppointment(System.DateTime d1, System.DateTime d2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAppointment(d1, d2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Appointment> EndGetAllAppointment(System.IAsyncResult result) {
            return base.Channel.EndGetAllAppointment(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAppointment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime d1 = ((System.DateTime)(inValues[0]));
            System.DateTime d2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllAppointment(d1, d2, callback, asyncState);
        }
        
        private object[] OnEndGetAllAppointment(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Appointment> retVal = this.EndGetAllAppointment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAppointmentCompleted(object state) {
            if ((this.GetAllAppointmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAppointmentCompleted(this, new GetAllAppointmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAppointmentAsync(System.DateTime d1, System.DateTime d2) {
            this.GetAllAppointmentAsync(d1, d2, null);
        }
        
        public void GetAllAppointmentAsync(System.DateTime d1, System.DateTime d2, object userState) {
            if ((this.onBeginGetAllAppointmentDelegate == null)) {
                this.onBeginGetAllAppointmentDelegate = new BeginOperationDelegate(this.OnBeginGetAllAppointment);
            }
            if ((this.onEndGetAllAppointmentDelegate == null)) {
                this.onEndGetAllAppointmentDelegate = new EndOperationDelegate(this.OnEndGetAllAppointment);
            }
            if ((this.onGetAllAppointmentCompletedDelegate == null)) {
                this.onGetAllAppointmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAppointmentCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAppointmentDelegate, new object[] {
                        d1,
                        d2}, this.onEndGetAllAppointmentDelegate, this.onGetAllAppointmentCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Appointment> GetAllAppointmentBycode(string subject, System.DateTime datedebut, System.DateTime datefin) {
            return base.Channel.GetAllAppointmentBycode(subject, datedebut, datefin);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllAppointmentBycode(string subject, System.DateTime datedebut, System.DateTime datefin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAppointmentBycode(subject, datedebut, datefin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Appointment> EndGetAllAppointmentBycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllAppointmentBycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAppointmentBycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string subject = ((string)(inValues[0]));
            System.DateTime datedebut = ((System.DateTime)(inValues[1]));
            System.DateTime datefin = ((System.DateTime)(inValues[2]));
            return this.BeginGetAllAppointmentBycode(subject, datedebut, datefin, callback, asyncState);
        }
        
        private object[] OnEndGetAllAppointmentBycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Appointment> retVal = this.EndGetAllAppointmentBycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAppointmentBycodeCompleted(object state) {
            if ((this.GetAllAppointmentBycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAppointmentBycodeCompleted(this, new GetAllAppointmentBycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAppointmentBycodeAsync(string subject, System.DateTime datedebut, System.DateTime datefin) {
            this.GetAllAppointmentBycodeAsync(subject, datedebut, datefin, null);
        }
        
        public void GetAllAppointmentBycodeAsync(string subject, System.DateTime datedebut, System.DateTime datefin, object userState) {
            if ((this.onBeginGetAllAppointmentBycodeDelegate == null)) {
                this.onBeginGetAllAppointmentBycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllAppointmentBycode);
            }
            if ((this.onEndGetAllAppointmentBycodeDelegate == null)) {
                this.onEndGetAllAppointmentBycodeDelegate = new EndOperationDelegate(this.OnEndGetAllAppointmentBycode);
            }
            if ((this.onGetAllAppointmentBycodeCompletedDelegate == null)) {
                this.onGetAllAppointmentBycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAppointmentBycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAppointmentBycodeDelegate, new object[] {
                        subject,
                        datedebut,
                        datefin}, this.onEndGetAllAppointmentBycodeDelegate, this.onGetAllAppointmentBycodeCompletedDelegate, userState);
        }
        
        public void InsertAppointment(NewOptics.SVC.Appointment obj) {
            base.Channel.InsertAppointment(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertAppointment(NewOptics.SVC.Appointment obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertAppointment(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertAppointment(System.IAsyncResult result) {
            base.Channel.EndInsertAppointment(result);
        }
        
        private System.IAsyncResult OnBeginInsertAppointment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Appointment obj = ((NewOptics.SVC.Appointment)(inValues[0]));
            return this.BeginInsertAppointment(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertAppointment(System.IAsyncResult result) {
            this.EndInsertAppointment(result);
            return null;
        }
        
        private void OnInsertAppointmentCompleted(object state) {
            if ((this.InsertAppointmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertAppointmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertAppointmentAsync(NewOptics.SVC.Appointment obj) {
            this.InsertAppointmentAsync(obj, null);
        }
        
        public void InsertAppointmentAsync(NewOptics.SVC.Appointment obj, object userState) {
            if ((this.onBeginInsertAppointmentDelegate == null)) {
                this.onBeginInsertAppointmentDelegate = new BeginOperationDelegate(this.OnBeginInsertAppointment);
            }
            if ((this.onEndInsertAppointmentDelegate == null)) {
                this.onEndInsertAppointmentDelegate = new EndOperationDelegate(this.OnEndInsertAppointment);
            }
            if ((this.onInsertAppointmentCompletedDelegate == null)) {
                this.onInsertAppointmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertAppointmentCompleted);
            }
            base.InvokeAsync(this.onBeginInsertAppointmentDelegate, new object[] {
                        obj}, this.onEndInsertAppointmentDelegate, this.onInsertAppointmentCompletedDelegate, userState);
        }
        
        public void UpdateAppointment(NewOptics.SVC.Appointment obj) {
            base.Channel.UpdateAppointment(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAppointment(NewOptics.SVC.Appointment obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAppointment(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateAppointment(System.IAsyncResult result) {
            base.Channel.EndUpdateAppointment(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAppointment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Appointment obj = ((NewOptics.SVC.Appointment)(inValues[0]));
            return this.BeginUpdateAppointment(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateAppointment(System.IAsyncResult result) {
            this.EndUpdateAppointment(result);
            return null;
        }
        
        private void OnUpdateAppointmentCompleted(object state) {
            if ((this.UpdateAppointmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAppointmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAppointmentAsync(NewOptics.SVC.Appointment obj) {
            this.UpdateAppointmentAsync(obj, null);
        }
        
        public void UpdateAppointmentAsync(NewOptics.SVC.Appointment obj, object userState) {
            if ((this.onBeginUpdateAppointmentDelegate == null)) {
                this.onBeginUpdateAppointmentDelegate = new BeginOperationDelegate(this.OnBeginUpdateAppointment);
            }
            if ((this.onEndUpdateAppointmentDelegate == null)) {
                this.onEndUpdateAppointmentDelegate = new EndOperationDelegate(this.OnEndUpdateAppointment);
            }
            if ((this.onUpdateAppointmentCompletedDelegate == null)) {
                this.onUpdateAppointmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAppointmentCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAppointmentDelegate, new object[] {
                        obj}, this.onEndUpdateAppointmentDelegate, this.onUpdateAppointmentCompletedDelegate, userState);
        }
        
        public void DeleteAppointment(NewOptics.SVC.Appointment obj) {
            base.Channel.DeleteAppointment(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteAppointment(NewOptics.SVC.Appointment obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAppointment(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteAppointment(System.IAsyncResult result) {
            base.Channel.EndDeleteAppointment(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAppointment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Appointment obj = ((NewOptics.SVC.Appointment)(inValues[0]));
            return this.BeginDeleteAppointment(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteAppointment(System.IAsyncResult result) {
            this.EndDeleteAppointment(result);
            return null;
        }
        
        private void OnDeleteAppointmentCompleted(object state) {
            if ((this.DeleteAppointmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAppointmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAppointmentAsync(NewOptics.SVC.Appointment obj) {
            this.DeleteAppointmentAsync(obj, null);
        }
        
        public void DeleteAppointmentAsync(NewOptics.SVC.Appointment obj, object userState) {
            if ((this.onBeginDeleteAppointmentDelegate == null)) {
                this.onBeginDeleteAppointmentDelegate = new BeginOperationDelegate(this.OnBeginDeleteAppointment);
            }
            if ((this.onEndDeleteAppointmentDelegate == null)) {
                this.onEndDeleteAppointmentDelegate = new EndOperationDelegate(this.OnEndDeleteAppointment);
            }
            if ((this.onDeleteAppointmentCompletedDelegate == null)) {
                this.onDeleteAppointmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAppointmentCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAppointmentDelegate, new object[] {
                        obj}, this.onEndDeleteAppointmentDelegate, this.onDeleteAppointmentCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Statu> GetAllStatu() {
            return base.Channel.GetAllStatu();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllStatu(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllStatu(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Statu> EndGetAllStatu(System.IAsyncResult result) {
            return base.Channel.EndGetAllStatu(result);
        }
        
        private System.IAsyncResult OnBeginGetAllStatu(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllStatu(callback, asyncState);
        }
        
        private object[] OnEndGetAllStatu(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Statu> retVal = this.EndGetAllStatu(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllStatuCompleted(object state) {
            if ((this.GetAllStatuCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllStatuCompleted(this, new GetAllStatuCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllStatuAsync() {
            this.GetAllStatuAsync(null);
        }
        
        public void GetAllStatuAsync(object userState) {
            if ((this.onBeginGetAllStatuDelegate == null)) {
                this.onBeginGetAllStatuDelegate = new BeginOperationDelegate(this.OnBeginGetAllStatu);
            }
            if ((this.onEndGetAllStatuDelegate == null)) {
                this.onEndGetAllStatuDelegate = new EndOperationDelegate(this.OnEndGetAllStatu);
            }
            if ((this.onGetAllStatuCompletedDelegate == null)) {
                this.onGetAllStatuCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllStatuCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllStatuDelegate, null, this.onEndGetAllStatuDelegate, this.onGetAllStatuCompletedDelegate, userState);
        }
        
        public void InsertStatu(NewOptics.SVC.Statu obj) {
            base.Channel.InsertStatu(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertStatu(NewOptics.SVC.Statu obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertStatu(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertStatu(System.IAsyncResult result) {
            base.Channel.EndInsertStatu(result);
        }
        
        private System.IAsyncResult OnBeginInsertStatu(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Statu obj = ((NewOptics.SVC.Statu)(inValues[0]));
            return this.BeginInsertStatu(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertStatu(System.IAsyncResult result) {
            this.EndInsertStatu(result);
            return null;
        }
        
        private void OnInsertStatuCompleted(object state) {
            if ((this.InsertStatuCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertStatuCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertStatuAsync(NewOptics.SVC.Statu obj) {
            this.InsertStatuAsync(obj, null);
        }
        
        public void InsertStatuAsync(NewOptics.SVC.Statu obj, object userState) {
            if ((this.onBeginInsertStatuDelegate == null)) {
                this.onBeginInsertStatuDelegate = new BeginOperationDelegate(this.OnBeginInsertStatu);
            }
            if ((this.onEndInsertStatuDelegate == null)) {
                this.onEndInsertStatuDelegate = new EndOperationDelegate(this.OnEndInsertStatu);
            }
            if ((this.onInsertStatuCompletedDelegate == null)) {
                this.onInsertStatuCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertStatuCompleted);
            }
            base.InvokeAsync(this.onBeginInsertStatuDelegate, new object[] {
                        obj}, this.onEndInsertStatuDelegate, this.onInsertStatuCompletedDelegate, userState);
        }
        
        public void UpdateStatu(NewOptics.SVC.Statu obj) {
            base.Channel.UpdateStatu(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateStatu(NewOptics.SVC.Statu obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateStatu(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateStatu(System.IAsyncResult result) {
            base.Channel.EndUpdateStatu(result);
        }
        
        private System.IAsyncResult OnBeginUpdateStatu(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Statu obj = ((NewOptics.SVC.Statu)(inValues[0]));
            return this.BeginUpdateStatu(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateStatu(System.IAsyncResult result) {
            this.EndUpdateStatu(result);
            return null;
        }
        
        private void OnUpdateStatuCompleted(object state) {
            if ((this.UpdateStatuCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateStatuCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateStatuAsync(NewOptics.SVC.Statu obj) {
            this.UpdateStatuAsync(obj, null);
        }
        
        public void UpdateStatuAsync(NewOptics.SVC.Statu obj, object userState) {
            if ((this.onBeginUpdateStatuDelegate == null)) {
                this.onBeginUpdateStatuDelegate = new BeginOperationDelegate(this.OnBeginUpdateStatu);
            }
            if ((this.onEndUpdateStatuDelegate == null)) {
                this.onEndUpdateStatuDelegate = new EndOperationDelegate(this.OnEndUpdateStatu);
            }
            if ((this.onUpdateStatuCompletedDelegate == null)) {
                this.onUpdateStatuCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateStatuCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateStatuDelegate, new object[] {
                        obj}, this.onEndUpdateStatuDelegate, this.onUpdateStatuCompletedDelegate, userState);
        }
        
        public void DeletStatu(NewOptics.SVC.Statu obj) {
            base.Channel.DeletStatu(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletStatu(NewOptics.SVC.Statu obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletStatu(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletStatu(System.IAsyncResult result) {
            base.Channel.EndDeletStatu(result);
        }
        
        private System.IAsyncResult OnBeginDeletStatu(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Statu obj = ((NewOptics.SVC.Statu)(inValues[0]));
            return this.BeginDeletStatu(obj, callback, asyncState);
        }
        
        private object[] OnEndDeletStatu(System.IAsyncResult result) {
            this.EndDeletStatu(result);
            return null;
        }
        
        private void OnDeletStatuCompleted(object state) {
            if ((this.DeletStatuCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletStatuCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletStatuAsync(NewOptics.SVC.Statu obj) {
            this.DeletStatuAsync(obj, null);
        }
        
        public void DeletStatuAsync(NewOptics.SVC.Statu obj, object userState) {
            if ((this.onBeginDeletStatuDelegate == null)) {
                this.onBeginDeletStatuDelegate = new BeginOperationDelegate(this.OnBeginDeletStatu);
            }
            if ((this.onEndDeletStatuDelegate == null)) {
                this.onEndDeletStatuDelegate = new EndOperationDelegate(this.OnEndDeletStatu);
            }
            if ((this.onDeletStatuCompletedDelegate == null)) {
                this.onDeletStatuCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletStatuCompleted);
            }
            base.InvokeAsync(this.onBeginDeletStatuDelegate, new object[] {
                        obj}, this.onEndDeletStatuDelegate, this.onDeletStatuCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.MotifTable> GetAllMotifTable() {
            return base.Channel.GetAllMotifTable();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMotifTable(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMotifTable(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.MotifTable> EndGetAllMotifTable(System.IAsyncResult result) {
            return base.Channel.EndGetAllMotifTable(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMotifTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllMotifTable(callback, asyncState);
        }
        
        private object[] OnEndGetAllMotifTable(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.MotifTable> retVal = this.EndGetAllMotifTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMotifTableCompleted(object state) {
            if ((this.GetAllMotifTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMotifTableCompleted(this, new GetAllMotifTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMotifTableAsync() {
            this.GetAllMotifTableAsync(null);
        }
        
        public void GetAllMotifTableAsync(object userState) {
            if ((this.onBeginGetAllMotifTableDelegate == null)) {
                this.onBeginGetAllMotifTableDelegate = new BeginOperationDelegate(this.OnBeginGetAllMotifTable);
            }
            if ((this.onEndGetAllMotifTableDelegate == null)) {
                this.onEndGetAllMotifTableDelegate = new EndOperationDelegate(this.OnEndGetAllMotifTable);
            }
            if ((this.onGetAllMotifTableCompletedDelegate == null)) {
                this.onGetAllMotifTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMotifTableCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMotifTableDelegate, null, this.onEndGetAllMotifTableDelegate, this.onGetAllMotifTableCompletedDelegate, userState);
        }
        
        public void InsertMotifTable(NewOptics.SVC.MotifTable obj) {
            base.Channel.InsertMotifTable(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertMotifTable(NewOptics.SVC.MotifTable obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertMotifTable(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertMotifTable(System.IAsyncResult result) {
            base.Channel.EndInsertMotifTable(result);
        }
        
        private System.IAsyncResult OnBeginInsertMotifTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.MotifTable obj = ((NewOptics.SVC.MotifTable)(inValues[0]));
            return this.BeginInsertMotifTable(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertMotifTable(System.IAsyncResult result) {
            this.EndInsertMotifTable(result);
            return null;
        }
        
        private void OnInsertMotifTableCompleted(object state) {
            if ((this.InsertMotifTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertMotifTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertMotifTableAsync(NewOptics.SVC.MotifTable obj) {
            this.InsertMotifTableAsync(obj, null);
        }
        
        public void InsertMotifTableAsync(NewOptics.SVC.MotifTable obj, object userState) {
            if ((this.onBeginInsertMotifTableDelegate == null)) {
                this.onBeginInsertMotifTableDelegate = new BeginOperationDelegate(this.OnBeginInsertMotifTable);
            }
            if ((this.onEndInsertMotifTableDelegate == null)) {
                this.onEndInsertMotifTableDelegate = new EndOperationDelegate(this.OnEndInsertMotifTable);
            }
            if ((this.onInsertMotifTableCompletedDelegate == null)) {
                this.onInsertMotifTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertMotifTableCompleted);
            }
            base.InvokeAsync(this.onBeginInsertMotifTableDelegate, new object[] {
                        obj}, this.onEndInsertMotifTableDelegate, this.onInsertMotifTableCompletedDelegate, userState);
        }
        
        public void UpdateMotifTable(NewOptics.SVC.MotifTable obj) {
            base.Channel.UpdateMotifTable(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateMotifTable(NewOptics.SVC.MotifTable obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMotifTable(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateMotifTable(System.IAsyncResult result) {
            base.Channel.EndUpdateMotifTable(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMotifTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.MotifTable obj = ((NewOptics.SVC.MotifTable)(inValues[0]));
            return this.BeginUpdateMotifTable(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateMotifTable(System.IAsyncResult result) {
            this.EndUpdateMotifTable(result);
            return null;
        }
        
        private void OnUpdateMotifTableCompleted(object state) {
            if ((this.UpdateMotifTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMotifTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMotifTableAsync(NewOptics.SVC.MotifTable obj) {
            this.UpdateMotifTableAsync(obj, null);
        }
        
        public void UpdateMotifTableAsync(NewOptics.SVC.MotifTable obj, object userState) {
            if ((this.onBeginUpdateMotifTableDelegate == null)) {
                this.onBeginUpdateMotifTableDelegate = new BeginOperationDelegate(this.OnBeginUpdateMotifTable);
            }
            if ((this.onEndUpdateMotifTableDelegate == null)) {
                this.onEndUpdateMotifTableDelegate = new EndOperationDelegate(this.OnEndUpdateMotifTable);
            }
            if ((this.onUpdateMotifTableCompletedDelegate == null)) {
                this.onUpdateMotifTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMotifTableCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMotifTableDelegate, new object[] {
                        obj}, this.onEndUpdateMotifTableDelegate, this.onUpdateMotifTableCompletedDelegate, userState);
        }
        
        public void DeletMotifTable(NewOptics.SVC.MotifTable obj) {
            base.Channel.DeletMotifTable(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletMotifTable(NewOptics.SVC.MotifTable obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletMotifTable(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletMotifTable(System.IAsyncResult result) {
            base.Channel.EndDeletMotifTable(result);
        }
        
        private System.IAsyncResult OnBeginDeletMotifTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.MotifTable obj = ((NewOptics.SVC.MotifTable)(inValues[0]));
            return this.BeginDeletMotifTable(obj, callback, asyncState);
        }
        
        private object[] OnEndDeletMotifTable(System.IAsyncResult result) {
            this.EndDeletMotifTable(result);
            return null;
        }
        
        private void OnDeletMotifTableCompleted(object state) {
            if ((this.DeletMotifTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletMotifTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletMotifTableAsync(NewOptics.SVC.MotifTable obj) {
            this.DeletMotifTableAsync(obj, null);
        }
        
        public void DeletMotifTableAsync(NewOptics.SVC.MotifTable obj, object userState) {
            if ((this.onBeginDeletMotifTableDelegate == null)) {
                this.onBeginDeletMotifTableDelegate = new BeginOperationDelegate(this.OnBeginDeletMotifTable);
            }
            if ((this.onEndDeletMotifTableDelegate == null)) {
                this.onEndDeletMotifTableDelegate = new EndOperationDelegate(this.OnEndDeletMotifTable);
            }
            if ((this.onDeletMotifTableCompletedDelegate == null)) {
                this.onDeletMotifTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletMotifTableCompleted);
            }
            base.InvokeAsync(this.onBeginDeletMotifTableDelegate, new object[] {
                        obj}, this.onEndDeletMotifTableDelegate, this.onDeletMotifTableCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.CatSupp> GetAllCatSupp() {
            return base.Channel.GetAllCatSupp();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllCatSupp(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCatSupp(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.CatSupp> EndGetAllCatSupp(System.IAsyncResult result) {
            return base.Channel.EndGetAllCatSupp(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCatSupp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllCatSupp(callback, asyncState);
        }
        
        private object[] OnEndGetAllCatSupp(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.CatSupp> retVal = this.EndGetAllCatSupp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCatSuppCompleted(object state) {
            if ((this.GetAllCatSuppCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCatSuppCompleted(this, new GetAllCatSuppCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCatSuppAsync() {
            this.GetAllCatSuppAsync(null);
        }
        
        public void GetAllCatSuppAsync(object userState) {
            if ((this.onBeginGetAllCatSuppDelegate == null)) {
                this.onBeginGetAllCatSuppDelegate = new BeginOperationDelegate(this.OnBeginGetAllCatSupp);
            }
            if ((this.onEndGetAllCatSuppDelegate == null)) {
                this.onEndGetAllCatSuppDelegate = new EndOperationDelegate(this.OnEndGetAllCatSupp);
            }
            if ((this.onGetAllCatSuppCompletedDelegate == null)) {
                this.onGetAllCatSuppCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCatSuppCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCatSuppDelegate, null, this.onEndGetAllCatSuppDelegate, this.onGetAllCatSuppCompletedDelegate, userState);
        }
        
        public void InsertCatSupp(NewOptics.SVC.CatSupp obj) {
            base.Channel.InsertCatSupp(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertCatSupp(NewOptics.SVC.CatSupp obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertCatSupp(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertCatSupp(System.IAsyncResult result) {
            base.Channel.EndInsertCatSupp(result);
        }
        
        private System.IAsyncResult OnBeginInsertCatSupp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.CatSupp obj = ((NewOptics.SVC.CatSupp)(inValues[0]));
            return this.BeginInsertCatSupp(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertCatSupp(System.IAsyncResult result) {
            this.EndInsertCatSupp(result);
            return null;
        }
        
        private void OnInsertCatSuppCompleted(object state) {
            if ((this.InsertCatSuppCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertCatSuppCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertCatSuppAsync(NewOptics.SVC.CatSupp obj) {
            this.InsertCatSuppAsync(obj, null);
        }
        
        public void InsertCatSuppAsync(NewOptics.SVC.CatSupp obj, object userState) {
            if ((this.onBeginInsertCatSuppDelegate == null)) {
                this.onBeginInsertCatSuppDelegate = new BeginOperationDelegate(this.OnBeginInsertCatSupp);
            }
            if ((this.onEndInsertCatSuppDelegate == null)) {
                this.onEndInsertCatSuppDelegate = new EndOperationDelegate(this.OnEndInsertCatSupp);
            }
            if ((this.onInsertCatSuppCompletedDelegate == null)) {
                this.onInsertCatSuppCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertCatSuppCompleted);
            }
            base.InvokeAsync(this.onBeginInsertCatSuppDelegate, new object[] {
                        obj}, this.onEndInsertCatSuppDelegate, this.onInsertCatSuppCompletedDelegate, userState);
        }
        
        public void UpdateCatSupp(NewOptics.SVC.CatSupp obj) {
            base.Channel.UpdateCatSupp(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateCatSupp(NewOptics.SVC.CatSupp obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateCatSupp(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateCatSupp(System.IAsyncResult result) {
            base.Channel.EndUpdateCatSupp(result);
        }
        
        private System.IAsyncResult OnBeginUpdateCatSupp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.CatSupp obj = ((NewOptics.SVC.CatSupp)(inValues[0]));
            return this.BeginUpdateCatSupp(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateCatSupp(System.IAsyncResult result) {
            this.EndUpdateCatSupp(result);
            return null;
        }
        
        private void OnUpdateCatSuppCompleted(object state) {
            if ((this.UpdateCatSuppCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCatSuppCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateCatSuppAsync(NewOptics.SVC.CatSupp obj) {
            this.UpdateCatSuppAsync(obj, null);
        }
        
        public void UpdateCatSuppAsync(NewOptics.SVC.CatSupp obj, object userState) {
            if ((this.onBeginUpdateCatSuppDelegate == null)) {
                this.onBeginUpdateCatSuppDelegate = new BeginOperationDelegate(this.OnBeginUpdateCatSupp);
            }
            if ((this.onEndUpdateCatSuppDelegate == null)) {
                this.onEndUpdateCatSuppDelegate = new EndOperationDelegate(this.OnEndUpdateCatSupp);
            }
            if ((this.onUpdateCatSuppCompletedDelegate == null)) {
                this.onUpdateCatSuppCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCatSuppCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateCatSuppDelegate, new object[] {
                        obj}, this.onEndUpdateCatSuppDelegate, this.onUpdateCatSuppCompletedDelegate, userState);
        }
        
        public void DeleteCatSupp(NewOptics.SVC.CatSupp obj) {
            base.Channel.DeleteCatSupp(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteCatSupp(NewOptics.SVC.CatSupp obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteCatSupp(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteCatSupp(System.IAsyncResult result) {
            base.Channel.EndDeleteCatSupp(result);
        }
        
        private System.IAsyncResult OnBeginDeleteCatSupp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.CatSupp obj = ((NewOptics.SVC.CatSupp)(inValues[0]));
            return this.BeginDeleteCatSupp(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteCatSupp(System.IAsyncResult result) {
            this.EndDeleteCatSupp(result);
            return null;
        }
        
        private void OnDeleteCatSuppCompleted(object state) {
            if ((this.DeleteCatSuppCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCatSuppCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCatSuppAsync(NewOptics.SVC.CatSupp obj) {
            this.DeleteCatSuppAsync(obj, null);
        }
        
        public void DeleteCatSuppAsync(NewOptics.SVC.CatSupp obj, object userState) {
            if ((this.onBeginDeleteCatSuppDelegate == null)) {
                this.onBeginDeleteCatSuppDelegate = new BeginOperationDelegate(this.OnBeginDeleteCatSupp);
            }
            if ((this.onEndDeleteCatSuppDelegate == null)) {
                this.onEndDeleteCatSuppDelegate = new EndOperationDelegate(this.OnEndDeleteCatSupp);
            }
            if ((this.onDeleteCatSuppCompletedDelegate == null)) {
                this.onDeleteCatSuppCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCatSuppCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCatSuppDelegate, new object[] {
                        obj}, this.onEndDeleteCatSuppDelegate, this.onDeleteCatSuppCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.FamilleProduit> GetAllFamilleProduit() {
            return base.Channel.GetAllFamilleProduit();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllFamilleProduit(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFamilleProduit(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.FamilleProduit> EndGetAllFamilleProduit(System.IAsyncResult result) {
            return base.Channel.EndGetAllFamilleProduit(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFamilleProduit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllFamilleProduit(callback, asyncState);
        }
        
        private object[] OnEndGetAllFamilleProduit(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.FamilleProduit> retVal = this.EndGetAllFamilleProduit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFamilleProduitCompleted(object state) {
            if ((this.GetAllFamilleProduitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFamilleProduitCompleted(this, new GetAllFamilleProduitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFamilleProduitAsync() {
            this.GetAllFamilleProduitAsync(null);
        }
        
        public void GetAllFamilleProduitAsync(object userState) {
            if ((this.onBeginGetAllFamilleProduitDelegate == null)) {
                this.onBeginGetAllFamilleProduitDelegate = new BeginOperationDelegate(this.OnBeginGetAllFamilleProduit);
            }
            if ((this.onEndGetAllFamilleProduitDelegate == null)) {
                this.onEndGetAllFamilleProduitDelegate = new EndOperationDelegate(this.OnEndGetAllFamilleProduit);
            }
            if ((this.onGetAllFamilleProduitCompletedDelegate == null)) {
                this.onGetAllFamilleProduitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFamilleProduitCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFamilleProduitDelegate, null, this.onEndGetAllFamilleProduitDelegate, this.onGetAllFamilleProduitCompletedDelegate, userState);
        }
        
        public void InsertFamilleProduit(NewOptics.SVC.FamilleProduit obj) {
            base.Channel.InsertFamilleProduit(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertFamilleProduit(NewOptics.SVC.FamilleProduit obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertFamilleProduit(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertFamilleProduit(System.IAsyncResult result) {
            base.Channel.EndInsertFamilleProduit(result);
        }
        
        private System.IAsyncResult OnBeginInsertFamilleProduit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.FamilleProduit obj = ((NewOptics.SVC.FamilleProduit)(inValues[0]));
            return this.BeginInsertFamilleProduit(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertFamilleProduit(System.IAsyncResult result) {
            this.EndInsertFamilleProduit(result);
            return null;
        }
        
        private void OnInsertFamilleProduitCompleted(object state) {
            if ((this.InsertFamilleProduitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertFamilleProduitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertFamilleProduitAsync(NewOptics.SVC.FamilleProduit obj) {
            this.InsertFamilleProduitAsync(obj, null);
        }
        
        public void InsertFamilleProduitAsync(NewOptics.SVC.FamilleProduit obj, object userState) {
            if ((this.onBeginInsertFamilleProduitDelegate == null)) {
                this.onBeginInsertFamilleProduitDelegate = new BeginOperationDelegate(this.OnBeginInsertFamilleProduit);
            }
            if ((this.onEndInsertFamilleProduitDelegate == null)) {
                this.onEndInsertFamilleProduitDelegate = new EndOperationDelegate(this.OnEndInsertFamilleProduit);
            }
            if ((this.onInsertFamilleProduitCompletedDelegate == null)) {
                this.onInsertFamilleProduitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertFamilleProduitCompleted);
            }
            base.InvokeAsync(this.onBeginInsertFamilleProduitDelegate, new object[] {
                        obj}, this.onEndInsertFamilleProduitDelegate, this.onInsertFamilleProduitCompletedDelegate, userState);
        }
        
        public void UpdateFamilleProduit(NewOptics.SVC.FamilleProduit obj) {
            base.Channel.UpdateFamilleProduit(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateFamilleProduit(NewOptics.SVC.FamilleProduit obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateFamilleProduit(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateFamilleProduit(System.IAsyncResult result) {
            base.Channel.EndUpdateFamilleProduit(result);
        }
        
        private System.IAsyncResult OnBeginUpdateFamilleProduit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.FamilleProduit obj = ((NewOptics.SVC.FamilleProduit)(inValues[0]));
            return this.BeginUpdateFamilleProduit(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateFamilleProduit(System.IAsyncResult result) {
            this.EndUpdateFamilleProduit(result);
            return null;
        }
        
        private void OnUpdateFamilleProduitCompleted(object state) {
            if ((this.UpdateFamilleProduitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateFamilleProduitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateFamilleProduitAsync(NewOptics.SVC.FamilleProduit obj) {
            this.UpdateFamilleProduitAsync(obj, null);
        }
        
        public void UpdateFamilleProduitAsync(NewOptics.SVC.FamilleProduit obj, object userState) {
            if ((this.onBeginUpdateFamilleProduitDelegate == null)) {
                this.onBeginUpdateFamilleProduitDelegate = new BeginOperationDelegate(this.OnBeginUpdateFamilleProduit);
            }
            if ((this.onEndUpdateFamilleProduitDelegate == null)) {
                this.onEndUpdateFamilleProduitDelegate = new EndOperationDelegate(this.OnEndUpdateFamilleProduit);
            }
            if ((this.onUpdateFamilleProduitCompletedDelegate == null)) {
                this.onUpdateFamilleProduitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateFamilleProduitCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateFamilleProduitDelegate, new object[] {
                        obj}, this.onEndUpdateFamilleProduitDelegate, this.onUpdateFamilleProduitCompletedDelegate, userState);
        }
        
        public void DeletFamilleProduit(NewOptics.SVC.FamilleProduit obj) {
            base.Channel.DeletFamilleProduit(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletFamilleProduit(NewOptics.SVC.FamilleProduit obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletFamilleProduit(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletFamilleProduit(System.IAsyncResult result) {
            base.Channel.EndDeletFamilleProduit(result);
        }
        
        private System.IAsyncResult OnBeginDeletFamilleProduit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.FamilleProduit obj = ((NewOptics.SVC.FamilleProduit)(inValues[0]));
            return this.BeginDeletFamilleProduit(obj, callback, asyncState);
        }
        
        private object[] OnEndDeletFamilleProduit(System.IAsyncResult result) {
            this.EndDeletFamilleProduit(result);
            return null;
        }
        
        private void OnDeletFamilleProduitCompleted(object state) {
            if ((this.DeletFamilleProduitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletFamilleProduitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletFamilleProduitAsync(NewOptics.SVC.FamilleProduit obj) {
            this.DeletFamilleProduitAsync(obj, null);
        }
        
        public void DeletFamilleProduitAsync(NewOptics.SVC.FamilleProduit obj, object userState) {
            if ((this.onBeginDeletFamilleProduitDelegate == null)) {
                this.onBeginDeletFamilleProduitDelegate = new BeginOperationDelegate(this.OnBeginDeletFamilleProduit);
            }
            if ((this.onEndDeletFamilleProduitDelegate == null)) {
                this.onEndDeletFamilleProduitDelegate = new EndOperationDelegate(this.OnEndDeletFamilleProduit);
            }
            if ((this.onDeletFamilleProduitCompletedDelegate == null)) {
                this.onDeletFamilleProduitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletFamilleProduitCompleted);
            }
            base.InvokeAsync(this.onBeginDeletFamilleProduitDelegate, new object[] {
                        obj}, this.onEndDeletFamilleProduitDelegate, this.onDeletFamilleProduitCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Prodf> GetAllProdf() {
            return base.Channel.GetAllProdf();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllProdf(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllProdf(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Prodf> EndGetAllProdf(System.IAsyncResult result) {
            return base.Channel.EndGetAllProdf(result);
        }
        
        private System.IAsyncResult OnBeginGetAllProdf(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllProdf(callback, asyncState);
        }
        
        private object[] OnEndGetAllProdf(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Prodf> retVal = this.EndGetAllProdf(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllProdfCompleted(object state) {
            if ((this.GetAllProdfCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllProdfCompleted(this, new GetAllProdfCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllProdfAsync() {
            this.GetAllProdfAsync(null);
        }
        
        public void GetAllProdfAsync(object userState) {
            if ((this.onBeginGetAllProdfDelegate == null)) {
                this.onBeginGetAllProdfDelegate = new BeginOperationDelegate(this.OnBeginGetAllProdf);
            }
            if ((this.onEndGetAllProdfDelegate == null)) {
                this.onEndGetAllProdfDelegate = new EndOperationDelegate(this.OnEndGetAllProdf);
            }
            if ((this.onGetAllProdfCompletedDelegate == null)) {
                this.onGetAllProdfCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllProdfCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllProdfDelegate, null, this.onEndGetAllProdfDelegate, this.onGetAllProdfCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Prodf> GetAllProdfbycodeabarre(string code) {
            return base.Channel.GetAllProdfbycodeabarre(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllProdfbycodeabarre(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllProdfbycodeabarre(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Prodf> EndGetAllProdfbycodeabarre(System.IAsyncResult result) {
            return base.Channel.EndGetAllProdfbycodeabarre(result);
        }
        
        private System.IAsyncResult OnBeginGetAllProdfbycodeabarre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetAllProdfbycodeabarre(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllProdfbycodeabarre(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Prodf> retVal = this.EndGetAllProdfbycodeabarre(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllProdfbycodeabarreCompleted(object state) {
            if ((this.GetAllProdfbycodeabarreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllProdfbycodeabarreCompleted(this, new GetAllProdfbycodeabarreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllProdfbycodeabarreAsync(string code) {
            this.GetAllProdfbycodeabarreAsync(code, null);
        }
        
        public void GetAllProdfbycodeabarreAsync(string code, object userState) {
            if ((this.onBeginGetAllProdfbycodeabarreDelegate == null)) {
                this.onBeginGetAllProdfbycodeabarreDelegate = new BeginOperationDelegate(this.OnBeginGetAllProdfbycodeabarre);
            }
            if ((this.onEndGetAllProdfbycodeabarreDelegate == null)) {
                this.onEndGetAllProdfbycodeabarreDelegate = new EndOperationDelegate(this.OnEndGetAllProdfbycodeabarre);
            }
            if ((this.onGetAllProdfbycodeabarreCompletedDelegate == null)) {
                this.onGetAllProdfbycodeabarreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllProdfbycodeabarreCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllProdfbycodeabarreDelegate, new object[] {
                        code}, this.onEndGetAllProdfbycodeabarreDelegate, this.onGetAllProdfbycodeabarreCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Prodf> GetAllProdfbycode(int code) {
            return base.Channel.GetAllProdfbycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllProdfbycode(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllProdfbycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Prodf> EndGetAllProdfbycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllProdfbycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllProdfbycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginGetAllProdfbycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllProdfbycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Prodf> retVal = this.EndGetAllProdfbycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllProdfbycodeCompleted(object state) {
            if ((this.GetAllProdfbycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllProdfbycodeCompleted(this, new GetAllProdfbycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllProdfbycodeAsync(int code) {
            this.GetAllProdfbycodeAsync(code, null);
        }
        
        public void GetAllProdfbycodeAsync(int code, object userState) {
            if ((this.onBeginGetAllProdfbycodeDelegate == null)) {
                this.onBeginGetAllProdfbycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllProdfbycode);
            }
            if ((this.onEndGetAllProdfbycodeDelegate == null)) {
                this.onEndGetAllProdfbycodeDelegate = new EndOperationDelegate(this.OnEndGetAllProdfbycode);
            }
            if ((this.onGetAllProdfbycodeCompletedDelegate == null)) {
                this.onGetAllProdfbycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllProdfbycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllProdfbycodeDelegate, new object[] {
                        code}, this.onEndGetAllProdfbycodeDelegate, this.onGetAllProdfbycodeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Prodf> GetAllProdfbyfiche(int code) {
            return base.Channel.GetAllProdfbyfiche(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllProdfbyfiche(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllProdfbyfiche(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Prodf> EndGetAllProdfbyfiche(System.IAsyncResult result) {
            return base.Channel.EndGetAllProdfbyfiche(result);
        }
        
        private System.IAsyncResult OnBeginGetAllProdfbyfiche(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginGetAllProdfbyfiche(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllProdfbyfiche(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Prodf> retVal = this.EndGetAllProdfbyfiche(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllProdfbyficheCompleted(object state) {
            if ((this.GetAllProdfbyficheCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllProdfbyficheCompleted(this, new GetAllProdfbyficheCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllProdfbyficheAsync(int code) {
            this.GetAllProdfbyficheAsync(code, null);
        }
        
        public void GetAllProdfbyficheAsync(int code, object userState) {
            if ((this.onBeginGetAllProdfbyficheDelegate == null)) {
                this.onBeginGetAllProdfbyficheDelegate = new BeginOperationDelegate(this.OnBeginGetAllProdfbyfiche);
            }
            if ((this.onEndGetAllProdfbyficheDelegate == null)) {
                this.onEndGetAllProdfbyficheDelegate = new EndOperationDelegate(this.OnEndGetAllProdfbyfiche);
            }
            if ((this.onGetAllProdfbyficheCompletedDelegate == null)) {
                this.onGetAllProdfbyficheCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllProdfbyficheCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllProdfbyficheDelegate, new object[] {
                        code}, this.onEndGetAllProdfbyficheDelegate, this.onGetAllProdfbyficheCompletedDelegate, userState);
        }
        
        public bool InsertProdf(NewOptics.SVC.Prodf obj) {
            return base.Channel.InsertProdf(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertProdf(NewOptics.SVC.Prodf obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertProdf(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndInsertProdf(System.IAsyncResult result) {
            return base.Channel.EndInsertProdf(result);
        }
        
        private System.IAsyncResult OnBeginInsertProdf(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Prodf obj = ((NewOptics.SVC.Prodf)(inValues[0]));
            return this.BeginInsertProdf(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertProdf(System.IAsyncResult result) {
            bool retVal = this.EndInsertProdf(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertProdfCompleted(object state) {
            if ((this.InsertProdfCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertProdfCompleted(this, new InsertProdfCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertProdfAsync(NewOptics.SVC.Prodf obj) {
            this.InsertProdfAsync(obj, null);
        }
        
        public void InsertProdfAsync(NewOptics.SVC.Prodf obj, object userState) {
            if ((this.onBeginInsertProdfDelegate == null)) {
                this.onBeginInsertProdfDelegate = new BeginOperationDelegate(this.OnBeginInsertProdf);
            }
            if ((this.onEndInsertProdfDelegate == null)) {
                this.onEndInsertProdfDelegate = new EndOperationDelegate(this.OnEndInsertProdf);
            }
            if ((this.onInsertProdfCompletedDelegate == null)) {
                this.onInsertProdfCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertProdfCompleted);
            }
            base.InvokeAsync(this.onBeginInsertProdfDelegate, new object[] {
                        obj}, this.onEndInsertProdfDelegate, this.onInsertProdfCompletedDelegate, userState);
        }
        
        public void UpdateProdf(NewOptics.SVC.Prodf obj) {
            base.Channel.UpdateProdf(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateProdf(NewOptics.SVC.Prodf obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateProdf(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateProdf(System.IAsyncResult result) {
            base.Channel.EndUpdateProdf(result);
        }
        
        private System.IAsyncResult OnBeginUpdateProdf(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Prodf obj = ((NewOptics.SVC.Prodf)(inValues[0]));
            return this.BeginUpdateProdf(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateProdf(System.IAsyncResult result) {
            this.EndUpdateProdf(result);
            return null;
        }
        
        private void OnUpdateProdfCompleted(object state) {
            if ((this.UpdateProdfCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateProdfCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateProdfAsync(NewOptics.SVC.Prodf obj) {
            this.UpdateProdfAsync(obj, null);
        }
        
        public void UpdateProdfAsync(NewOptics.SVC.Prodf obj, object userState) {
            if ((this.onBeginUpdateProdfDelegate == null)) {
                this.onBeginUpdateProdfDelegate = new BeginOperationDelegate(this.OnBeginUpdateProdf);
            }
            if ((this.onEndUpdateProdfDelegate == null)) {
                this.onEndUpdateProdfDelegate = new EndOperationDelegate(this.OnEndUpdateProdf);
            }
            if ((this.onUpdateProdfCompletedDelegate == null)) {
                this.onUpdateProdfCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateProdfCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateProdfDelegate, new object[] {
                        obj}, this.onEndUpdateProdfDelegate, this.onUpdateProdfCompletedDelegate, userState);
        }
        
        public void DeleteProdf(NewOptics.SVC.Prodf obj) {
            base.Channel.DeleteProdf(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteProdf(NewOptics.SVC.Prodf obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteProdf(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteProdf(System.IAsyncResult result) {
            base.Channel.EndDeleteProdf(result);
        }
        
        private System.IAsyncResult OnBeginDeleteProdf(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Prodf obj = ((NewOptics.SVC.Prodf)(inValues[0]));
            return this.BeginDeleteProdf(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteProdf(System.IAsyncResult result) {
            this.EndDeleteProdf(result);
            return null;
        }
        
        private void OnDeleteProdfCompleted(object state) {
            if ((this.DeleteProdfCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteProdfCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteProdfAsync(NewOptics.SVC.Prodf obj) {
            this.DeleteProdfAsync(obj, null);
        }
        
        public void DeleteProdfAsync(NewOptics.SVC.Prodf obj, object userState) {
            if ((this.onBeginDeleteProdfDelegate == null)) {
                this.onBeginDeleteProdfDelegate = new BeginOperationDelegate(this.OnBeginDeleteProdf);
            }
            if ((this.onEndDeleteProdfDelegate == null)) {
                this.onEndDeleteProdfDelegate = new EndOperationDelegate(this.OnEndDeleteProdf);
            }
            if ((this.onDeleteProdfCompletedDelegate == null)) {
                this.onDeleteProdfCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteProdfCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteProdfDelegate, new object[] {
                        obj}, this.onEndDeleteProdfDelegate, this.onDeleteProdfCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Commande> GetAllCommande() {
            return base.Channel.GetAllCommande();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllCommande(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCommande(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Commande> EndGetAllCommande(System.IAsyncResult result) {
            return base.Channel.EndGetAllCommande(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCommande(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllCommande(callback, asyncState);
        }
        
        private object[] OnEndGetAllCommande(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Commande> retVal = this.EndGetAllCommande(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCommandeCompleted(object state) {
            if ((this.GetAllCommandeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCommandeCompleted(this, new GetAllCommandeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCommandeAsync() {
            this.GetAllCommandeAsync(null);
        }
        
        public void GetAllCommandeAsync(object userState) {
            if ((this.onBeginGetAllCommandeDelegate == null)) {
                this.onBeginGetAllCommandeDelegate = new BeginOperationDelegate(this.OnBeginGetAllCommande);
            }
            if ((this.onEndGetAllCommandeDelegate == null)) {
                this.onEndGetAllCommandeDelegate = new EndOperationDelegate(this.OnEndGetAllCommande);
            }
            if ((this.onGetAllCommandeCompletedDelegate == null)) {
                this.onGetAllCommandeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCommandeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCommandeDelegate, null, this.onEndGetAllCommandeDelegate, this.onGetAllCommandeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Commande> GetAllCommandebydatecommande(System.DateTime d1, System.DateTime d2) {
            return base.Channel.GetAllCommandebydatecommande(d1, d2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllCommandebydatecommande(System.DateTime d1, System.DateTime d2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCommandebydatecommande(d1, d2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Commande> EndGetAllCommandebydatecommande(System.IAsyncResult result) {
            return base.Channel.EndGetAllCommandebydatecommande(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCommandebydatecommande(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime d1 = ((System.DateTime)(inValues[0]));
            System.DateTime d2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllCommandebydatecommande(d1, d2, callback, asyncState);
        }
        
        private object[] OnEndGetAllCommandebydatecommande(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Commande> retVal = this.EndGetAllCommandebydatecommande(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCommandebydatecommandeCompleted(object state) {
            if ((this.GetAllCommandebydatecommandeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCommandebydatecommandeCompleted(this, new GetAllCommandebydatecommandeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCommandebydatecommandeAsync(System.DateTime d1, System.DateTime d2) {
            this.GetAllCommandebydatecommandeAsync(d1, d2, null);
        }
        
        public void GetAllCommandebydatecommandeAsync(System.DateTime d1, System.DateTime d2, object userState) {
            if ((this.onBeginGetAllCommandebydatecommandeDelegate == null)) {
                this.onBeginGetAllCommandebydatecommandeDelegate = new BeginOperationDelegate(this.OnBeginGetAllCommandebydatecommande);
            }
            if ((this.onEndGetAllCommandebydatecommandeDelegate == null)) {
                this.onEndGetAllCommandebydatecommandeDelegate = new EndOperationDelegate(this.OnEndGetAllCommandebydatecommande);
            }
            if ((this.onGetAllCommandebydatecommandeCompletedDelegate == null)) {
                this.onGetAllCommandebydatecommandeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCommandebydatecommandeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCommandebydatecommandeDelegate, new object[] {
                        d1,
                        d2}, this.onEndGetAllCommandebydatecommandeDelegate, this.onGetAllCommandebydatecommandeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Commande> GetAllCommandebydatereception(System.DateTime d1, System.DateTime d2) {
            return base.Channel.GetAllCommandebydatereception(d1, d2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllCommandebydatereception(System.DateTime d1, System.DateTime d2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCommandebydatereception(d1, d2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Commande> EndGetAllCommandebydatereception(System.IAsyncResult result) {
            return base.Channel.EndGetAllCommandebydatereception(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCommandebydatereception(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime d1 = ((System.DateTime)(inValues[0]));
            System.DateTime d2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllCommandebydatereception(d1, d2, callback, asyncState);
        }
        
        private object[] OnEndGetAllCommandebydatereception(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Commande> retVal = this.EndGetAllCommandebydatereception(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCommandebydatereceptionCompleted(object state) {
            if ((this.GetAllCommandebydatereceptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCommandebydatereceptionCompleted(this, new GetAllCommandebydatereceptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCommandebydatereceptionAsync(System.DateTime d1, System.DateTime d2) {
            this.GetAllCommandebydatereceptionAsync(d1, d2, null);
        }
        
        public void GetAllCommandebydatereceptionAsync(System.DateTime d1, System.DateTime d2, object userState) {
            if ((this.onBeginGetAllCommandebydatereceptionDelegate == null)) {
                this.onBeginGetAllCommandebydatereceptionDelegate = new BeginOperationDelegate(this.OnBeginGetAllCommandebydatereception);
            }
            if ((this.onEndGetAllCommandebydatereceptionDelegate == null)) {
                this.onEndGetAllCommandebydatereceptionDelegate = new EndOperationDelegate(this.OnEndGetAllCommandebydatereception);
            }
            if ((this.onGetAllCommandebydatereceptionCompletedDelegate == null)) {
                this.onGetAllCommandebydatereceptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCommandebydatereceptionCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCommandebydatereceptionDelegate, new object[] {
                        d1,
                        d2}, this.onEndGetAllCommandebydatereceptionDelegate, this.onGetAllCommandebydatereceptionCompletedDelegate, userState);
        }
        
        public bool InsertCommande(NewOptics.SVC.Commande obj) {
            return base.Channel.InsertCommande(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertCommande(NewOptics.SVC.Commande obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertCommande(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndInsertCommande(System.IAsyncResult result) {
            return base.Channel.EndInsertCommande(result);
        }
        
        private System.IAsyncResult OnBeginInsertCommande(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Commande obj = ((NewOptics.SVC.Commande)(inValues[0]));
            return this.BeginInsertCommande(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertCommande(System.IAsyncResult result) {
            bool retVal = this.EndInsertCommande(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertCommandeCompleted(object state) {
            if ((this.InsertCommandeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertCommandeCompleted(this, new InsertCommandeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertCommandeAsync(NewOptics.SVC.Commande obj) {
            this.InsertCommandeAsync(obj, null);
        }
        
        public void InsertCommandeAsync(NewOptics.SVC.Commande obj, object userState) {
            if ((this.onBeginInsertCommandeDelegate == null)) {
                this.onBeginInsertCommandeDelegate = new BeginOperationDelegate(this.OnBeginInsertCommande);
            }
            if ((this.onEndInsertCommandeDelegate == null)) {
                this.onEndInsertCommandeDelegate = new EndOperationDelegate(this.OnEndInsertCommande);
            }
            if ((this.onInsertCommandeCompletedDelegate == null)) {
                this.onInsertCommandeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertCommandeCompleted);
            }
            base.InvokeAsync(this.onBeginInsertCommandeDelegate, new object[] {
                        obj}, this.onEndInsertCommandeDelegate, this.onInsertCommandeCompletedDelegate, userState);
        }
        
        public void UpdateCommande(NewOptics.SVC.Commande obj) {
            base.Channel.UpdateCommande(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateCommande(NewOptics.SVC.Commande obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateCommande(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateCommande(System.IAsyncResult result) {
            base.Channel.EndUpdateCommande(result);
        }
        
        private System.IAsyncResult OnBeginUpdateCommande(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Commande obj = ((NewOptics.SVC.Commande)(inValues[0]));
            return this.BeginUpdateCommande(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateCommande(System.IAsyncResult result) {
            this.EndUpdateCommande(result);
            return null;
        }
        
        private void OnUpdateCommandeCompleted(object state) {
            if ((this.UpdateCommandeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCommandeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateCommandeAsync(NewOptics.SVC.Commande obj) {
            this.UpdateCommandeAsync(obj, null);
        }
        
        public void UpdateCommandeAsync(NewOptics.SVC.Commande obj, object userState) {
            if ((this.onBeginUpdateCommandeDelegate == null)) {
                this.onBeginUpdateCommandeDelegate = new BeginOperationDelegate(this.OnBeginUpdateCommande);
            }
            if ((this.onEndUpdateCommandeDelegate == null)) {
                this.onEndUpdateCommandeDelegate = new EndOperationDelegate(this.OnEndUpdateCommande);
            }
            if ((this.onUpdateCommandeCompletedDelegate == null)) {
                this.onUpdateCommandeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCommandeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateCommandeDelegate, new object[] {
                        obj}, this.onEndUpdateCommandeDelegate, this.onUpdateCommandeCompletedDelegate, userState);
        }
        
        public void AjouterFactureVenteRefresh(string facture) {
            base.Channel.AjouterFactureVenteRefresh(facture);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterFactureVenteRefresh(string facture, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterFactureVenteRefresh(facture, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterFactureVenteRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterFactureVenteRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterFactureVenteRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string facture = ((string)(inValues[0]));
            return this.BeginAjouterFactureVenteRefresh(facture, callback, asyncState);
        }
        
        private object[] OnEndAjouterFactureVenteRefresh(System.IAsyncResult result) {
            this.EndAjouterFactureVenteRefresh(result);
            return null;
        }
        
        private void OnAjouterFactureVenteRefreshCompleted(object state) {
            if ((this.AjouterFactureVenteRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterFactureVenteRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterFactureVenteRefreshAsync(string facture) {
            this.AjouterFactureVenteRefreshAsync(facture, null);
        }
        
        public void AjouterFactureVenteRefreshAsync(string facture, object userState) {
            if ((this.onBeginAjouterFactureVenteRefreshDelegate == null)) {
                this.onBeginAjouterFactureVenteRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterFactureVenteRefresh);
            }
            if ((this.onEndAjouterFactureVenteRefreshDelegate == null)) {
                this.onEndAjouterFactureVenteRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterFactureVenteRefresh);
            }
            if ((this.onAjouterFactureVenteRefreshCompletedDelegate == null)) {
                this.onAjouterFactureVenteRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterFactureVenteRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterFactureVenteRefreshDelegate, new object[] {
                        facture}, this.onEndAjouterFactureVenteRefreshDelegate, this.onAjouterFactureVenteRefreshCompletedDelegate, userState);
        }
        
        public void AjouterDicomImageRefresh(int code) {
            base.Channel.AjouterDicomImageRefresh(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterDicomImageRefresh(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterDicomImageRefresh(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterDicomImageRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterDicomImageRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterDicomImageRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginAjouterDicomImageRefresh(code, callback, asyncState);
        }
        
        private object[] OnEndAjouterDicomImageRefresh(System.IAsyncResult result) {
            this.EndAjouterDicomImageRefresh(result);
            return null;
        }
        
        private void OnAjouterDicomImageRefreshCompleted(object state) {
            if ((this.AjouterDicomImageRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterDicomImageRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterDicomImageRefreshAsync(int code) {
            this.AjouterDicomImageRefreshAsync(code, null);
        }
        
        public void AjouterDicomImageRefreshAsync(int code, object userState) {
            if ((this.onBeginAjouterDicomImageRefreshDelegate == null)) {
                this.onBeginAjouterDicomImageRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterDicomImageRefresh);
            }
            if ((this.onEndAjouterDicomImageRefreshDelegate == null)) {
                this.onEndAjouterDicomImageRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterDicomImageRefresh);
            }
            if ((this.onAjouterDicomImageRefreshCompletedDelegate == null)) {
                this.onAjouterDicomImageRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterDicomImageRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterDicomImageRefreshDelegate, new object[] {
                        code}, this.onEndAjouterDicomImageRefreshDelegate, this.onAjouterDicomImageRefreshCompletedDelegate, userState);
        }
        
        public void AjouterMontureRefreshClient(int cle) {
            base.Channel.AjouterMontureRefreshClient(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterMontureRefreshClient(int cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterMontureRefreshClient(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterMontureRefreshClient(System.IAsyncResult result) {
            base.Channel.EndAjouterMontureRefreshClient(result);
        }
        
        private System.IAsyncResult OnBeginAjouterMontureRefreshClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            return this.BeginAjouterMontureRefreshClient(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterMontureRefreshClient(System.IAsyncResult result) {
            this.EndAjouterMontureRefreshClient(result);
            return null;
        }
        
        private void OnAjouterMontureRefreshClientCompleted(object state) {
            if ((this.AjouterMontureRefreshClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterMontureRefreshClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterMontureRefreshClientAsync(int cle) {
            this.AjouterMontureRefreshClientAsync(cle, null);
        }
        
        public void AjouterMontureRefreshClientAsync(int cle, object userState) {
            if ((this.onBeginAjouterMontureRefreshClientDelegate == null)) {
                this.onBeginAjouterMontureRefreshClientDelegate = new BeginOperationDelegate(this.OnBeginAjouterMontureRefreshClient);
            }
            if ((this.onEndAjouterMontureRefreshClientDelegate == null)) {
                this.onEndAjouterMontureRefreshClientDelegate = new EndOperationDelegate(this.OnEndAjouterMontureRefreshClient);
            }
            if ((this.onAjouterMontureRefreshClientCompletedDelegate == null)) {
                this.onAjouterMontureRefreshClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterMontureRefreshClientCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterMontureRefreshClientDelegate, new object[] {
                        cle}, this.onEndAjouterMontureRefreshClientDelegate, this.onAjouterMontureRefreshClientCompletedDelegate, userState);
        }
        
        public void AjouterMontureRefresh(int cle) {
            base.Channel.AjouterMontureRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterMontureRefresh(int cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterMontureRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterMontureRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterMontureRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterMontureRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            return this.BeginAjouterMontureRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterMontureRefresh(System.IAsyncResult result) {
            this.EndAjouterMontureRefresh(result);
            return null;
        }
        
        private void OnAjouterMontureRefreshCompleted(object state) {
            if ((this.AjouterMontureRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterMontureRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterMontureRefreshAsync(int cle) {
            this.AjouterMontureRefreshAsync(cle, null);
        }
        
        public void AjouterMontureRefreshAsync(int cle, object userState) {
            if ((this.onBeginAjouterMontureRefreshDelegate == null)) {
                this.onBeginAjouterMontureRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterMontureRefresh);
            }
            if ((this.onEndAjouterMontureRefreshDelegate == null)) {
                this.onEndAjouterMontureRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterMontureRefresh);
            }
            if ((this.onAjouterMontureRefreshCompletedDelegate == null)) {
                this.onAjouterMontureRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterMontureRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterMontureRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterMontureRefreshDelegate, this.onAjouterMontureRefreshCompletedDelegate, userState);
        }
        
        public void AjouterMontureSupplementRefresh(string cle) {
            base.Channel.AjouterMontureSupplementRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterMontureSupplementRefresh(string cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterMontureSupplementRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterMontureSupplementRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterMontureSupplementRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterMontureSupplementRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cle = ((string)(inValues[0]));
            return this.BeginAjouterMontureSupplementRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterMontureSupplementRefresh(System.IAsyncResult result) {
            this.EndAjouterMontureSupplementRefresh(result);
            return null;
        }
        
        private void OnAjouterMontureSupplementRefreshCompleted(object state) {
            if ((this.AjouterMontureSupplementRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterMontureSupplementRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterMontureSupplementRefreshAsync(string cle) {
            this.AjouterMontureSupplementRefreshAsync(cle, null);
        }
        
        public void AjouterMontureSupplementRefreshAsync(string cle, object userState) {
            if ((this.onBeginAjouterMontureSupplementRefreshDelegate == null)) {
                this.onBeginAjouterMontureSupplementRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterMontureSupplementRefresh);
            }
            if ((this.onEndAjouterMontureSupplementRefreshDelegate == null)) {
                this.onEndAjouterMontureSupplementRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterMontureSupplementRefresh);
            }
            if ((this.onAjouterMontureSupplementRefreshCompletedDelegate == null)) {
                this.onAjouterMontureSupplementRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterMontureSupplementRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterMontureSupplementRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterMontureSupplementRefreshDelegate, this.onAjouterMontureSupplementRefreshCompletedDelegate, userState);
        }
        
        public void AjouterAnamneseRefresh(int cle) {
            base.Channel.AjouterAnamneseRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterAnamneseRefresh(int cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterAnamneseRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterAnamneseRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterAnamneseRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterAnamneseRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            return this.BeginAjouterAnamneseRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterAnamneseRefresh(System.IAsyncResult result) {
            this.EndAjouterAnamneseRefresh(result);
            return null;
        }
        
        private void OnAjouterAnamneseRefreshCompleted(object state) {
            if ((this.AjouterAnamneseRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterAnamneseRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterAnamneseRefreshAsync(int cle) {
            this.AjouterAnamneseRefreshAsync(cle, null);
        }
        
        public void AjouterAnamneseRefreshAsync(int cle, object userState) {
            if ((this.onBeginAjouterAnamneseRefreshDelegate == null)) {
                this.onBeginAjouterAnamneseRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterAnamneseRefresh);
            }
            if ((this.onEndAjouterAnamneseRefreshDelegate == null)) {
                this.onEndAjouterAnamneseRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterAnamneseRefresh);
            }
            if ((this.onAjouterAnamneseRefreshCompletedDelegate == null)) {
                this.onAjouterAnamneseRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterAnamneseRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterAnamneseRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterAnamneseRefreshDelegate, this.onAjouterAnamneseRefreshCompletedDelegate, userState);
        }
        
        public void AjouterRendezVouRefresh(int cle) {
            base.Channel.AjouterRendezVouRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterRendezVouRefresh(int cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterRendezVouRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterRendezVouRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterRendezVouRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterRendezVouRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            return this.BeginAjouterRendezVouRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterRendezVouRefresh(System.IAsyncResult result) {
            this.EndAjouterRendezVouRefresh(result);
            return null;
        }
        
        private void OnAjouterRendezVouRefreshCompleted(object state) {
            if ((this.AjouterRendezVouRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterRendezVouRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterRendezVouRefreshAsync(int cle) {
            this.AjouterRendezVouRefreshAsync(cle, null);
        }
        
        public void AjouterRendezVouRefreshAsync(int cle, object userState) {
            if ((this.onBeginAjouterRendezVouRefreshDelegate == null)) {
                this.onBeginAjouterRendezVouRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterRendezVouRefresh);
            }
            if ((this.onEndAjouterRendezVouRefreshDelegate == null)) {
                this.onEndAjouterRendezVouRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterRendezVouRefresh);
            }
            if ((this.onAjouterRendezVouRefreshCompletedDelegate == null)) {
                this.onAjouterRendezVouRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterRendezVouRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterRendezVouRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterRendezVouRefreshDelegate, this.onAjouterRendezVouRefreshCompletedDelegate, userState);
        }
        
        public void AjouterAppointmentRefresh(int cle, System.DateTime d1, System.DateTime d2) {
            base.Channel.AjouterAppointmentRefresh(cle, d1, d2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterAppointmentRefresh(int cle, System.DateTime d1, System.DateTime d2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterAppointmentRefresh(cle, d1, d2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterAppointmentRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterAppointmentRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterAppointmentRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            System.DateTime d1 = ((System.DateTime)(inValues[1]));
            System.DateTime d2 = ((System.DateTime)(inValues[2]));
            return this.BeginAjouterAppointmentRefresh(cle, d1, d2, callback, asyncState);
        }
        
        private object[] OnEndAjouterAppointmentRefresh(System.IAsyncResult result) {
            this.EndAjouterAppointmentRefresh(result);
            return null;
        }
        
        private void OnAjouterAppointmentRefreshCompleted(object state) {
            if ((this.AjouterAppointmentRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterAppointmentRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterAppointmentRefreshAsync(int cle, System.DateTime d1, System.DateTime d2) {
            this.AjouterAppointmentRefreshAsync(cle, d1, d2, null);
        }
        
        public void AjouterAppointmentRefreshAsync(int cle, System.DateTime d1, System.DateTime d2, object userState) {
            if ((this.onBeginAjouterAppointmentRefreshDelegate == null)) {
                this.onBeginAjouterAppointmentRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterAppointmentRefresh);
            }
            if ((this.onEndAjouterAppointmentRefreshDelegate == null)) {
                this.onEndAjouterAppointmentRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterAppointmentRefresh);
            }
            if ((this.onAjouterAppointmentRefreshCompletedDelegate == null)) {
                this.onAjouterAppointmentRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterAppointmentRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterAppointmentRefreshDelegate, new object[] {
                        cle,
                        d1,
                        d2}, this.onEndAjouterAppointmentRefreshDelegate, this.onAjouterAppointmentRefreshCompletedDelegate, userState);
        }
        
        public void AjouterResourceRefresh(int cle) {
            base.Channel.AjouterResourceRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterResourceRefresh(int cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterResourceRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterResourceRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterResourceRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterResourceRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            return this.BeginAjouterResourceRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterResourceRefresh(System.IAsyncResult result) {
            this.EndAjouterResourceRefresh(result);
            return null;
        }
        
        private void OnAjouterResourceRefreshCompleted(object state) {
            if ((this.AjouterResourceRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterResourceRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterResourceRefreshAsync(int cle) {
            this.AjouterResourceRefreshAsync(cle, null);
        }
        
        public void AjouterResourceRefreshAsync(int cle, object userState) {
            if ((this.onBeginAjouterResourceRefreshDelegate == null)) {
                this.onBeginAjouterResourceRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterResourceRefresh);
            }
            if ((this.onEndAjouterResourceRefreshDelegate == null)) {
                this.onEndAjouterResourceRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterResourceRefresh);
            }
            if ((this.onAjouterResourceRefreshCompletedDelegate == null)) {
                this.onAjouterResourceRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterResourceRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterResourceRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterResourceRefreshDelegate, this.onAjouterResourceRefreshCompletedDelegate, userState);
        }
        
        public void AjouterExamensOptométriquesRefresh(int cle) {
            base.Channel.AjouterExamensOptométriquesRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterExamensOptométriquesRefresh(int cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterExamensOptométriquesRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterExamensOptométriquesRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterExamensOptométriquesRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterExamensOptométriquesRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            return this.BeginAjouterExamensOptométriquesRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterExamensOptométriquesRefresh(System.IAsyncResult result) {
            this.EndAjouterExamensOptométriquesRefresh(result);
            return null;
        }
        
        private void OnAjouterExamensOptométriquesRefreshCompleted(object state) {
            if ((this.AjouterExamensOptométriquesRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterExamensOptométriquesRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterExamensOptométriquesRefreshAsync(int cle) {
            this.AjouterExamensOptométriquesRefreshAsync(cle, null);
        }
        
        public void AjouterExamensOptométriquesRefreshAsync(int cle, object userState) {
            if ((this.onBeginAjouterExamensOptométriquesRefreshDelegate == null)) {
                this.onBeginAjouterExamensOptométriquesRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterExamensOptométriquesRefresh);
            }
            if ((this.onEndAjouterExamensOptométriquesRefreshDelegate == null)) {
                this.onEndAjouterExamensOptométriquesRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterExamensOptométriquesRefresh);
            }
            if ((this.onAjouterExamensOptométriquesRefreshCompletedDelegate == null)) {
                this.onAjouterExamensOptométriquesRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterExamensOptométriquesRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterExamensOptométriquesRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterExamensOptométriquesRefreshDelegate, this.onAjouterExamensOptométriquesRefreshCompletedDelegate, userState);
        }
        
        public void AjouterAdaptationLentilleRefresh(int cle) {
            base.Channel.AjouterAdaptationLentilleRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterAdaptationLentilleRefresh(int cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterAdaptationLentilleRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterAdaptationLentilleRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterAdaptationLentilleRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterAdaptationLentilleRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            return this.BeginAjouterAdaptationLentilleRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterAdaptationLentilleRefresh(System.IAsyncResult result) {
            this.EndAjouterAdaptationLentilleRefresh(result);
            return null;
        }
        
        private void OnAjouterAdaptationLentilleRefreshCompleted(object state) {
            if ((this.AjouterAdaptationLentilleRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterAdaptationLentilleRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterAdaptationLentilleRefreshAsync(int cle) {
            this.AjouterAdaptationLentilleRefreshAsync(cle, null);
        }
        
        public void AjouterAdaptationLentilleRefreshAsync(int cle, object userState) {
            if ((this.onBeginAjouterAdaptationLentilleRefreshDelegate == null)) {
                this.onBeginAjouterAdaptationLentilleRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterAdaptationLentilleRefresh);
            }
            if ((this.onEndAjouterAdaptationLentilleRefreshDelegate == null)) {
                this.onEndAjouterAdaptationLentilleRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterAdaptationLentilleRefresh);
            }
            if ((this.onAjouterAdaptationLentilleRefreshCompletedDelegate == null)) {
                this.onAjouterAdaptationLentilleRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterAdaptationLentilleRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterAdaptationLentilleRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterAdaptationLentilleRefreshDelegate, this.onAjouterAdaptationLentilleRefreshCompletedDelegate, userState);
        }
        
        public void AjouterPaintRefresh(int cle) {
            base.Channel.AjouterPaintRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterPaintRefresh(int cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterPaintRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterPaintRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterPaintRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterPaintRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            return this.BeginAjouterPaintRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterPaintRefresh(System.IAsyncResult result) {
            this.EndAjouterPaintRefresh(result);
            return null;
        }
        
        private void OnAjouterPaintRefreshCompleted(object state) {
            if ((this.AjouterPaintRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterPaintRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterPaintRefreshAsync(int cle) {
            this.AjouterPaintRefreshAsync(cle, null);
        }
        
        public void AjouterPaintRefreshAsync(int cle, object userState) {
            if ((this.onBeginAjouterPaintRefreshDelegate == null)) {
                this.onBeginAjouterPaintRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterPaintRefresh);
            }
            if ((this.onEndAjouterPaintRefreshDelegate == null)) {
                this.onEndAjouterPaintRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterPaintRefresh);
            }
            if ((this.onAjouterPaintRefreshCompletedDelegate == null)) {
                this.onAjouterPaintRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterPaintRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterPaintRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterPaintRefreshDelegate, this.onAjouterPaintRefreshCompletedDelegate, userState);
        }
        
        public void AjouterExamenBinoculaireRefresh(int cle) {
            base.Channel.AjouterExamenBinoculaireRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterExamenBinoculaireRefresh(int cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterExamenBinoculaireRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterExamenBinoculaireRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterExamenBinoculaireRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterExamenBinoculaireRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            return this.BeginAjouterExamenBinoculaireRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterExamenBinoculaireRefresh(System.IAsyncResult result) {
            this.EndAjouterExamenBinoculaireRefresh(result);
            return null;
        }
        
        private void OnAjouterExamenBinoculaireRefreshCompleted(object state) {
            if ((this.AjouterExamenBinoculaireRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterExamenBinoculaireRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterExamenBinoculaireRefreshAsync(int cle) {
            this.AjouterExamenBinoculaireRefreshAsync(cle, null);
        }
        
        public void AjouterExamenBinoculaireRefreshAsync(int cle, object userState) {
            if ((this.onBeginAjouterExamenBinoculaireRefreshDelegate == null)) {
                this.onBeginAjouterExamenBinoculaireRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterExamenBinoculaireRefresh);
            }
            if ((this.onEndAjouterExamenBinoculaireRefreshDelegate == null)) {
                this.onEndAjouterExamenBinoculaireRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterExamenBinoculaireRefresh);
            }
            if ((this.onAjouterExamenBinoculaireRefreshCompletedDelegate == null)) {
                this.onAjouterExamenBinoculaireRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterExamenBinoculaireRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterExamenBinoculaireRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterExamenBinoculaireRefreshDelegate, this.onAjouterExamenBinoculaireRefreshCompletedDelegate, userState);
        }
        
        public void AjouterLentilleClientRefresh(int cle) {
            base.Channel.AjouterLentilleClientRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterLentilleClientRefresh(int cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterLentilleClientRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterLentilleClientRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterLentilleClientRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterLentilleClientRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            return this.BeginAjouterLentilleClientRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterLentilleClientRefresh(System.IAsyncResult result) {
            this.EndAjouterLentilleClientRefresh(result);
            return null;
        }
        
        private void OnAjouterLentilleClientRefreshCompleted(object state) {
            if ((this.AjouterLentilleClientRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterLentilleClientRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterLentilleClientRefreshAsync(int cle) {
            this.AjouterLentilleClientRefreshAsync(cle, null);
        }
        
        public void AjouterLentilleClientRefreshAsync(int cle, object userState) {
            if ((this.onBeginAjouterLentilleClientRefreshDelegate == null)) {
                this.onBeginAjouterLentilleClientRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterLentilleClientRefresh);
            }
            if ((this.onEndAjouterLentilleClientRefreshDelegate == null)) {
                this.onEndAjouterLentilleClientRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterLentilleClientRefresh);
            }
            if ((this.onAjouterLentilleClientRefreshCompletedDelegate == null)) {
                this.onAjouterLentilleClientRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterLentilleClientRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterLentilleClientRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterLentilleClientRefreshDelegate, this.onAjouterLentilleClientRefreshCompletedDelegate, userState);
        }
        
        public void AjouterLentilleClientRefreshList(int cle) {
            base.Channel.AjouterLentilleClientRefreshList(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterLentilleClientRefreshList(int cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterLentilleClientRefreshList(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterLentilleClientRefreshList(System.IAsyncResult result) {
            base.Channel.EndAjouterLentilleClientRefreshList(result);
        }
        
        private System.IAsyncResult OnBeginAjouterLentilleClientRefreshList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            return this.BeginAjouterLentilleClientRefreshList(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterLentilleClientRefreshList(System.IAsyncResult result) {
            this.EndAjouterLentilleClientRefreshList(result);
            return null;
        }
        
        private void OnAjouterLentilleClientRefreshListCompleted(object state) {
            if ((this.AjouterLentilleClientRefreshListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterLentilleClientRefreshListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterLentilleClientRefreshListAsync(int cle) {
            this.AjouterLentilleClientRefreshListAsync(cle, null);
        }
        
        public void AjouterLentilleClientRefreshListAsync(int cle, object userState) {
            if ((this.onBeginAjouterLentilleClientRefreshListDelegate == null)) {
                this.onBeginAjouterLentilleClientRefreshListDelegate = new BeginOperationDelegate(this.OnBeginAjouterLentilleClientRefreshList);
            }
            if ((this.onEndAjouterLentilleClientRefreshListDelegate == null)) {
                this.onEndAjouterLentilleClientRefreshListDelegate = new EndOperationDelegate(this.OnEndAjouterLentilleClientRefreshList);
            }
            if ((this.onAjouterLentilleClientRefreshListCompletedDelegate == null)) {
                this.onAjouterLentilleClientRefreshListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterLentilleClientRefreshListCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterLentilleClientRefreshListDelegate, new object[] {
                        cle}, this.onEndAjouterLentilleClientRefreshListDelegate, this.onAjouterLentilleClientRefreshListCompletedDelegate, userState);
        }
        
        public void AjouterProdflistRefresh(System.Collections.Generic.List<int> listproduit) {
            base.Channel.AjouterProdflistRefresh(listproduit);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterProdflistRefresh(System.Collections.Generic.List<int> listproduit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterProdflistRefresh(listproduit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterProdflistRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterProdflistRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterProdflistRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<int> listproduit = ((System.Collections.Generic.List<int>)(inValues[0]));
            return this.BeginAjouterProdflistRefresh(listproduit, callback, asyncState);
        }
        
        private object[] OnEndAjouterProdflistRefresh(System.IAsyncResult result) {
            this.EndAjouterProdflistRefresh(result);
            return null;
        }
        
        private void OnAjouterProdflistRefreshCompleted(object state) {
            if ((this.AjouterProdflistRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterProdflistRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterProdflistRefreshAsync(System.Collections.Generic.List<int> listproduit) {
            this.AjouterProdflistRefreshAsync(listproduit, null);
        }
        
        public void AjouterProdflistRefreshAsync(System.Collections.Generic.List<int> listproduit, object userState) {
            if ((this.onBeginAjouterProdflistRefreshDelegate == null)) {
                this.onBeginAjouterProdflistRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterProdflistRefresh);
            }
            if ((this.onEndAjouterProdflistRefreshDelegate == null)) {
                this.onEndAjouterProdflistRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterProdflistRefresh);
            }
            if ((this.onAjouterProdflistRefreshCompletedDelegate == null)) {
                this.onAjouterProdflistRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterProdflistRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterProdflistRefreshDelegate, new object[] {
                        listproduit}, this.onEndAjouterProdflistRefreshDelegate, this.onAjouterProdflistRefreshCompletedDelegate, userState);
        }
        
        public void AjouterTcabRefresh(string cle) {
            base.Channel.AjouterTcabRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterTcabRefresh(string cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterTcabRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterTcabRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterTcabRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterTcabRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cle = ((string)(inValues[0]));
            return this.BeginAjouterTcabRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterTcabRefresh(System.IAsyncResult result) {
            this.EndAjouterTcabRefresh(result);
            return null;
        }
        
        private void OnAjouterTcabRefreshCompleted(object state) {
            if ((this.AjouterTcabRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterTcabRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterTcabRefreshAsync(string cle) {
            this.AjouterTcabRefreshAsync(cle, null);
        }
        
        public void AjouterTcabRefreshAsync(string cle, object userState) {
            if ((this.onBeginAjouterTcabRefreshDelegate == null)) {
                this.onBeginAjouterTcabRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterTcabRefresh);
            }
            if ((this.onEndAjouterTcabRefreshDelegate == null)) {
                this.onEndAjouterTcabRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterTcabRefresh);
            }
            if ((this.onAjouterTcabRefreshCompletedDelegate == null)) {
                this.onAjouterTcabRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterTcabRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterTcabRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterTcabRefreshDelegate, this.onAjouterTcabRefreshCompletedDelegate, userState);
        }
        
        public void AjouterVerreRefresh() {
            base.Channel.AjouterVerreRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterVerreRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterVerreRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterVerreRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterVerreRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterVerreRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterVerreRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterVerreRefresh(System.IAsyncResult result) {
            this.EndAjouterVerreRefresh(result);
            return null;
        }
        
        private void OnAjouterVerreRefreshCompleted(object state) {
            if ((this.AjouterVerreRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterVerreRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterVerreRefreshAsync() {
            this.AjouterVerreRefreshAsync(null);
        }
        
        public void AjouterVerreRefreshAsync(object userState) {
            if ((this.onBeginAjouterVerreRefreshDelegate == null)) {
                this.onBeginAjouterVerreRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterVerreRefresh);
            }
            if ((this.onEndAjouterVerreRefreshDelegate == null)) {
                this.onEndAjouterVerreRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterVerreRefresh);
            }
            if ((this.onAjouterVerreRefreshCompletedDelegate == null)) {
                this.onAjouterVerreRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterVerreRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterVerreRefreshDelegate, null, this.onEndAjouterVerreRefreshDelegate, this.onAjouterVerreRefreshCompletedDelegate, userState);
        }
        
        public void AjouterIncompatibiliteRefresh(int cle) {
            base.Channel.AjouterIncompatibiliteRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterIncompatibiliteRefresh(int cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterIncompatibiliteRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterIncompatibiliteRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterIncompatibiliteRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterIncompatibiliteRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            return this.BeginAjouterIncompatibiliteRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterIncompatibiliteRefresh(System.IAsyncResult result) {
            this.EndAjouterIncompatibiliteRefresh(result);
            return null;
        }
        
        private void OnAjouterIncompatibiliteRefreshCompleted(object state) {
            if ((this.AjouterIncompatibiliteRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterIncompatibiliteRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterIncompatibiliteRefreshAsync(int cle) {
            this.AjouterIncompatibiliteRefreshAsync(cle, null);
        }
        
        public void AjouterIncompatibiliteRefreshAsync(int cle, object userState) {
            if ((this.onBeginAjouterIncompatibiliteRefreshDelegate == null)) {
                this.onBeginAjouterIncompatibiliteRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterIncompatibiliteRefresh);
            }
            if ((this.onEndAjouterIncompatibiliteRefreshDelegate == null)) {
                this.onEndAjouterIncompatibiliteRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterIncompatibiliteRefresh);
            }
            if ((this.onAjouterIncompatibiliteRefreshCompletedDelegate == null)) {
                this.onAjouterIncompatibiliteRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterIncompatibiliteRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterIncompatibiliteRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterIncompatibiliteRefreshDelegate, this.onAjouterIncompatibiliteRefreshCompletedDelegate, userState);
        }
        
        public void AjouterVerreAssocieRefresh(int cle) {
            base.Channel.AjouterVerreAssocieRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterVerreAssocieRefresh(int cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterVerreAssocieRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterVerreAssocieRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterVerreAssocieRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterVerreAssocieRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cle = ((int)(inValues[0]));
            return this.BeginAjouterVerreAssocieRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterVerreAssocieRefresh(System.IAsyncResult result) {
            this.EndAjouterVerreAssocieRefresh(result);
            return null;
        }
        
        private void OnAjouterVerreAssocieRefreshCompleted(object state) {
            if ((this.AjouterVerreAssocieRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterVerreAssocieRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterVerreAssocieRefreshAsync(int cle) {
            this.AjouterVerreAssocieRefreshAsync(cle, null);
        }
        
        public void AjouterVerreAssocieRefreshAsync(int cle, object userState) {
            if ((this.onBeginAjouterVerreAssocieRefreshDelegate == null)) {
                this.onBeginAjouterVerreAssocieRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterVerreAssocieRefresh);
            }
            if ((this.onEndAjouterVerreAssocieRefreshDelegate == null)) {
                this.onEndAjouterVerreAssocieRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterVerreAssocieRefresh);
            }
            if ((this.onAjouterVerreAssocieRefreshCompletedDelegate == null)) {
                this.onAjouterVerreAssocieRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterVerreAssocieRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterVerreAssocieRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterVerreAssocieRefreshDelegate, this.onAjouterVerreAssocieRefreshCompletedDelegate, userState);
        }
        
        public void AjouterSupplementRefresh() {
            base.Channel.AjouterSupplementRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterSupplementRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterSupplementRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterSupplementRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterSupplementRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterSupplementRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterSupplementRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterSupplementRefresh(System.IAsyncResult result) {
            this.EndAjouterSupplementRefresh(result);
            return null;
        }
        
        private void OnAjouterSupplementRefreshCompleted(object state) {
            if ((this.AjouterSupplementRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterSupplementRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterSupplementRefreshAsync() {
            this.AjouterSupplementRefreshAsync(null);
        }
        
        public void AjouterSupplementRefreshAsync(object userState) {
            if ((this.onBeginAjouterSupplementRefreshDelegate == null)) {
                this.onBeginAjouterSupplementRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterSupplementRefresh);
            }
            if ((this.onEndAjouterSupplementRefreshDelegate == null)) {
                this.onEndAjouterSupplementRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterSupplementRefresh);
            }
            if ((this.onAjouterSupplementRefreshCompletedDelegate == null)) {
                this.onAjouterSupplementRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterSupplementRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterSupplementRefreshDelegate, null, this.onEndAjouterSupplementRefreshDelegate, this.onAjouterSupplementRefreshCompletedDelegate, userState);
        }
        
        public void AjouterLentilleRefresh() {
            base.Channel.AjouterLentilleRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterLentilleRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterLentilleRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterLentilleRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterLentilleRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterLentilleRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterLentilleRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterLentilleRefresh(System.IAsyncResult result) {
            this.EndAjouterLentilleRefresh(result);
            return null;
        }
        
        private void OnAjouterLentilleRefreshCompleted(object state) {
            if ((this.AjouterLentilleRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterLentilleRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterLentilleRefreshAsync() {
            this.AjouterLentilleRefreshAsync(null);
        }
        
        public void AjouterLentilleRefreshAsync(object userState) {
            if ((this.onBeginAjouterLentilleRefreshDelegate == null)) {
                this.onBeginAjouterLentilleRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterLentilleRefresh);
            }
            if ((this.onEndAjouterLentilleRefreshDelegate == null)) {
                this.onEndAjouterLentilleRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterLentilleRefresh);
            }
            if ((this.onAjouterLentilleRefreshCompletedDelegate == null)) {
                this.onAjouterLentilleRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterLentilleRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterLentilleRefreshDelegate, null, this.onEndAjouterLentilleRefreshDelegate, this.onAjouterLentilleRefreshCompletedDelegate, userState);
        }
        
        public void AjouterTarifVerreRefresh(string cle) {
            base.Channel.AjouterTarifVerreRefresh(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterTarifVerreRefresh(string cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterTarifVerreRefresh(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterTarifVerreRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterTarifVerreRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterTarifVerreRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cle = ((string)(inValues[0]));
            return this.BeginAjouterTarifVerreRefresh(cle, callback, asyncState);
        }
        
        private object[] OnEndAjouterTarifVerreRefresh(System.IAsyncResult result) {
            this.EndAjouterTarifVerreRefresh(result);
            return null;
        }
        
        private void OnAjouterTarifVerreRefreshCompleted(object state) {
            if ((this.AjouterTarifVerreRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterTarifVerreRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterTarifVerreRefreshAsync(string cle) {
            this.AjouterTarifVerreRefreshAsync(cle, null);
        }
        
        public void AjouterTarifVerreRefreshAsync(string cle, object userState) {
            if ((this.onBeginAjouterTarifVerreRefreshDelegate == null)) {
                this.onBeginAjouterTarifVerreRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterTarifVerreRefresh);
            }
            if ((this.onEndAjouterTarifVerreRefreshDelegate == null)) {
                this.onEndAjouterTarifVerreRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterTarifVerreRefresh);
            }
            if ((this.onAjouterTarifVerreRefreshCompletedDelegate == null)) {
                this.onAjouterTarifVerreRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterTarifVerreRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterTarifVerreRefreshDelegate, new object[] {
                        cle}, this.onEndAjouterTarifVerreRefreshDelegate, this.onAjouterTarifVerreRefreshCompletedDelegate, userState);
        }
        
        public void AjouterFactureRefresh() {
            base.Channel.AjouterFactureRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterFactureRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterFactureRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterFactureRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterFactureRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterFactureRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterFactureRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterFactureRefresh(System.IAsyncResult result) {
            this.EndAjouterFactureRefresh(result);
            return null;
        }
        
        private void OnAjouterFactureRefreshCompleted(object state) {
            if ((this.AjouterFactureRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterFactureRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterFactureRefreshAsync() {
            this.AjouterFactureRefreshAsync(null);
        }
        
        public void AjouterFactureRefreshAsync(object userState) {
            if ((this.onBeginAjouterFactureRefreshDelegate == null)) {
                this.onBeginAjouterFactureRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterFactureRefresh);
            }
            if ((this.onEndAjouterFactureRefreshDelegate == null)) {
                this.onEndAjouterFactureRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterFactureRefresh);
            }
            if ((this.onAjouterFactureRefreshCompletedDelegate == null)) {
                this.onAjouterFactureRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterFactureRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterFactureRefreshDelegate, null, this.onEndAjouterFactureRefreshDelegate, this.onAjouterFactureRefreshCompletedDelegate, userState);
        }
        
        public void AjouterSoldeF1Refresh() {
            base.Channel.AjouterSoldeF1Refresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterSoldeF1Refresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterSoldeF1Refresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterSoldeF1Refresh(System.IAsyncResult result) {
            base.Channel.EndAjouterSoldeF1Refresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterSoldeF1Refresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterSoldeF1Refresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterSoldeF1Refresh(System.IAsyncResult result) {
            this.EndAjouterSoldeF1Refresh(result);
            return null;
        }
        
        private void OnAjouterSoldeF1RefreshCompleted(object state) {
            if ((this.AjouterSoldeF1RefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterSoldeF1RefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterSoldeF1RefreshAsync() {
            this.AjouterSoldeF1RefreshAsync(null);
        }
        
        public void AjouterSoldeF1RefreshAsync(object userState) {
            if ((this.onBeginAjouterSoldeF1RefreshDelegate == null)) {
                this.onBeginAjouterSoldeF1RefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterSoldeF1Refresh);
            }
            if ((this.onEndAjouterSoldeF1RefreshDelegate == null)) {
                this.onEndAjouterSoldeF1RefreshDelegate = new EndOperationDelegate(this.OnEndAjouterSoldeF1Refresh);
            }
            if ((this.onAjouterSoldeF1RefreshCompletedDelegate == null)) {
                this.onAjouterSoldeF1RefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterSoldeF1RefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterSoldeF1RefreshDelegate, null, this.onEndAjouterSoldeF1RefreshDelegate, this.onAjouterSoldeF1RefreshCompletedDelegate, userState);
        }
        
        public void AjouterSoldeF1MultipleRefresh(string nfact, int code) {
            base.Channel.AjouterSoldeF1MultipleRefresh(nfact, code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterSoldeF1MultipleRefresh(string nfact, int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterSoldeF1MultipleRefresh(nfact, code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterSoldeF1MultipleRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterSoldeF1MultipleRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterSoldeF1MultipleRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nfact = ((string)(inValues[0]));
            int code = ((int)(inValues[1]));
            return this.BeginAjouterSoldeF1MultipleRefresh(nfact, code, callback, asyncState);
        }
        
        private object[] OnEndAjouterSoldeF1MultipleRefresh(System.IAsyncResult result) {
            this.EndAjouterSoldeF1MultipleRefresh(result);
            return null;
        }
        
        private void OnAjouterSoldeF1MultipleRefreshCompleted(object state) {
            if ((this.AjouterSoldeF1MultipleRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterSoldeF1MultipleRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterSoldeF1MultipleRefreshAsync(string nfact, int code) {
            this.AjouterSoldeF1MultipleRefreshAsync(nfact, code, null);
        }
        
        public void AjouterSoldeF1MultipleRefreshAsync(string nfact, int code, object userState) {
            if ((this.onBeginAjouterSoldeF1MultipleRefreshDelegate == null)) {
                this.onBeginAjouterSoldeF1MultipleRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterSoldeF1MultipleRefresh);
            }
            if ((this.onEndAjouterSoldeF1MultipleRefreshDelegate == null)) {
                this.onEndAjouterSoldeF1MultipleRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterSoldeF1MultipleRefresh);
            }
            if ((this.onAjouterSoldeF1MultipleRefreshCompletedDelegate == null)) {
                this.onAjouterSoldeF1MultipleRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterSoldeF1MultipleRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterSoldeF1MultipleRefreshDelegate, new object[] {
                        nfact,
                        code}, this.onEndAjouterSoldeF1MultipleRefreshDelegate, this.onAjouterSoldeF1MultipleRefreshCompletedDelegate, userState);
        }
        
        public void AjouterListeF1Refresh(int i) {
            base.Channel.AjouterListeF1Refresh(i);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterListeF1Refresh(int i, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterListeF1Refresh(i, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterListeF1Refresh(System.IAsyncResult result) {
            base.Channel.EndAjouterListeF1Refresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterListeF1Refresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int i = ((int)(inValues[0]));
            return this.BeginAjouterListeF1Refresh(i, callback, asyncState);
        }
        
        private object[] OnEndAjouterListeF1Refresh(System.IAsyncResult result) {
            this.EndAjouterListeF1Refresh(result);
            return null;
        }
        
        private void OnAjouterListeF1RefreshCompleted(object state) {
            if ((this.AjouterListeF1RefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterListeF1RefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterListeF1RefreshAsync(int i) {
            this.AjouterListeF1RefreshAsync(i, null);
        }
        
        public void AjouterListeF1RefreshAsync(int i, object userState) {
            if ((this.onBeginAjouterListeF1RefreshDelegate == null)) {
                this.onBeginAjouterListeF1RefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterListeF1Refresh);
            }
            if ((this.onEndAjouterListeF1RefreshDelegate == null)) {
                this.onEndAjouterListeF1RefreshDelegate = new EndOperationDelegate(this.OnEndAjouterListeF1Refresh);
            }
            if ((this.onAjouterListeF1RefreshCompletedDelegate == null)) {
                this.onAjouterListeF1RefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterListeF1RefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterListeF1RefreshDelegate, new object[] {
                        i}, this.onEndAjouterListeF1RefreshDelegate, this.onAjouterListeF1RefreshCompletedDelegate, userState);
        }
        
        public void AjouterListeRecoufRefresh(int i) {
            base.Channel.AjouterListeRecoufRefresh(i);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterListeRecoufRefresh(int i, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterListeRecoufRefresh(i, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterListeRecoufRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterListeRecoufRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterListeRecoufRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int i = ((int)(inValues[0]));
            return this.BeginAjouterListeRecoufRefresh(i, callback, asyncState);
        }
        
        private object[] OnEndAjouterListeRecoufRefresh(System.IAsyncResult result) {
            this.EndAjouterListeRecoufRefresh(result);
            return null;
        }
        
        private void OnAjouterListeRecoufRefreshCompleted(object state) {
            if ((this.AjouterListeRecoufRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterListeRecoufRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterListeRecoufRefreshAsync(int i) {
            this.AjouterListeRecoufRefreshAsync(i, null);
        }
        
        public void AjouterListeRecoufRefreshAsync(int i, object userState) {
            if ((this.onBeginAjouterListeRecoufRefreshDelegate == null)) {
                this.onBeginAjouterListeRecoufRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterListeRecoufRefresh);
            }
            if ((this.onEndAjouterListeRecoufRefreshDelegate == null)) {
                this.onEndAjouterListeRecoufRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterListeRecoufRefresh);
            }
            if ((this.onAjouterListeRecoufRefreshCompletedDelegate == null)) {
                this.onAjouterListeRecoufRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterListeRecoufRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterListeRecoufRefreshDelegate, new object[] {
                        i}, this.onEndAjouterListeRecoufRefreshDelegate, this.onAjouterListeRecoufRefreshCompletedDelegate, userState);
        }
        
        public void AjouterDepenseRefresh() {
            base.Channel.AjouterDepenseRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterDepenseRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterDepenseRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterDepenseRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterDepenseRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterDepenseRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterDepenseRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterDepenseRefresh(System.IAsyncResult result) {
            this.EndAjouterDepenseRefresh(result);
            return null;
        }
        
        private void OnAjouterDepenseRefreshCompleted(object state) {
            if ((this.AjouterDepenseRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterDepenseRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterDepenseRefreshAsync() {
            this.AjouterDepenseRefreshAsync(null);
        }
        
        public void AjouterDepenseRefreshAsync(object userState) {
            if ((this.onBeginAjouterDepenseRefreshDelegate == null)) {
                this.onBeginAjouterDepenseRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterDepenseRefresh);
            }
            if ((this.onEndAjouterDepenseRefreshDelegate == null)) {
                this.onEndAjouterDepenseRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterDepenseRefresh);
            }
            if ((this.onAjouterDepenseRefreshCompletedDelegate == null)) {
                this.onAjouterDepenseRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterDepenseRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterDepenseRefreshDelegate, null, this.onEndAjouterDepenseRefreshDelegate, this.onAjouterDepenseRefreshCompletedDelegate, userState);
        }
        
        public void AjouterClientVRefresh() {
            base.Channel.AjouterClientVRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterClientVRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterClientVRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterClientVRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterClientVRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterClientVRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterClientVRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterClientVRefresh(System.IAsyncResult result) {
            this.EndAjouterClientVRefresh(result);
            return null;
        }
        
        private void OnAjouterClientVRefreshCompleted(object state) {
            if ((this.AjouterClientVRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterClientVRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterClientVRefreshAsync() {
            this.AjouterClientVRefreshAsync(null);
        }
        
        public void AjouterClientVRefreshAsync(object userState) {
            if ((this.onBeginAjouterClientVRefreshDelegate == null)) {
                this.onBeginAjouterClientVRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterClientVRefresh);
            }
            if ((this.onEndAjouterClientVRefreshDelegate == null)) {
                this.onEndAjouterClientVRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterClientVRefresh);
            }
            if ((this.onAjouterClientVRefreshCompletedDelegate == null)) {
                this.onAjouterClientVRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterClientVRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterClientVRefreshDelegate, null, this.onEndAjouterClientVRefreshDelegate, this.onAjouterClientVRefreshCompletedDelegate, userState);
        }
        
        public void AjouterTransactionACHATRefresh() {
            base.Channel.AjouterTransactionACHATRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterTransactionACHATRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterTransactionACHATRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterTransactionACHATRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterTransactionACHATRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterTransactionACHATRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterTransactionACHATRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterTransactionACHATRefresh(System.IAsyncResult result) {
            this.EndAjouterTransactionACHATRefresh(result);
            return null;
        }
        
        private void OnAjouterTransactionACHATRefreshCompleted(object state) {
            if ((this.AjouterTransactionACHATRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterTransactionACHATRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterTransactionACHATRefreshAsync() {
            this.AjouterTransactionACHATRefreshAsync(null);
        }
        
        public void AjouterTransactionACHATRefreshAsync(object userState) {
            if ((this.onBeginAjouterTransactionACHATRefreshDelegate == null)) {
                this.onBeginAjouterTransactionACHATRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterTransactionACHATRefresh);
            }
            if ((this.onEndAjouterTransactionACHATRefreshDelegate == null)) {
                this.onEndAjouterTransactionACHATRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterTransactionACHATRefresh);
            }
            if ((this.onAjouterTransactionACHATRefreshCompletedDelegate == null)) {
                this.onAjouterTransactionACHATRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterTransactionACHATRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterTransactionACHATRefreshDelegate, null, this.onEndAjouterTransactionACHATRefreshDelegate, this.onAjouterTransactionACHATRefreshCompletedDelegate, userState);
        }
        
        public void AjouterTransactionPaiementRefresh() {
            base.Channel.AjouterTransactionPaiementRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterTransactionPaiementRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterTransactionPaiementRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterTransactionPaiementRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterTransactionPaiementRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterTransactionPaiementRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterTransactionPaiementRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterTransactionPaiementRefresh(System.IAsyncResult result) {
            this.EndAjouterTransactionPaiementRefresh(result);
            return null;
        }
        
        private void OnAjouterTransactionPaiementRefreshCompleted(object state) {
            if ((this.AjouterTransactionPaiementRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterTransactionPaiementRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterTransactionPaiementRefreshAsync() {
            this.AjouterTransactionPaiementRefreshAsync(null);
        }
        
        public void AjouterTransactionPaiementRefreshAsync(object userState) {
            if ((this.onBeginAjouterTransactionPaiementRefreshDelegate == null)) {
                this.onBeginAjouterTransactionPaiementRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterTransactionPaiementRefresh);
            }
            if ((this.onEndAjouterTransactionPaiementRefreshDelegate == null)) {
                this.onEndAjouterTransactionPaiementRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterTransactionPaiementRefresh);
            }
            if ((this.onAjouterTransactionPaiementRefreshCompletedDelegate == null)) {
                this.onAjouterTransactionPaiementRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterTransactionPaiementRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterTransactionPaiementRefreshDelegate, null, this.onEndAjouterTransactionPaiementRefreshDelegate, this.onAjouterTransactionPaiementRefreshCompletedDelegate, userState);
        }
        
        public void AjouterAmsRefresh() {
            base.Channel.AjouterAmsRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterAmsRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterAmsRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterAmsRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterAmsRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterAmsRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterAmsRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterAmsRefresh(System.IAsyncResult result) {
            this.EndAjouterAmsRefresh(result);
            return null;
        }
        
        private void OnAjouterAmsRefreshCompleted(object state) {
            if ((this.AjouterAmsRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterAmsRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterAmsRefreshAsync() {
            this.AjouterAmsRefreshAsync(null);
        }
        
        public void AjouterAmsRefreshAsync(object userState) {
            if ((this.onBeginAjouterAmsRefreshDelegate == null)) {
                this.onBeginAjouterAmsRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterAmsRefresh);
            }
            if ((this.onEndAjouterAmsRefreshDelegate == null)) {
                this.onEndAjouterAmsRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterAmsRefresh);
            }
            if ((this.onAjouterAmsRefreshCompletedDelegate == null)) {
                this.onAjouterAmsRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterAmsRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterAmsRefreshDelegate, null, this.onEndAjouterAmsRefreshDelegate, this.onAjouterAmsRefreshCompletedDelegate, userState);
        }
        
        public void AjouterMotifTableRefresh() {
            base.Channel.AjouterMotifTableRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterMotifTableRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterMotifTableRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterMotifTableRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterMotifTableRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterMotifTableRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterMotifTableRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterMotifTableRefresh(System.IAsyncResult result) {
            this.EndAjouterMotifTableRefresh(result);
            return null;
        }
        
        private void OnAjouterMotifTableRefreshCompleted(object state) {
            if ((this.AjouterMotifTableRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterMotifTableRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterMotifTableRefreshAsync() {
            this.AjouterMotifTableRefreshAsync(null);
        }
        
        public void AjouterMotifTableRefreshAsync(object userState) {
            if ((this.onBeginAjouterMotifTableRefreshDelegate == null)) {
                this.onBeginAjouterMotifTableRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterMotifTableRefresh);
            }
            if ((this.onEndAjouterMotifTableRefreshDelegate == null)) {
                this.onEndAjouterMotifTableRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterMotifTableRefresh);
            }
            if ((this.onAjouterMotifTableRefreshCompletedDelegate == null)) {
                this.onAjouterMotifTableRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterMotifTableRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterMotifTableRefreshDelegate, null, this.onEndAjouterMotifTableRefreshDelegate, this.onAjouterMotifTableRefreshCompletedDelegate, userState);
        }
        
        public void AjouterStatuRefresh() {
            base.Channel.AjouterStatuRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterStatuRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterStatuRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterStatuRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterStatuRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterStatuRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterStatuRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterStatuRefresh(System.IAsyncResult result) {
            this.EndAjouterStatuRefresh(result);
            return null;
        }
        
        private void OnAjouterStatuRefreshCompleted(object state) {
            if ((this.AjouterStatuRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterStatuRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterStatuRefreshAsync() {
            this.AjouterStatuRefreshAsync(null);
        }
        
        public void AjouterStatuRefreshAsync(object userState) {
            if ((this.onBeginAjouterStatuRefreshDelegate == null)) {
                this.onBeginAjouterStatuRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterStatuRefresh);
            }
            if ((this.onEndAjouterStatuRefreshDelegate == null)) {
                this.onEndAjouterStatuRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterStatuRefresh);
            }
            if ((this.onAjouterStatuRefreshCompletedDelegate == null)) {
                this.onAjouterStatuRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterStatuRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterStatuRefreshDelegate, null, this.onEndAjouterStatuRefreshDelegate, this.onAjouterStatuRefreshCompletedDelegate, userState);
        }
        
        public void AjouterFamilleProduitRefresh() {
            base.Channel.AjouterFamilleProduitRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterFamilleProduitRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterFamilleProduitRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterFamilleProduitRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterFamilleProduitRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterFamilleProduitRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterFamilleProduitRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterFamilleProduitRefresh(System.IAsyncResult result) {
            this.EndAjouterFamilleProduitRefresh(result);
            return null;
        }
        
        private void OnAjouterFamilleProduitRefreshCompleted(object state) {
            if ((this.AjouterFamilleProduitRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterFamilleProduitRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterFamilleProduitRefreshAsync() {
            this.AjouterFamilleProduitRefreshAsync(null);
        }
        
        public void AjouterFamilleProduitRefreshAsync(object userState) {
            if ((this.onBeginAjouterFamilleProduitRefreshDelegate == null)) {
                this.onBeginAjouterFamilleProduitRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterFamilleProduitRefresh);
            }
            if ((this.onEndAjouterFamilleProduitRefreshDelegate == null)) {
                this.onEndAjouterFamilleProduitRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterFamilleProduitRefresh);
            }
            if ((this.onAjouterFamilleProduitRefreshCompletedDelegate == null)) {
                this.onAjouterFamilleProduitRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterFamilleProduitRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterFamilleProduitRefreshDelegate, null, this.onEndAjouterFamilleProduitRefreshDelegate, this.onAjouterFamilleProduitRefreshCompletedDelegate, userState);
        }
        
        public void AjouterCatSuppRefresh() {
            base.Channel.AjouterCatSuppRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterCatSuppRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterCatSuppRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterCatSuppRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterCatSuppRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterCatSuppRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterCatSuppRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterCatSuppRefresh(System.IAsyncResult result) {
            this.EndAjouterCatSuppRefresh(result);
            return null;
        }
        
        private void OnAjouterCatSuppRefreshCompleted(object state) {
            if ((this.AjouterCatSuppRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterCatSuppRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterCatSuppRefreshAsync() {
            this.AjouterCatSuppRefreshAsync(null);
        }
        
        public void AjouterCatSuppRefreshAsync(object userState) {
            if ((this.onBeginAjouterCatSuppRefreshDelegate == null)) {
                this.onBeginAjouterCatSuppRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterCatSuppRefresh);
            }
            if ((this.onEndAjouterCatSuppRefreshDelegate == null)) {
                this.onEndAjouterCatSuppRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterCatSuppRefresh);
            }
            if ((this.onAjouterCatSuppRefreshCompletedDelegate == null)) {
                this.onAjouterCatSuppRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterCatSuppRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterCatSuppRefreshDelegate, null, this.onEndAjouterCatSuppRefreshDelegate, this.onAjouterCatSuppRefreshCompletedDelegate, userState);
        }
        
        public void AjouterMarqueRefresh() {
            base.Channel.AjouterMarqueRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterMarqueRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterMarqueRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterMarqueRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterMarqueRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterMarqueRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterMarqueRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterMarqueRefresh(System.IAsyncResult result) {
            this.EndAjouterMarqueRefresh(result);
            return null;
        }
        
        private void OnAjouterMarqueRefreshCompleted(object state) {
            if ((this.AjouterMarqueRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterMarqueRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterMarqueRefreshAsync() {
            this.AjouterMarqueRefreshAsync(null);
        }
        
        public void AjouterMarqueRefreshAsync(object userState) {
            if ((this.onBeginAjouterMarqueRefreshDelegate == null)) {
                this.onBeginAjouterMarqueRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterMarqueRefresh);
            }
            if ((this.onEndAjouterMarqueRefreshDelegate == null)) {
                this.onEndAjouterMarqueRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterMarqueRefresh);
            }
            if ((this.onAjouterMarqueRefreshCompletedDelegate == null)) {
                this.onAjouterMarqueRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterMarqueRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterMarqueRefreshDelegate, null, this.onEndAjouterMarqueRefreshDelegate, this.onAjouterMarqueRefreshCompletedDelegate, userState);
        }
        
        public void AjouterProduitStockRefresh() {
            base.Channel.AjouterProduitStockRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterProduitStockRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterProduitStockRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterProduitStockRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterProduitStockRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterProduitStockRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterProduitStockRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterProduitStockRefresh(System.IAsyncResult result) {
            this.EndAjouterProduitStockRefresh(result);
            return null;
        }
        
        private void OnAjouterProduitStockRefreshCompleted(object state) {
            if ((this.AjouterProduitStockRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterProduitStockRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterProduitStockRefreshAsync() {
            this.AjouterProduitStockRefreshAsync(null);
        }
        
        public void AjouterProduitStockRefreshAsync(object userState) {
            if ((this.onBeginAjouterProduitStockRefreshDelegate == null)) {
                this.onBeginAjouterProduitStockRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterProduitStockRefresh);
            }
            if ((this.onEndAjouterProduitStockRefreshDelegate == null)) {
                this.onEndAjouterProduitStockRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterProduitStockRefresh);
            }
            if ((this.onAjouterProduitStockRefreshCompletedDelegate == null)) {
                this.onAjouterProduitStockRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterProduitStockRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterProduitStockRefreshDelegate, null, this.onEndAjouterProduitStockRefreshDelegate, this.onAjouterProduitStockRefreshCompletedDelegate, userState);
        }
        
        public void AjouterProdfReceptRefresh(string Fournisseur, string nfact, int codef) {
            base.Channel.AjouterProdfReceptRefresh(Fournisseur, nfact, codef);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterProdfReceptRefresh(string Fournisseur, string nfact, int codef, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterProdfReceptRefresh(Fournisseur, nfact, codef, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterProdfReceptRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterProdfReceptRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterProdfReceptRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Fournisseur = ((string)(inValues[0]));
            string nfact = ((string)(inValues[1]));
            int codef = ((int)(inValues[2]));
            return this.BeginAjouterProdfReceptRefresh(Fournisseur, nfact, codef, callback, asyncState);
        }
        
        private object[] OnEndAjouterProdfReceptRefresh(System.IAsyncResult result) {
            this.EndAjouterProdfReceptRefresh(result);
            return null;
        }
        
        private void OnAjouterProdfReceptRefreshCompleted(object state) {
            if ((this.AjouterProdfReceptRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterProdfReceptRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterProdfReceptRefreshAsync(string Fournisseur, string nfact, int codef) {
            this.AjouterProdfReceptRefreshAsync(Fournisseur, nfact, codef, null);
        }
        
        public void AjouterProdfReceptRefreshAsync(string Fournisseur, string nfact, int codef, object userState) {
            if ((this.onBeginAjouterProdfReceptRefreshDelegate == null)) {
                this.onBeginAjouterProdfReceptRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterProdfReceptRefresh);
            }
            if ((this.onEndAjouterProdfReceptRefreshDelegate == null)) {
                this.onEndAjouterProdfReceptRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterProdfReceptRefresh);
            }
            if ((this.onAjouterProdfReceptRefreshCompletedDelegate == null)) {
                this.onAjouterProdfReceptRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterProdfReceptRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterProdfReceptRefreshDelegate, new object[] {
                        Fournisseur,
                        nfact,
                        codef}, this.onEndAjouterProdfReceptRefreshDelegate, this.onAjouterProdfReceptRefreshCompletedDelegate, userState);
        }
        
        public void AjouterRecoufRefresh() {
            base.Channel.AjouterRecoufRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterRecoufRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterRecoufRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterRecoufRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterRecoufRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterRecoufRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterRecoufRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterRecoufRefresh(System.IAsyncResult result) {
            this.EndAjouterRecoufRefresh(result);
            return null;
        }
        
        private void OnAjouterRecoufRefreshCompleted(object state) {
            if ((this.AjouterRecoufRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterRecoufRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterRecoufRefreshAsync() {
            this.AjouterRecoufRefreshAsync(null);
        }
        
        public void AjouterRecoufRefreshAsync(object userState) {
            if ((this.onBeginAjouterRecoufRefreshDelegate == null)) {
                this.onBeginAjouterRecoufRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterRecoufRefresh);
            }
            if ((this.onEndAjouterRecoufRefreshDelegate == null)) {
                this.onEndAjouterRecoufRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterRecoufRefresh);
            }
            if ((this.onAjouterRecoufRefreshCompletedDelegate == null)) {
                this.onAjouterRecoufRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterRecoufRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterRecoufRefreshDelegate, null, this.onEndAjouterRecoufRefreshDelegate, this.onAjouterRecoufRefreshCompletedDelegate, userState);
        }
        
        public void AjouterCommandeRefresh() {
            base.Channel.AjouterCommandeRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterCommandeRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterCommandeRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterCommandeRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterCommandeRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterCommandeRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterCommandeRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterCommandeRefresh(System.IAsyncResult result) {
            this.EndAjouterCommandeRefresh(result);
            return null;
        }
        
        private void OnAjouterCommandeRefreshCompleted(object state) {
            if ((this.AjouterCommandeRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterCommandeRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterCommandeRefreshAsync() {
            this.AjouterCommandeRefreshAsync(null);
        }
        
        public void AjouterCommandeRefreshAsync(object userState) {
            if ((this.onBeginAjouterCommandeRefreshDelegate == null)) {
                this.onBeginAjouterCommandeRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterCommandeRefresh);
            }
            if ((this.onEndAjouterCommandeRefreshDelegate == null)) {
                this.onEndAjouterCommandeRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterCommandeRefresh);
            }
            if ((this.onAjouterCommandeRefreshCompletedDelegate == null)) {
                this.onAjouterCommandeRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterCommandeRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterCommandeRefreshDelegate, null, this.onEndAjouterCommandeRefreshDelegate, this.onAjouterCommandeRefreshCompletedDelegate, userState);
        }
        
        public void AjouterProdfRefresh() {
            base.Channel.AjouterProdfRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterProdfRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterProdfRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterProdfRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterProdfRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterProdfRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterProdfRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterProdfRefresh(System.IAsyncResult result) {
            this.EndAjouterProdfRefresh(result);
            return null;
        }
        
        private void OnAjouterProdfRefreshCompleted(object state) {
            if ((this.AjouterProdfRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterProdfRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterProdfRefreshAsync() {
            this.AjouterProdfRefreshAsync(null);
        }
        
        public void AjouterProdfRefreshAsync(object userState) {
            if ((this.onBeginAjouterProdfRefreshDelegate == null)) {
                this.onBeginAjouterProdfRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterProdfRefresh);
            }
            if ((this.onEndAjouterProdfRefreshDelegate == null)) {
                this.onEndAjouterProdfRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterProdfRefresh);
            }
            if ((this.onAjouterProdfRefreshCompletedDelegate == null)) {
                this.onAjouterProdfRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterProdfRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterProdfRefreshDelegate, null, this.onEndAjouterProdfRefreshDelegate, this.onAjouterProdfRefreshCompletedDelegate, userState);
        }
        
        public void AjouterFactureAchatSansProdfRefresh(string vv) {
            base.Channel.AjouterFactureAchatSansProdfRefresh(vv);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterFactureAchatSansProdfRefresh(string vv, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterFactureAchatSansProdfRefresh(vv, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterFactureAchatSansProdfRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterFactureAchatSansProdfRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterFactureAchatSansProdfRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vv = ((string)(inValues[0]));
            return this.BeginAjouterFactureAchatSansProdfRefresh(vv, callback, asyncState);
        }
        
        private object[] OnEndAjouterFactureAchatSansProdfRefresh(System.IAsyncResult result) {
            this.EndAjouterFactureAchatSansProdfRefresh(result);
            return null;
        }
        
        private void OnAjouterFactureAchatSansProdfRefreshCompleted(object state) {
            if ((this.AjouterFactureAchatSansProdfRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterFactureAchatSansProdfRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterFactureAchatSansProdfRefreshAsync(string vv) {
            this.AjouterFactureAchatSansProdfRefreshAsync(vv, null);
        }
        
        public void AjouterFactureAchatSansProdfRefreshAsync(string vv, object userState) {
            if ((this.onBeginAjouterFactureAchatSansProdfRefreshDelegate == null)) {
                this.onBeginAjouterFactureAchatSansProdfRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterFactureAchatSansProdfRefresh);
            }
            if ((this.onEndAjouterFactureAchatSansProdfRefreshDelegate == null)) {
                this.onEndAjouterFactureAchatSansProdfRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterFactureAchatSansProdfRefresh);
            }
            if ((this.onAjouterFactureAchatSansProdfRefreshCompletedDelegate == null)) {
                this.onAjouterFactureAchatSansProdfRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterFactureAchatSansProdfRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterFactureAchatSansProdfRefreshDelegate, new object[] {
                        vv}, this.onEndAjouterFactureAchatSansProdfRefreshDelegate, this.onAjouterFactureAchatSansProdfRefreshCompletedDelegate, userState);
        }
        
        public void TestConnect(string clientTest) {
            base.Channel.TestConnect(clientTest);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTestConnect(string clientTest, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTestConnect(clientTest, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndTestConnect(System.IAsyncResult result) {
            base.Channel.EndTestConnect(result);
        }
        
        private System.IAsyncResult OnBeginTestConnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientTest = ((string)(inValues[0]));
            return this.BeginTestConnect(clientTest, callback, asyncState);
        }
        
        private object[] OnEndTestConnect(System.IAsyncResult result) {
            this.EndTestConnect(result);
            return null;
        }
        
        private void OnTestConnectCompleted(object state) {
            if ((this.TestConnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestConnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestConnectAsync(string clientTest) {
            this.TestConnectAsync(clientTest, null);
        }
        
        public void TestConnectAsync(string clientTest, object userState) {
            if ((this.onBeginTestConnectDelegate == null)) {
                this.onBeginTestConnectDelegate = new BeginOperationDelegate(this.OnBeginTestConnect);
            }
            if ((this.onEndTestConnectDelegate == null)) {
                this.onEndTestConnectDelegate = new EndOperationDelegate(this.OnEndTestConnect);
            }
            if ((this.onTestConnectCompletedDelegate == null)) {
                this.onTestConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestConnectCompleted);
            }
            base.InvokeAsync(this.onBeginTestConnectDelegate, new object[] {
                        clientTest}, this.onEndTestConnectDelegate, this.onTestConnectCompletedDelegate, userState);
        }
        
        public void UploadDocument(string fPath, byte[] data) {
            base.Channel.UploadDocument(fPath, data);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUploadDocument(string fPath, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadDocument(fPath, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUploadDocument(System.IAsyncResult result) {
            base.Channel.EndUploadDocument(result);
        }
        
        private System.IAsyncResult OnBeginUploadDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fPath = ((string)(inValues[0]));
            byte[] data = ((byte[])(inValues[1]));
            return this.BeginUploadDocument(fPath, data, callback, asyncState);
        }
        
        private object[] OnEndUploadDocument(System.IAsyncResult result) {
            this.EndUploadDocument(result);
            return null;
        }
        
        private void OnUploadDocumentCompleted(object state) {
            if ((this.UploadDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadDocumentAsync(string fPath, byte[] data) {
            this.UploadDocumentAsync(fPath, data, null);
        }
        
        public void UploadDocumentAsync(string fPath, byte[] data, object userState) {
            if ((this.onBeginUploadDocumentDelegate == null)) {
                this.onBeginUploadDocumentDelegate = new BeginOperationDelegate(this.OnBeginUploadDocument);
            }
            if ((this.onEndUploadDocumentDelegate == null)) {
                this.onEndUploadDocumentDelegate = new EndOperationDelegate(this.OnEndUploadDocument);
            }
            if ((this.onUploadDocumentCompletedDelegate == null)) {
                this.onUploadDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginUploadDocumentDelegate, new object[] {
                        fPath,
                        data}, this.onEndUploadDocumentDelegate, this.onUploadDocumentCompletedDelegate, userState);
        }
        
        public void AjouterFournRefresh() {
            base.Channel.AjouterFournRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterFournRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterFournRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterFournRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterFournRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterFournRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterFournRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterFournRefresh(System.IAsyncResult result) {
            this.EndAjouterFournRefresh(result);
            return null;
        }
        
        private void OnAjouterFournRefreshCompleted(object state) {
            if ((this.AjouterFournRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterFournRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterFournRefreshAsync() {
            this.AjouterFournRefreshAsync(null);
        }
        
        public void AjouterFournRefreshAsync(object userState) {
            if ((this.onBeginAjouterFournRefreshDelegate == null)) {
                this.onBeginAjouterFournRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterFournRefresh);
            }
            if ((this.onEndAjouterFournRefreshDelegate == null)) {
                this.onEndAjouterFournRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterFournRefresh);
            }
            if ((this.onAjouterFournRefreshCompletedDelegate == null)) {
                this.onAjouterFournRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterFournRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterFournRefreshDelegate, null, this.onEndAjouterFournRefreshDelegate, this.onAjouterFournRefreshCompletedDelegate, userState);
        }
        
        public byte[] DownloadDocument(string fPath) {
            return base.Channel.DownloadDocument(fPath);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDownloadDocument(string fPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadDocument(fPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndDownloadDocument(System.IAsyncResult result) {
            return base.Channel.EndDownloadDocument(result);
        }
        
        private System.IAsyncResult OnBeginDownloadDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fPath = ((string)(inValues[0]));
            return this.BeginDownloadDocument(fPath, callback, asyncState);
        }
        
        private object[] OnEndDownloadDocument(System.IAsyncResult result) {
            byte[] retVal = this.EndDownloadDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadDocumentCompleted(object state) {
            if ((this.DownloadDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadDocumentCompleted(this, new DownloadDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadDocumentAsync(string fPath) {
            this.DownloadDocumentAsync(fPath, null);
        }
        
        public void DownloadDocumentAsync(string fPath, object userState) {
            if ((this.onBeginDownloadDocumentDelegate == null)) {
                this.onBeginDownloadDocumentDelegate = new BeginOperationDelegate(this.OnBeginDownloadDocument);
            }
            if ((this.onEndDownloadDocumentDelegate == null)) {
                this.onEndDownloadDocumentDelegate = new EndOperationDelegate(this.OnEndDownloadDocument);
            }
            if ((this.onDownloadDocumentCompletedDelegate == null)) {
                this.onDownloadDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadDocumentDelegate, new object[] {
                        fPath}, this.onEndDownloadDocumentDelegate, this.onDownloadDocumentCompletedDelegate, userState);
        }
        
        public bool DownloadDocumentIsHere(string fPath) {
            return base.Channel.DownloadDocumentIsHere(fPath);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDownloadDocumentIsHere(string fPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadDocumentIsHere(fPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDownloadDocumentIsHere(System.IAsyncResult result) {
            return base.Channel.EndDownloadDocumentIsHere(result);
        }
        
        private System.IAsyncResult OnBeginDownloadDocumentIsHere(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fPath = ((string)(inValues[0]));
            return this.BeginDownloadDocumentIsHere(fPath, callback, asyncState);
        }
        
        private object[] OnEndDownloadDocumentIsHere(System.IAsyncResult result) {
            bool retVal = this.EndDownloadDocumentIsHere(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadDocumentIsHereCompleted(object state) {
            if ((this.DownloadDocumentIsHereCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadDocumentIsHereCompleted(this, new DownloadDocumentIsHereCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadDocumentIsHereAsync(string fPath) {
            this.DownloadDocumentIsHereAsync(fPath, null);
        }
        
        public void DownloadDocumentIsHereAsync(string fPath, object userState) {
            if ((this.onBeginDownloadDocumentIsHereDelegate == null)) {
                this.onBeginDownloadDocumentIsHereDelegate = new BeginOperationDelegate(this.OnBeginDownloadDocumentIsHere);
            }
            if ((this.onEndDownloadDocumentIsHereDelegate == null)) {
                this.onEndDownloadDocumentIsHereDelegate = new EndOperationDelegate(this.OnEndDownloadDocumentIsHere);
            }
            if ((this.onDownloadDocumentIsHereCompletedDelegate == null)) {
                this.onDownloadDocumentIsHereCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadDocumentIsHereCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadDocumentIsHereDelegate, new object[] {
                        fPath}, this.onEndDownloadDocumentIsHereDelegate, this.onDownloadDocumentIsHereCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.MembershipOptic> GetAllMembershipOptics() {
            return base.Channel.GetAllMembershipOptics();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMembershipOptics(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMembershipOptics(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.MembershipOptic> EndGetAllMembershipOptics(System.IAsyncResult result) {
            return base.Channel.EndGetAllMembershipOptics(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMembershipOptics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllMembershipOptics(callback, asyncState);
        }
        
        private object[] OnEndGetAllMembershipOptics(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.MembershipOptic> retVal = this.EndGetAllMembershipOptics(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMembershipOpticsCompleted(object state) {
            if ((this.GetAllMembershipOpticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMembershipOpticsCompleted(this, new GetAllMembershipOpticsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMembershipOpticsAsync() {
            this.GetAllMembershipOpticsAsync(null);
        }
        
        public void GetAllMembershipOpticsAsync(object userState) {
            if ((this.onBeginGetAllMembershipOpticsDelegate == null)) {
                this.onBeginGetAllMembershipOpticsDelegate = new BeginOperationDelegate(this.OnBeginGetAllMembershipOptics);
            }
            if ((this.onEndGetAllMembershipOpticsDelegate == null)) {
                this.onEndGetAllMembershipOpticsDelegate = new EndOperationDelegate(this.OnEndGetAllMembershipOptics);
            }
            if ((this.onGetAllMembershipOpticsCompletedDelegate == null)) {
                this.onGetAllMembershipOpticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMembershipOpticsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMembershipOpticsDelegate, null, this.onEndGetAllMembershipOpticsDelegate, this.onGetAllMembershipOpticsCompletedDelegate, userState);
        }
        
        public void InsertMembershipOptics(NewOptics.SVC.MembershipOptic obj) {
            base.Channel.InsertMembershipOptics(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertMembershipOptics(NewOptics.SVC.MembershipOptic obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertMembershipOptics(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertMembershipOptics(System.IAsyncResult result) {
            base.Channel.EndInsertMembershipOptics(result);
        }
        
        private System.IAsyncResult OnBeginInsertMembershipOptics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.MembershipOptic obj = ((NewOptics.SVC.MembershipOptic)(inValues[0]));
            return this.BeginInsertMembershipOptics(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertMembershipOptics(System.IAsyncResult result) {
            this.EndInsertMembershipOptics(result);
            return null;
        }
        
        private void OnInsertMembershipOpticsCompleted(object state) {
            if ((this.InsertMembershipOpticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertMembershipOpticsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertMembershipOpticsAsync(NewOptics.SVC.MembershipOptic obj) {
            this.InsertMembershipOpticsAsync(obj, null);
        }
        
        public void InsertMembershipOpticsAsync(NewOptics.SVC.MembershipOptic obj, object userState) {
            if ((this.onBeginInsertMembershipOpticsDelegate == null)) {
                this.onBeginInsertMembershipOpticsDelegate = new BeginOperationDelegate(this.OnBeginInsertMembershipOptics);
            }
            if ((this.onEndInsertMembershipOpticsDelegate == null)) {
                this.onEndInsertMembershipOpticsDelegate = new EndOperationDelegate(this.OnEndInsertMembershipOptics);
            }
            if ((this.onInsertMembershipOpticsCompletedDelegate == null)) {
                this.onInsertMembershipOpticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertMembershipOpticsCompleted);
            }
            base.InvokeAsync(this.onBeginInsertMembershipOpticsDelegate, new object[] {
                        obj}, this.onEndInsertMembershipOpticsDelegate, this.onInsertMembershipOpticsCompletedDelegate, userState);
        }
        
        public void UpdateMembershipOptics(NewOptics.SVC.MembershipOptic obj) {
            base.Channel.UpdateMembershipOptics(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateMembershipOptics(NewOptics.SVC.MembershipOptic obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMembershipOptics(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateMembershipOptics(System.IAsyncResult result) {
            base.Channel.EndUpdateMembershipOptics(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMembershipOptics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.MembershipOptic obj = ((NewOptics.SVC.MembershipOptic)(inValues[0]));
            return this.BeginUpdateMembershipOptics(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateMembershipOptics(System.IAsyncResult result) {
            this.EndUpdateMembershipOptics(result);
            return null;
        }
        
        private void OnUpdateMembershipOpticsCompleted(object state) {
            if ((this.UpdateMembershipOpticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMembershipOpticsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMembershipOpticsAsync(NewOptics.SVC.MembershipOptic obj) {
            this.UpdateMembershipOpticsAsync(obj, null);
        }
        
        public void UpdateMembershipOpticsAsync(NewOptics.SVC.MembershipOptic obj, object userState) {
            if ((this.onBeginUpdateMembershipOpticsDelegate == null)) {
                this.onBeginUpdateMembershipOpticsDelegate = new BeginOperationDelegate(this.OnBeginUpdateMembershipOptics);
            }
            if ((this.onEndUpdateMembershipOpticsDelegate == null)) {
                this.onEndUpdateMembershipOpticsDelegate = new EndOperationDelegate(this.OnEndUpdateMembershipOptics);
            }
            if ((this.onUpdateMembershipOpticsCompletedDelegate == null)) {
                this.onUpdateMembershipOpticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMembershipOpticsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMembershipOpticsDelegate, new object[] {
                        obj}, this.onEndUpdateMembershipOpticsDelegate, this.onUpdateMembershipOpticsCompletedDelegate, userState);
        }
        
        public void DeleteMembershipOptics(NewOptics.SVC.MembershipOptic obj) {
            base.Channel.DeleteMembershipOptics(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteMembershipOptics(NewOptics.SVC.MembershipOptic obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMembershipOptics(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteMembershipOptics(System.IAsyncResult result) {
            base.Channel.EndDeleteMembershipOptics(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMembershipOptics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.MembershipOptic obj = ((NewOptics.SVC.MembershipOptic)(inValues[0]));
            return this.BeginDeleteMembershipOptics(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteMembershipOptics(System.IAsyncResult result) {
            this.EndDeleteMembershipOptics(result);
            return null;
        }
        
        private void OnDeleteMembershipOpticsCompleted(object state) {
            if ((this.DeleteMembershipOpticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMembershipOpticsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMembershipOpticsAsync(NewOptics.SVC.MembershipOptic obj) {
            this.DeleteMembershipOpticsAsync(obj, null);
        }
        
        public void DeleteMembershipOpticsAsync(NewOptics.SVC.MembershipOptic obj, object userState) {
            if ((this.onBeginDeleteMembershipOpticsDelegate == null)) {
                this.onBeginDeleteMembershipOpticsDelegate = new BeginOperationDelegate(this.OnBeginDeleteMembershipOptics);
            }
            if ((this.onEndDeleteMembershipOpticsDelegate == null)) {
                this.onEndDeleteMembershipOpticsDelegate = new EndOperationDelegate(this.OnEndDeleteMembershipOptics);
            }
            if ((this.onDeleteMembershipOpticsCompletedDelegate == null)) {
                this.onDeleteMembershipOpticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMembershipOpticsCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMembershipOpticsDelegate, new object[] {
                        obj}, this.onEndDeleteMembershipOpticsDelegate, this.onDeleteMembershipOpticsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.DicomFichier> GetAllDicomFichier(int code) {
            return base.Channel.GetAllDicomFichier(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDicomFichier(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDicomFichier(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.DicomFichier> EndGetAllDicomFichier(System.IAsyncResult result) {
            return base.Channel.EndGetAllDicomFichier(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDicomFichier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginGetAllDicomFichier(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllDicomFichier(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.DicomFichier> retVal = this.EndGetAllDicomFichier(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDicomFichierCompleted(object state) {
            if ((this.GetAllDicomFichierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDicomFichierCompleted(this, new GetAllDicomFichierCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDicomFichierAsync(int code) {
            this.GetAllDicomFichierAsync(code, null);
        }
        
        public void GetAllDicomFichierAsync(int code, object userState) {
            if ((this.onBeginGetAllDicomFichierDelegate == null)) {
                this.onBeginGetAllDicomFichierDelegate = new BeginOperationDelegate(this.OnBeginGetAllDicomFichier);
            }
            if ((this.onEndGetAllDicomFichierDelegate == null)) {
                this.onEndGetAllDicomFichierDelegate = new EndOperationDelegate(this.OnEndGetAllDicomFichier);
            }
            if ((this.onGetAllDicomFichierCompletedDelegate == null)) {
                this.onGetAllDicomFichierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDicomFichierCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDicomFichierDelegate, new object[] {
                        code}, this.onEndGetAllDicomFichierDelegate, this.onGetAllDicomFichierCompletedDelegate, userState);
        }
        
        public void InsertDicomFichier(NewOptics.SVC.DicomFichier obj) {
            base.Channel.InsertDicomFichier(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertDicomFichier(NewOptics.SVC.DicomFichier obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDicomFichier(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertDicomFichier(System.IAsyncResult result) {
            base.Channel.EndInsertDicomFichier(result);
        }
        
        private System.IAsyncResult OnBeginInsertDicomFichier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.DicomFichier obj = ((NewOptics.SVC.DicomFichier)(inValues[0]));
            return this.BeginInsertDicomFichier(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertDicomFichier(System.IAsyncResult result) {
            this.EndInsertDicomFichier(result);
            return null;
        }
        
        private void OnInsertDicomFichierCompleted(object state) {
            if ((this.InsertDicomFichierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDicomFichierCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDicomFichierAsync(NewOptics.SVC.DicomFichier obj) {
            this.InsertDicomFichierAsync(obj, null);
        }
        
        public void InsertDicomFichierAsync(NewOptics.SVC.DicomFichier obj, object userState) {
            if ((this.onBeginInsertDicomFichierDelegate == null)) {
                this.onBeginInsertDicomFichierDelegate = new BeginOperationDelegate(this.OnBeginInsertDicomFichier);
            }
            if ((this.onEndInsertDicomFichierDelegate == null)) {
                this.onEndInsertDicomFichierDelegate = new EndOperationDelegate(this.OnEndInsertDicomFichier);
            }
            if ((this.onInsertDicomFichierCompletedDelegate == null)) {
                this.onInsertDicomFichierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDicomFichierCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDicomFichierDelegate, new object[] {
                        obj}, this.onEndInsertDicomFichierDelegate, this.onInsertDicomFichierCompletedDelegate, userState);
        }
        
        public void UpdateDicomFichier(NewOptics.SVC.DicomFichier obj) {
            base.Channel.UpdateDicomFichier(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDicomFichier(NewOptics.SVC.DicomFichier obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDicomFichier(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateDicomFichier(System.IAsyncResult result) {
            base.Channel.EndUpdateDicomFichier(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDicomFichier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.DicomFichier obj = ((NewOptics.SVC.DicomFichier)(inValues[0]));
            return this.BeginUpdateDicomFichier(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateDicomFichier(System.IAsyncResult result) {
            this.EndUpdateDicomFichier(result);
            return null;
        }
        
        private void OnUpdateDicomFichierCompleted(object state) {
            if ((this.UpdateDicomFichierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDicomFichierCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDicomFichierAsync(NewOptics.SVC.DicomFichier obj) {
            this.UpdateDicomFichierAsync(obj, null);
        }
        
        public void UpdateDicomFichierAsync(NewOptics.SVC.DicomFichier obj, object userState) {
            if ((this.onBeginUpdateDicomFichierDelegate == null)) {
                this.onBeginUpdateDicomFichierDelegate = new BeginOperationDelegate(this.OnBeginUpdateDicomFichier);
            }
            if ((this.onEndUpdateDicomFichierDelegate == null)) {
                this.onEndUpdateDicomFichierDelegate = new EndOperationDelegate(this.OnEndUpdateDicomFichier);
            }
            if ((this.onUpdateDicomFichierCompletedDelegate == null)) {
                this.onUpdateDicomFichierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDicomFichierCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDicomFichierDelegate, new object[] {
                        obj}, this.onEndUpdateDicomFichierDelegate, this.onUpdateDicomFichierCompletedDelegate, userState);
        }
        
        public void DeleteDicomFichier(NewOptics.SVC.DicomFichier obj) {
            base.Channel.DeleteDicomFichier(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDicomFichier(NewOptics.SVC.DicomFichier obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDicomFichier(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDicomFichier(System.IAsyncResult result) {
            base.Channel.EndDeleteDicomFichier(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDicomFichier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.DicomFichier obj = ((NewOptics.SVC.DicomFichier)(inValues[0]));
            return this.BeginDeleteDicomFichier(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteDicomFichier(System.IAsyncResult result) {
            this.EndDeleteDicomFichier(result);
            return null;
        }
        
        private void OnDeleteDicomFichierCompleted(object state) {
            if ((this.DeleteDicomFichierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDicomFichierCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDicomFichierAsync(NewOptics.SVC.DicomFichier obj) {
            this.DeleteDicomFichierAsync(obj, null);
        }
        
        public void DeleteDicomFichierAsync(NewOptics.SVC.DicomFichier obj, object userState) {
            if ((this.onBeginDeleteDicomFichierDelegate == null)) {
                this.onBeginDeleteDicomFichierDelegate = new BeginOperationDelegate(this.OnBeginDeleteDicomFichier);
            }
            if ((this.onEndDeleteDicomFichierDelegate == null)) {
                this.onEndDeleteDicomFichierDelegate = new EndOperationDelegate(this.OnEndDeleteDicomFichier);
            }
            if ((this.onDeleteDicomFichierCompletedDelegate == null)) {
                this.onDeleteDicomFichierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDicomFichierCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDicomFichierDelegate, new object[] {
                        obj}, this.onEndDeleteDicomFichierDelegate, this.onDeleteDicomFichierCompletedDelegate, userState);
        }
        
        public NewOptics.SVC.Param GetAllParamétre() {
            return base.Channel.GetAllParamétre();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllParamétre(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllParamétre(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public NewOptics.SVC.Param EndGetAllParamétre(System.IAsyncResult result) {
            return base.Channel.EndGetAllParamétre(result);
        }
        
        private System.IAsyncResult OnBeginGetAllParamétre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllParamétre(callback, asyncState);
        }
        
        private object[] OnEndGetAllParamétre(System.IAsyncResult result) {
            NewOptics.SVC.Param retVal = this.EndGetAllParamétre(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllParamétreCompleted(object state) {
            if ((this.GetAllParamétreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllParamétreCompleted(this, new GetAllParamétreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllParamétreAsync() {
            this.GetAllParamétreAsync(null);
        }
        
        public void GetAllParamétreAsync(object userState) {
            if ((this.onBeginGetAllParamétreDelegate == null)) {
                this.onBeginGetAllParamétreDelegate = new BeginOperationDelegate(this.OnBeginGetAllParamétre);
            }
            if ((this.onEndGetAllParamétreDelegate == null)) {
                this.onEndGetAllParamétreDelegate = new EndOperationDelegate(this.OnEndGetAllParamétre);
            }
            if ((this.onGetAllParamétreCompletedDelegate == null)) {
                this.onGetAllParamétreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllParamétreCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllParamétreDelegate, null, this.onEndGetAllParamétreDelegate, this.onGetAllParamétreCompletedDelegate, userState);
        }
        
        public void UpdateParamétre(NewOptics.SVC.Param obj) {
            base.Channel.UpdateParamétre(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateParamétre(NewOptics.SVC.Param obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateParamétre(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateParamétre(System.IAsyncResult result) {
            base.Channel.EndUpdateParamétre(result);
        }
        
        private System.IAsyncResult OnBeginUpdateParamétre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Param obj = ((NewOptics.SVC.Param)(inValues[0]));
            return this.BeginUpdateParamétre(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateParamétre(System.IAsyncResult result) {
            this.EndUpdateParamétre(result);
            return null;
        }
        
        private void OnUpdateParamétreCompleted(object state) {
            if ((this.UpdateParamétreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateParamétreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateParamétreAsync(NewOptics.SVC.Param obj) {
            this.UpdateParamétreAsync(obj, null);
        }
        
        public void UpdateParamétreAsync(NewOptics.SVC.Param obj, object userState) {
            if ((this.onBeginUpdateParamétreDelegate == null)) {
                this.onBeginUpdateParamétreDelegate = new BeginOperationDelegate(this.OnBeginUpdateParamétre);
            }
            if ((this.onEndUpdateParamétreDelegate == null)) {
                this.onEndUpdateParamétreDelegate = new EndOperationDelegate(this.OnEndUpdateParamétre);
            }
            if ((this.onUpdateParamétreCompletedDelegate == null)) {
                this.onUpdateParamétreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateParamétreCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateParamétreDelegate, new object[] {
                        obj}, this.onEndUpdateParamétreDelegate, this.onUpdateParamétreCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Produit> GetAllProduit() {
            return base.Channel.GetAllProduit();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllProduit(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllProduit(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Produit> EndGetAllProduit(System.IAsyncResult result) {
            return base.Channel.EndGetAllProduit(result);
        }
        
        private System.IAsyncResult OnBeginGetAllProduit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllProduit(callback, asyncState);
        }
        
        private object[] OnEndGetAllProduit(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Produit> retVal = this.EndGetAllProduit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllProduitCompleted(object state) {
            if ((this.GetAllProduitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllProduitCompleted(this, new GetAllProduitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllProduitAsync() {
            this.GetAllProduitAsync(null);
        }
        
        public void GetAllProduitAsync(object userState) {
            if ((this.onBeginGetAllProduitDelegate == null)) {
                this.onBeginGetAllProduitDelegate = new BeginOperationDelegate(this.OnBeginGetAllProduit);
            }
            if ((this.onEndGetAllProduitDelegate == null)) {
                this.onEndGetAllProduitDelegate = new EndOperationDelegate(this.OnEndGetAllProduit);
            }
            if ((this.onGetAllProduitCompletedDelegate == null)) {
                this.onGetAllProduitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllProduitCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllProduitDelegate, null, this.onEndGetAllProduitDelegate, this.onGetAllProduitCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Produit> GetAllProduitbyid(int code) {
            return base.Channel.GetAllProduitbyid(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllProduitbyid(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllProduitbyid(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Produit> EndGetAllProduitbyid(System.IAsyncResult result) {
            return base.Channel.EndGetAllProduitbyid(result);
        }
        
        private System.IAsyncResult OnBeginGetAllProduitbyid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginGetAllProduitbyid(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllProduitbyid(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Produit> retVal = this.EndGetAllProduitbyid(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllProduitbyidCompleted(object state) {
            if ((this.GetAllProduitbyidCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllProduitbyidCompleted(this, new GetAllProduitbyidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllProduitbyidAsync(int code) {
            this.GetAllProduitbyidAsync(code, null);
        }
        
        public void GetAllProduitbyidAsync(int code, object userState) {
            if ((this.onBeginGetAllProduitbyidDelegate == null)) {
                this.onBeginGetAllProduitbyidDelegate = new BeginOperationDelegate(this.OnBeginGetAllProduitbyid);
            }
            if ((this.onEndGetAllProduitbyidDelegate == null)) {
                this.onEndGetAllProduitbyidDelegate = new EndOperationDelegate(this.OnEndGetAllProduitbyid);
            }
            if ((this.onGetAllProduitbyidCompletedDelegate == null)) {
                this.onGetAllProduitbyidCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllProduitbyidCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllProduitbyidDelegate, new object[] {
                        code}, this.onEndGetAllProduitbyidDelegate, this.onGetAllProduitbyidCompletedDelegate, userState);
        }
        
        public NewOptics.SVC.Produit GetAllProduitbycab(string code) {
            return base.Channel.GetAllProduitbycab(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllProduitbycab(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllProduitbycab(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public NewOptics.SVC.Produit EndGetAllProduitbycab(System.IAsyncResult result) {
            return base.Channel.EndGetAllProduitbycab(result);
        }
        
        private System.IAsyncResult OnBeginGetAllProduitbycab(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetAllProduitbycab(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllProduitbycab(System.IAsyncResult result) {
            NewOptics.SVC.Produit retVal = this.EndGetAllProduitbycab(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllProduitbycabCompleted(object state) {
            if ((this.GetAllProduitbycabCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllProduitbycabCompleted(this, new GetAllProduitbycabCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllProduitbycabAsync(string code) {
            this.GetAllProduitbycabAsync(code, null);
        }
        
        public void GetAllProduitbycabAsync(string code, object userState) {
            if ((this.onBeginGetAllProduitbycabDelegate == null)) {
                this.onBeginGetAllProduitbycabDelegate = new BeginOperationDelegate(this.OnBeginGetAllProduitbycab);
            }
            if ((this.onEndGetAllProduitbycabDelegate == null)) {
                this.onEndGetAllProduitbycabDelegate = new EndOperationDelegate(this.OnEndGetAllProduitbycab);
            }
            if ((this.onGetAllProduitbycabCompletedDelegate == null)) {
                this.onGetAllProduitbycabCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllProduitbycabCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllProduitbycabDelegate, new object[] {
                        code}, this.onEndGetAllProduitbycabDelegate, this.onGetAllProduitbycabCompletedDelegate, userState);
        }
        
        public void InsertProduit(NewOptics.SVC.Produit obj) {
            base.Channel.InsertProduit(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertProduit(NewOptics.SVC.Produit obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertProduit(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertProduit(System.IAsyncResult result) {
            base.Channel.EndInsertProduit(result);
        }
        
        private System.IAsyncResult OnBeginInsertProduit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Produit obj = ((NewOptics.SVC.Produit)(inValues[0]));
            return this.BeginInsertProduit(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertProduit(System.IAsyncResult result) {
            this.EndInsertProduit(result);
            return null;
        }
        
        private void OnInsertProduitCompleted(object state) {
            if ((this.InsertProduitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertProduitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertProduitAsync(NewOptics.SVC.Produit obj) {
            this.InsertProduitAsync(obj, null);
        }
        
        public void InsertProduitAsync(NewOptics.SVC.Produit obj, object userState) {
            if ((this.onBeginInsertProduitDelegate == null)) {
                this.onBeginInsertProduitDelegate = new BeginOperationDelegate(this.OnBeginInsertProduit);
            }
            if ((this.onEndInsertProduitDelegate == null)) {
                this.onEndInsertProduitDelegate = new EndOperationDelegate(this.OnEndInsertProduit);
            }
            if ((this.onInsertProduitCompletedDelegate == null)) {
                this.onInsertProduitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertProduitCompleted);
            }
            base.InvokeAsync(this.onBeginInsertProduitDelegate, new object[] {
                        obj}, this.onEndInsertProduitDelegate, this.onInsertProduitCompletedDelegate, userState);
        }
        
        public void UpdateProduit(NewOptics.SVC.Produit obj) {
            base.Channel.UpdateProduit(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateProduit(NewOptics.SVC.Produit obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateProduit(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateProduit(System.IAsyncResult result) {
            base.Channel.EndUpdateProduit(result);
        }
        
        private System.IAsyncResult OnBeginUpdateProduit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Produit obj = ((NewOptics.SVC.Produit)(inValues[0]));
            return this.BeginUpdateProduit(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateProduit(System.IAsyncResult result) {
            this.EndUpdateProduit(result);
            return null;
        }
        
        private void OnUpdateProduitCompleted(object state) {
            if ((this.UpdateProduitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateProduitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateProduitAsync(NewOptics.SVC.Produit obj) {
            this.UpdateProduitAsync(obj, null);
        }
        
        public void UpdateProduitAsync(NewOptics.SVC.Produit obj, object userState) {
            if ((this.onBeginUpdateProduitDelegate == null)) {
                this.onBeginUpdateProduitDelegate = new BeginOperationDelegate(this.OnBeginUpdateProduit);
            }
            if ((this.onEndUpdateProduitDelegate == null)) {
                this.onEndUpdateProduitDelegate = new EndOperationDelegate(this.OnEndUpdateProduit);
            }
            if ((this.onUpdateProduitCompletedDelegate == null)) {
                this.onUpdateProduitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateProduitCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateProduitDelegate, new object[] {
                        obj}, this.onEndUpdateProduitDelegate, this.onUpdateProduitCompletedDelegate, userState);
        }
        
        public void DeleteProduit(NewOptics.SVC.Produit obj) {
            base.Channel.DeleteProduit(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteProduit(NewOptics.SVC.Produit obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteProduit(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteProduit(System.IAsyncResult result) {
            base.Channel.EndDeleteProduit(result);
        }
        
        private System.IAsyncResult OnBeginDeleteProduit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Produit obj = ((NewOptics.SVC.Produit)(inValues[0]));
            return this.BeginDeleteProduit(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteProduit(System.IAsyncResult result) {
            this.EndDeleteProduit(result);
            return null;
        }
        
        private void OnDeleteProduitCompleted(object state) {
            if ((this.DeleteProduitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteProduitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteProduitAsync(NewOptics.SVC.Produit obj) {
            this.DeleteProduitAsync(obj, null);
        }
        
        public void DeleteProduitAsync(NewOptics.SVC.Produit obj, object userState) {
            if ((this.onBeginDeleteProduitDelegate == null)) {
                this.onBeginDeleteProduitDelegate = new BeginOperationDelegate(this.OnBeginDeleteProduit);
            }
            if ((this.onEndDeleteProduitDelegate == null)) {
                this.onEndDeleteProduitDelegate = new EndOperationDelegate(this.OnEndDeleteProduit);
            }
            if ((this.onDeleteProduitCompletedDelegate == null)) {
                this.onDeleteProduitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteProduitCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteProduitDelegate, new object[] {
                        obj}, this.onEndDeleteProduitDelegate, this.onDeleteProduitCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille> GetAllAdaptationLentille() {
            return base.Channel.GetAllAdaptationLentille();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllAdaptationLentille(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAdaptationLentille(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille> EndGetAllAdaptationLentille(System.IAsyncResult result) {
            return base.Channel.EndGetAllAdaptationLentille(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAdaptationLentille(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllAdaptationLentille(callback, asyncState);
        }
        
        private object[] OnEndGetAllAdaptationLentille(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille> retVal = this.EndGetAllAdaptationLentille(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAdaptationLentilleCompleted(object state) {
            if ((this.GetAllAdaptationLentilleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAdaptationLentilleCompleted(this, new GetAllAdaptationLentilleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAdaptationLentilleAsync() {
            this.GetAllAdaptationLentilleAsync(null);
        }
        
        public void GetAllAdaptationLentilleAsync(object userState) {
            if ((this.onBeginGetAllAdaptationLentilleDelegate == null)) {
                this.onBeginGetAllAdaptationLentilleDelegate = new BeginOperationDelegate(this.OnBeginGetAllAdaptationLentille);
            }
            if ((this.onEndGetAllAdaptationLentilleDelegate == null)) {
                this.onEndGetAllAdaptationLentilleDelegate = new EndOperationDelegate(this.OnEndGetAllAdaptationLentille);
            }
            if ((this.onGetAllAdaptationLentilleCompletedDelegate == null)) {
                this.onGetAllAdaptationLentilleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAdaptationLentilleCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAdaptationLentilleDelegate, null, this.onEndGetAllAdaptationLentilleDelegate, this.onGetAllAdaptationLentilleCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille> GetAllAdaptationLentillebycode(int code) {
            return base.Channel.GetAllAdaptationLentillebycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllAdaptationLentillebycode(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAdaptationLentillebycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille> EndGetAllAdaptationLentillebycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllAdaptationLentillebycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAdaptationLentillebycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginGetAllAdaptationLentillebycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllAdaptationLentillebycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.AdaptationLentille> retVal = this.EndGetAllAdaptationLentillebycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAdaptationLentillebycodeCompleted(object state) {
            if ((this.GetAllAdaptationLentillebycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAdaptationLentillebycodeCompleted(this, new GetAllAdaptationLentillebycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAdaptationLentillebycodeAsync(int code) {
            this.GetAllAdaptationLentillebycodeAsync(code, null);
        }
        
        public void GetAllAdaptationLentillebycodeAsync(int code, object userState) {
            if ((this.onBeginGetAllAdaptationLentillebycodeDelegate == null)) {
                this.onBeginGetAllAdaptationLentillebycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllAdaptationLentillebycode);
            }
            if ((this.onEndGetAllAdaptationLentillebycodeDelegate == null)) {
                this.onEndGetAllAdaptationLentillebycodeDelegate = new EndOperationDelegate(this.OnEndGetAllAdaptationLentillebycode);
            }
            if ((this.onGetAllAdaptationLentillebycodeCompletedDelegate == null)) {
                this.onGetAllAdaptationLentillebycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAdaptationLentillebycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAdaptationLentillebycodeDelegate, new object[] {
                        code}, this.onEndGetAllAdaptationLentillebycodeDelegate, this.onGetAllAdaptationLentillebycodeCompletedDelegate, userState);
        }
        
        public void InsertAdaptationLentille(NewOptics.SVC.AdaptationLentille obj) {
            base.Channel.InsertAdaptationLentille(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertAdaptationLentille(NewOptics.SVC.AdaptationLentille obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertAdaptationLentille(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertAdaptationLentille(System.IAsyncResult result) {
            base.Channel.EndInsertAdaptationLentille(result);
        }
        
        private System.IAsyncResult OnBeginInsertAdaptationLentille(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.AdaptationLentille obj = ((NewOptics.SVC.AdaptationLentille)(inValues[0]));
            return this.BeginInsertAdaptationLentille(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertAdaptationLentille(System.IAsyncResult result) {
            this.EndInsertAdaptationLentille(result);
            return null;
        }
        
        private void OnInsertAdaptationLentilleCompleted(object state) {
            if ((this.InsertAdaptationLentilleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertAdaptationLentilleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertAdaptationLentilleAsync(NewOptics.SVC.AdaptationLentille obj) {
            this.InsertAdaptationLentilleAsync(obj, null);
        }
        
        public void InsertAdaptationLentilleAsync(NewOptics.SVC.AdaptationLentille obj, object userState) {
            if ((this.onBeginInsertAdaptationLentilleDelegate == null)) {
                this.onBeginInsertAdaptationLentilleDelegate = new BeginOperationDelegate(this.OnBeginInsertAdaptationLentille);
            }
            if ((this.onEndInsertAdaptationLentilleDelegate == null)) {
                this.onEndInsertAdaptationLentilleDelegate = new EndOperationDelegate(this.OnEndInsertAdaptationLentille);
            }
            if ((this.onInsertAdaptationLentilleCompletedDelegate == null)) {
                this.onInsertAdaptationLentilleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertAdaptationLentilleCompleted);
            }
            base.InvokeAsync(this.onBeginInsertAdaptationLentilleDelegate, new object[] {
                        obj}, this.onEndInsertAdaptationLentilleDelegate, this.onInsertAdaptationLentilleCompletedDelegate, userState);
        }
        
        public void UpdateAdaptationLentille(NewOptics.SVC.AdaptationLentille obj) {
            base.Channel.UpdateAdaptationLentille(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAdaptationLentille(NewOptics.SVC.AdaptationLentille obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAdaptationLentille(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateAdaptationLentille(System.IAsyncResult result) {
            base.Channel.EndUpdateAdaptationLentille(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAdaptationLentille(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.AdaptationLentille obj = ((NewOptics.SVC.AdaptationLentille)(inValues[0]));
            return this.BeginUpdateAdaptationLentille(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateAdaptationLentille(System.IAsyncResult result) {
            this.EndUpdateAdaptationLentille(result);
            return null;
        }
        
        private void OnUpdateAdaptationLentilleCompleted(object state) {
            if ((this.UpdateAdaptationLentilleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAdaptationLentilleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAdaptationLentilleAsync(NewOptics.SVC.AdaptationLentille obj) {
            this.UpdateAdaptationLentilleAsync(obj, null);
        }
        
        public void UpdateAdaptationLentilleAsync(NewOptics.SVC.AdaptationLentille obj, object userState) {
            if ((this.onBeginUpdateAdaptationLentilleDelegate == null)) {
                this.onBeginUpdateAdaptationLentilleDelegate = new BeginOperationDelegate(this.OnBeginUpdateAdaptationLentille);
            }
            if ((this.onEndUpdateAdaptationLentilleDelegate == null)) {
                this.onEndUpdateAdaptationLentilleDelegate = new EndOperationDelegate(this.OnEndUpdateAdaptationLentille);
            }
            if ((this.onUpdateAdaptationLentilleCompletedDelegate == null)) {
                this.onUpdateAdaptationLentilleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAdaptationLentilleCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAdaptationLentilleDelegate, new object[] {
                        obj}, this.onEndUpdateAdaptationLentilleDelegate, this.onUpdateAdaptationLentilleCompletedDelegate, userState);
        }
        
        public void DeleteAdaptationLentille(NewOptics.SVC.AdaptationLentille obj) {
            base.Channel.DeleteAdaptationLentille(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteAdaptationLentille(NewOptics.SVC.AdaptationLentille obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAdaptationLentille(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteAdaptationLentille(System.IAsyncResult result) {
            base.Channel.EndDeleteAdaptationLentille(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAdaptationLentille(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.AdaptationLentille obj = ((NewOptics.SVC.AdaptationLentille)(inValues[0]));
            return this.BeginDeleteAdaptationLentille(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteAdaptationLentille(System.IAsyncResult result) {
            this.EndDeleteAdaptationLentille(result);
            return null;
        }
        
        private void OnDeleteAdaptationLentilleCompleted(object state) {
            if ((this.DeleteAdaptationLentilleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAdaptationLentilleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAdaptationLentilleAsync(NewOptics.SVC.AdaptationLentille obj) {
            this.DeleteAdaptationLentilleAsync(obj, null);
        }
        
        public void DeleteAdaptationLentilleAsync(NewOptics.SVC.AdaptationLentille obj, object userState) {
            if ((this.onBeginDeleteAdaptationLentilleDelegate == null)) {
                this.onBeginDeleteAdaptationLentilleDelegate = new BeginOperationDelegate(this.OnBeginDeleteAdaptationLentille);
            }
            if ((this.onEndDeleteAdaptationLentilleDelegate == null)) {
                this.onEndDeleteAdaptationLentilleDelegate = new EndOperationDelegate(this.OnEndDeleteAdaptationLentille);
            }
            if ((this.onDeleteAdaptationLentilleCompletedDelegate == null)) {
                this.onDeleteAdaptationLentilleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAdaptationLentilleCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAdaptationLentilleDelegate, new object[] {
                        obj}, this.onEndDeleteAdaptationLentilleDelegate, this.onDeleteAdaptationLentilleCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.RendezVou> GetAllRendezVoubycode(int code) {
            return base.Channel.GetAllRendezVoubycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllRendezVoubycode(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllRendezVoubycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.RendezVou> EndGetAllRendezVoubycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllRendezVoubycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllRendezVoubycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginGetAllRendezVoubycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllRendezVoubycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.RendezVou> retVal = this.EndGetAllRendezVoubycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllRendezVoubycodeCompleted(object state) {
            if ((this.GetAllRendezVoubycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllRendezVoubycodeCompleted(this, new GetAllRendezVoubycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllRendezVoubycodeAsync(int code) {
            this.GetAllRendezVoubycodeAsync(code, null);
        }
        
        public void GetAllRendezVoubycodeAsync(int code, object userState) {
            if ((this.onBeginGetAllRendezVoubycodeDelegate == null)) {
                this.onBeginGetAllRendezVoubycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllRendezVoubycode);
            }
            if ((this.onEndGetAllRendezVoubycodeDelegate == null)) {
                this.onEndGetAllRendezVoubycodeDelegate = new EndOperationDelegate(this.OnEndGetAllRendezVoubycode);
            }
            if ((this.onGetAllRendezVoubycodeCompletedDelegate == null)) {
                this.onGetAllRendezVoubycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllRendezVoubycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllRendezVoubycodeDelegate, new object[] {
                        code}, this.onEndGetAllRendezVoubycodeDelegate, this.onGetAllRendezVoubycodeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.RendezVou> GetAllRendezVou(System.DateTime date1, System.DateTime date2) {
            return base.Channel.GetAllRendezVou(date1, date2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllRendezVou(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllRendezVou(date1, date2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.RendezVou> EndGetAllRendezVou(System.IAsyncResult result) {
            return base.Channel.EndGetAllRendezVou(result);
        }
        
        private System.IAsyncResult OnBeginGetAllRendezVou(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime date1 = ((System.DateTime)(inValues[0]));
            System.DateTime date2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllRendezVou(date1, date2, callback, asyncState);
        }
        
        private object[] OnEndGetAllRendezVou(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.RendezVou> retVal = this.EndGetAllRendezVou(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllRendezVouCompleted(object state) {
            if ((this.GetAllRendezVouCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllRendezVouCompleted(this, new GetAllRendezVouCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllRendezVouAsync(System.DateTime date1, System.DateTime date2) {
            this.GetAllRendezVouAsync(date1, date2, null);
        }
        
        public void GetAllRendezVouAsync(System.DateTime date1, System.DateTime date2, object userState) {
            if ((this.onBeginGetAllRendezVouDelegate == null)) {
                this.onBeginGetAllRendezVouDelegate = new BeginOperationDelegate(this.OnBeginGetAllRendezVou);
            }
            if ((this.onEndGetAllRendezVouDelegate == null)) {
                this.onEndGetAllRendezVouDelegate = new EndOperationDelegate(this.OnEndGetAllRendezVou);
            }
            if ((this.onGetAllRendezVouCompletedDelegate == null)) {
                this.onGetAllRendezVouCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllRendezVouCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllRendezVouDelegate, new object[] {
                        date1,
                        date2}, this.onEndGetAllRendezVouDelegate, this.onGetAllRendezVouCompletedDelegate, userState);
        }
        
        public void InsertRendezVou(NewOptics.SVC.RendezVou obj) {
            base.Channel.InsertRendezVou(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertRendezVou(NewOptics.SVC.RendezVou obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertRendezVou(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertRendezVou(System.IAsyncResult result) {
            base.Channel.EndInsertRendezVou(result);
        }
        
        private System.IAsyncResult OnBeginInsertRendezVou(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.RendezVou obj = ((NewOptics.SVC.RendezVou)(inValues[0]));
            return this.BeginInsertRendezVou(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertRendezVou(System.IAsyncResult result) {
            this.EndInsertRendezVou(result);
            return null;
        }
        
        private void OnInsertRendezVouCompleted(object state) {
            if ((this.InsertRendezVouCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertRendezVouCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertRendezVouAsync(NewOptics.SVC.RendezVou obj) {
            this.InsertRendezVouAsync(obj, null);
        }
        
        public void InsertRendezVouAsync(NewOptics.SVC.RendezVou obj, object userState) {
            if ((this.onBeginInsertRendezVouDelegate == null)) {
                this.onBeginInsertRendezVouDelegate = new BeginOperationDelegate(this.OnBeginInsertRendezVou);
            }
            if ((this.onEndInsertRendezVouDelegate == null)) {
                this.onEndInsertRendezVouDelegate = new EndOperationDelegate(this.OnEndInsertRendezVou);
            }
            if ((this.onInsertRendezVouCompletedDelegate == null)) {
                this.onInsertRendezVouCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertRendezVouCompleted);
            }
            base.InvokeAsync(this.onBeginInsertRendezVouDelegate, new object[] {
                        obj}, this.onEndInsertRendezVouDelegate, this.onInsertRendezVouCompletedDelegate, userState);
        }
        
        public void UpdateRendezVou(NewOptics.SVC.RendezVou obj) {
            base.Channel.UpdateRendezVou(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateRendezVou(NewOptics.SVC.RendezVou obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRendezVou(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateRendezVou(System.IAsyncResult result) {
            base.Channel.EndUpdateRendezVou(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRendezVou(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.RendezVou obj = ((NewOptics.SVC.RendezVou)(inValues[0]));
            return this.BeginUpdateRendezVou(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateRendezVou(System.IAsyncResult result) {
            this.EndUpdateRendezVou(result);
            return null;
        }
        
        private void OnUpdateRendezVouCompleted(object state) {
            if ((this.UpdateRendezVouCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRendezVouCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRendezVouAsync(NewOptics.SVC.RendezVou obj) {
            this.UpdateRendezVouAsync(obj, null);
        }
        
        public void UpdateRendezVouAsync(NewOptics.SVC.RendezVou obj, object userState) {
            if ((this.onBeginUpdateRendezVouDelegate == null)) {
                this.onBeginUpdateRendezVouDelegate = new BeginOperationDelegate(this.OnBeginUpdateRendezVou);
            }
            if ((this.onEndUpdateRendezVouDelegate == null)) {
                this.onEndUpdateRendezVouDelegate = new EndOperationDelegate(this.OnEndUpdateRendezVou);
            }
            if ((this.onUpdateRendezVouCompletedDelegate == null)) {
                this.onUpdateRendezVouCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRendezVouCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRendezVouDelegate, new object[] {
                        obj}, this.onEndUpdateRendezVouDelegate, this.onUpdateRendezVouCompletedDelegate, userState);
        }
        
        public void DeleteRendezVou(NewOptics.SVC.RendezVou obj) {
            base.Channel.DeleteRendezVou(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteRendezVou(NewOptics.SVC.RendezVou obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRendezVou(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteRendezVou(System.IAsyncResult result) {
            base.Channel.EndDeleteRendezVou(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRendezVou(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.RendezVou obj = ((NewOptics.SVC.RendezVou)(inValues[0]));
            return this.BeginDeleteRendezVou(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteRendezVou(System.IAsyncResult result) {
            this.EndDeleteRendezVou(result);
            return null;
        }
        
        private void OnDeleteRendezVouCompleted(object state) {
            if ((this.DeleteRendezVouCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRendezVouCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRendezVouAsync(NewOptics.SVC.RendezVou obj) {
            this.DeleteRendezVouAsync(obj, null);
        }
        
        public void DeleteRendezVouAsync(NewOptics.SVC.RendezVou obj, object userState) {
            if ((this.onBeginDeleteRendezVouDelegate == null)) {
                this.onBeginDeleteRendezVouDelegate = new BeginOperationDelegate(this.OnBeginDeleteRendezVou);
            }
            if ((this.onEndDeleteRendezVouDelegate == null)) {
                this.onEndDeleteRendezVouDelegate = new EndOperationDelegate(this.OnEndDeleteRendezVou);
            }
            if ((this.onDeleteRendezVouCompletedDelegate == null)) {
                this.onDeleteRendezVouCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRendezVouCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRendezVouDelegate, new object[] {
                        obj}, this.onEndDeleteRendezVouDelegate, this.onDeleteRendezVouCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Paint> GetAllPaint() {
            return base.Channel.GetAllPaint();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPaint(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPaint(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Paint> EndGetAllPaint(System.IAsyncResult result) {
            return base.Channel.EndGetAllPaint(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPaint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllPaint(callback, asyncState);
        }
        
        private object[] OnEndGetAllPaint(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Paint> retVal = this.EndGetAllPaint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPaintCompleted(object state) {
            if ((this.GetAllPaintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPaintCompleted(this, new GetAllPaintCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPaintAsync() {
            this.GetAllPaintAsync(null);
        }
        
        public void GetAllPaintAsync(object userState) {
            if ((this.onBeginGetAllPaintDelegate == null)) {
                this.onBeginGetAllPaintDelegate = new BeginOperationDelegate(this.OnBeginGetAllPaint);
            }
            if ((this.onEndGetAllPaintDelegate == null)) {
                this.onEndGetAllPaintDelegate = new EndOperationDelegate(this.OnEndGetAllPaint);
            }
            if ((this.onGetAllPaintCompletedDelegate == null)) {
                this.onGetAllPaintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPaintCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPaintDelegate, null, this.onEndGetAllPaintDelegate, this.onGetAllPaintCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Paint> GetAllPaintbycode(int code) {
            return base.Channel.GetAllPaintbycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPaintbycode(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPaintbycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Paint> EndGetAllPaintbycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllPaintbycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPaintbycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginGetAllPaintbycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllPaintbycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Paint> retVal = this.EndGetAllPaintbycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPaintbycodeCompleted(object state) {
            if ((this.GetAllPaintbycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPaintbycodeCompleted(this, new GetAllPaintbycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPaintbycodeAsync(int code) {
            this.GetAllPaintbycodeAsync(code, null);
        }
        
        public void GetAllPaintbycodeAsync(int code, object userState) {
            if ((this.onBeginGetAllPaintbycodeDelegate == null)) {
                this.onBeginGetAllPaintbycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllPaintbycode);
            }
            if ((this.onEndGetAllPaintbycodeDelegate == null)) {
                this.onEndGetAllPaintbycodeDelegate = new EndOperationDelegate(this.OnEndGetAllPaintbycode);
            }
            if ((this.onGetAllPaintbycodeCompletedDelegate == null)) {
                this.onGetAllPaintbycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPaintbycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPaintbycodeDelegate, new object[] {
                        code}, this.onEndGetAllPaintbycodeDelegate, this.onGetAllPaintbycodeCompletedDelegate, userState);
        }
        
        public void InsertPaint(NewOptics.SVC.Paint obj) {
            base.Channel.InsertPaint(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertPaint(NewOptics.SVC.Paint obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertPaint(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertPaint(System.IAsyncResult result) {
            base.Channel.EndInsertPaint(result);
        }
        
        private System.IAsyncResult OnBeginInsertPaint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Paint obj = ((NewOptics.SVC.Paint)(inValues[0]));
            return this.BeginInsertPaint(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertPaint(System.IAsyncResult result) {
            this.EndInsertPaint(result);
            return null;
        }
        
        private void OnInsertPaintCompleted(object state) {
            if ((this.InsertPaintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertPaintCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertPaintAsync(NewOptics.SVC.Paint obj) {
            this.InsertPaintAsync(obj, null);
        }
        
        public void InsertPaintAsync(NewOptics.SVC.Paint obj, object userState) {
            if ((this.onBeginInsertPaintDelegate == null)) {
                this.onBeginInsertPaintDelegate = new BeginOperationDelegate(this.OnBeginInsertPaint);
            }
            if ((this.onEndInsertPaintDelegate == null)) {
                this.onEndInsertPaintDelegate = new EndOperationDelegate(this.OnEndInsertPaint);
            }
            if ((this.onInsertPaintCompletedDelegate == null)) {
                this.onInsertPaintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertPaintCompleted);
            }
            base.InvokeAsync(this.onBeginInsertPaintDelegate, new object[] {
                        obj}, this.onEndInsertPaintDelegate, this.onInsertPaintCompletedDelegate, userState);
        }
        
        public void UpdatePaint(NewOptics.SVC.Paint obj) {
            base.Channel.UpdatePaint(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePaint(NewOptics.SVC.Paint obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePaint(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdatePaint(System.IAsyncResult result) {
            base.Channel.EndUpdatePaint(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePaint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Paint obj = ((NewOptics.SVC.Paint)(inValues[0]));
            return this.BeginUpdatePaint(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdatePaint(System.IAsyncResult result) {
            this.EndUpdatePaint(result);
            return null;
        }
        
        private void OnUpdatePaintCompleted(object state) {
            if ((this.UpdatePaintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePaintCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePaintAsync(NewOptics.SVC.Paint obj) {
            this.UpdatePaintAsync(obj, null);
        }
        
        public void UpdatePaintAsync(NewOptics.SVC.Paint obj, object userState) {
            if ((this.onBeginUpdatePaintDelegate == null)) {
                this.onBeginUpdatePaintDelegate = new BeginOperationDelegate(this.OnBeginUpdatePaint);
            }
            if ((this.onEndUpdatePaintDelegate == null)) {
                this.onEndUpdatePaintDelegate = new EndOperationDelegate(this.OnEndUpdatePaint);
            }
            if ((this.onUpdatePaintCompletedDelegate == null)) {
                this.onUpdatePaintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePaintCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePaintDelegate, new object[] {
                        obj}, this.onEndUpdatePaintDelegate, this.onUpdatePaintCompletedDelegate, userState);
        }
        
        public void DeletePaint(NewOptics.SVC.Paint obj) {
            base.Channel.DeletePaint(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePaint(NewOptics.SVC.Paint obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePaint(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePaint(System.IAsyncResult result) {
            base.Channel.EndDeletePaint(result);
        }
        
        private System.IAsyncResult OnBeginDeletePaint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Paint obj = ((NewOptics.SVC.Paint)(inValues[0]));
            return this.BeginDeletePaint(obj, callback, asyncState);
        }
        
        private object[] OnEndDeletePaint(System.IAsyncResult result) {
            this.EndDeletePaint(result);
            return null;
        }
        
        private void OnDeletePaintCompleted(object state) {
            if ((this.DeletePaintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePaintCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePaintAsync(NewOptics.SVC.Paint obj) {
            this.DeletePaintAsync(obj, null);
        }
        
        public void DeletePaintAsync(NewOptics.SVC.Paint obj, object userState) {
            if ((this.onBeginDeletePaintDelegate == null)) {
                this.onBeginDeletePaintDelegate = new BeginOperationDelegate(this.OnBeginDeletePaint);
            }
            if ((this.onEndDeletePaintDelegate == null)) {
                this.onEndDeletePaintDelegate = new EndOperationDelegate(this.OnEndDeletePaint);
            }
            if ((this.onDeletePaintCompletedDelegate == null)) {
                this.onDeletePaintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePaintCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePaintDelegate, new object[] {
                        obj}, this.onEndDeletePaintDelegate, this.onDeletePaintCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Anamnese> GetAllAnamnese() {
            return base.Channel.GetAllAnamnese();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllAnamnese(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAnamnese(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Anamnese> EndGetAllAnamnese(System.IAsyncResult result) {
            return base.Channel.EndGetAllAnamnese(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAnamnese(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllAnamnese(callback, asyncState);
        }
        
        private object[] OnEndGetAllAnamnese(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Anamnese> retVal = this.EndGetAllAnamnese(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAnamneseCompleted(object state) {
            if ((this.GetAllAnamneseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAnamneseCompleted(this, new GetAllAnamneseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAnamneseAsync() {
            this.GetAllAnamneseAsync(null);
        }
        
        public void GetAllAnamneseAsync(object userState) {
            if ((this.onBeginGetAllAnamneseDelegate == null)) {
                this.onBeginGetAllAnamneseDelegate = new BeginOperationDelegate(this.OnBeginGetAllAnamnese);
            }
            if ((this.onEndGetAllAnamneseDelegate == null)) {
                this.onEndGetAllAnamneseDelegate = new EndOperationDelegate(this.OnEndGetAllAnamnese);
            }
            if ((this.onGetAllAnamneseCompletedDelegate == null)) {
                this.onGetAllAnamneseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAnamneseCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAnamneseDelegate, null, this.onEndGetAllAnamneseDelegate, this.onGetAllAnamneseCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Anamnese> GetAllAnamnesebycode(int code) {
            return base.Channel.GetAllAnamnesebycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllAnamnesebycode(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAnamnesebycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Anamnese> EndGetAllAnamnesebycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllAnamnesebycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAnamnesebycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginGetAllAnamnesebycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllAnamnesebycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Anamnese> retVal = this.EndGetAllAnamnesebycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAnamnesebycodeCompleted(object state) {
            if ((this.GetAllAnamnesebycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAnamnesebycodeCompleted(this, new GetAllAnamnesebycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAnamnesebycodeAsync(int code) {
            this.GetAllAnamnesebycodeAsync(code, null);
        }
        
        public void GetAllAnamnesebycodeAsync(int code, object userState) {
            if ((this.onBeginGetAllAnamnesebycodeDelegate == null)) {
                this.onBeginGetAllAnamnesebycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllAnamnesebycode);
            }
            if ((this.onEndGetAllAnamnesebycodeDelegate == null)) {
                this.onEndGetAllAnamnesebycodeDelegate = new EndOperationDelegate(this.OnEndGetAllAnamnesebycode);
            }
            if ((this.onGetAllAnamnesebycodeCompletedDelegate == null)) {
                this.onGetAllAnamnesebycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAnamnesebycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAnamnesebycodeDelegate, new object[] {
                        code}, this.onEndGetAllAnamnesebycodeDelegate, this.onGetAllAnamnesebycodeCompletedDelegate, userState);
        }
        
        public void InsertAnamnese(NewOptics.SVC.Anamnese obj) {
            base.Channel.InsertAnamnese(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertAnamnese(NewOptics.SVC.Anamnese obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertAnamnese(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertAnamnese(System.IAsyncResult result) {
            base.Channel.EndInsertAnamnese(result);
        }
        
        private System.IAsyncResult OnBeginInsertAnamnese(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Anamnese obj = ((NewOptics.SVC.Anamnese)(inValues[0]));
            return this.BeginInsertAnamnese(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertAnamnese(System.IAsyncResult result) {
            this.EndInsertAnamnese(result);
            return null;
        }
        
        private void OnInsertAnamneseCompleted(object state) {
            if ((this.InsertAnamneseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertAnamneseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertAnamneseAsync(NewOptics.SVC.Anamnese obj) {
            this.InsertAnamneseAsync(obj, null);
        }
        
        public void InsertAnamneseAsync(NewOptics.SVC.Anamnese obj, object userState) {
            if ((this.onBeginInsertAnamneseDelegate == null)) {
                this.onBeginInsertAnamneseDelegate = new BeginOperationDelegate(this.OnBeginInsertAnamnese);
            }
            if ((this.onEndInsertAnamneseDelegate == null)) {
                this.onEndInsertAnamneseDelegate = new EndOperationDelegate(this.OnEndInsertAnamnese);
            }
            if ((this.onInsertAnamneseCompletedDelegate == null)) {
                this.onInsertAnamneseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertAnamneseCompleted);
            }
            base.InvokeAsync(this.onBeginInsertAnamneseDelegate, new object[] {
                        obj}, this.onEndInsertAnamneseDelegate, this.onInsertAnamneseCompletedDelegate, userState);
        }
        
        public void UpdateAnamnese(NewOptics.SVC.Anamnese obj) {
            base.Channel.UpdateAnamnese(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAnamnese(NewOptics.SVC.Anamnese obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAnamnese(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateAnamnese(System.IAsyncResult result) {
            base.Channel.EndUpdateAnamnese(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAnamnese(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Anamnese obj = ((NewOptics.SVC.Anamnese)(inValues[0]));
            return this.BeginUpdateAnamnese(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateAnamnese(System.IAsyncResult result) {
            this.EndUpdateAnamnese(result);
            return null;
        }
        
        private void OnUpdateAnamneseCompleted(object state) {
            if ((this.UpdateAnamneseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAnamneseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAnamneseAsync(NewOptics.SVC.Anamnese obj) {
            this.UpdateAnamneseAsync(obj, null);
        }
        
        public void UpdateAnamneseAsync(NewOptics.SVC.Anamnese obj, object userState) {
            if ((this.onBeginUpdateAnamneseDelegate == null)) {
                this.onBeginUpdateAnamneseDelegate = new BeginOperationDelegate(this.OnBeginUpdateAnamnese);
            }
            if ((this.onEndUpdateAnamneseDelegate == null)) {
                this.onEndUpdateAnamneseDelegate = new EndOperationDelegate(this.OnEndUpdateAnamnese);
            }
            if ((this.onUpdateAnamneseCompletedDelegate == null)) {
                this.onUpdateAnamneseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAnamneseCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAnamneseDelegate, new object[] {
                        obj}, this.onEndUpdateAnamneseDelegate, this.onUpdateAnamneseCompletedDelegate, userState);
        }
        
        public void DeleteAnamnese(NewOptics.SVC.Anamnese obj) {
            base.Channel.DeleteAnamnese(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteAnamnese(NewOptics.SVC.Anamnese obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAnamnese(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteAnamnese(System.IAsyncResult result) {
            base.Channel.EndDeleteAnamnese(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAnamnese(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Anamnese obj = ((NewOptics.SVC.Anamnese)(inValues[0]));
            return this.BeginDeleteAnamnese(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteAnamnese(System.IAsyncResult result) {
            this.EndDeleteAnamnese(result);
            return null;
        }
        
        private void OnDeleteAnamneseCompleted(object state) {
            if ((this.DeleteAnamneseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAnamneseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAnamneseAsync(NewOptics.SVC.Anamnese obj) {
            this.DeleteAnamneseAsync(obj, null);
        }
        
        public void DeleteAnamneseAsync(NewOptics.SVC.Anamnese obj, object userState) {
            if ((this.onBeginDeleteAnamneseDelegate == null)) {
                this.onBeginDeleteAnamneseDelegate = new BeginOperationDelegate(this.OnBeginDeleteAnamnese);
            }
            if ((this.onEndDeleteAnamneseDelegate == null)) {
                this.onEndDeleteAnamneseDelegate = new EndOperationDelegate(this.OnEndDeleteAnamnese);
            }
            if ((this.onDeleteAnamneseCompletedDelegate == null)) {
                this.onDeleteAnamneseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAnamneseCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAnamneseDelegate, new object[] {
                        obj}, this.onEndDeleteAnamneseDelegate, this.onDeleteAnamneseCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire> GetAllExamenBinoculaire() {
            return base.Channel.GetAllExamenBinoculaire();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllExamenBinoculaire(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllExamenBinoculaire(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire> EndGetAllExamenBinoculaire(System.IAsyncResult result) {
            return base.Channel.EndGetAllExamenBinoculaire(result);
        }
        
        private System.IAsyncResult OnBeginGetAllExamenBinoculaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllExamenBinoculaire(callback, asyncState);
        }
        
        private object[] OnEndGetAllExamenBinoculaire(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire> retVal = this.EndGetAllExamenBinoculaire(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllExamenBinoculaireCompleted(object state) {
            if ((this.GetAllExamenBinoculaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllExamenBinoculaireCompleted(this, new GetAllExamenBinoculaireCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllExamenBinoculaireAsync() {
            this.GetAllExamenBinoculaireAsync(null);
        }
        
        public void GetAllExamenBinoculaireAsync(object userState) {
            if ((this.onBeginGetAllExamenBinoculaireDelegate == null)) {
                this.onBeginGetAllExamenBinoculaireDelegate = new BeginOperationDelegate(this.OnBeginGetAllExamenBinoculaire);
            }
            if ((this.onEndGetAllExamenBinoculaireDelegate == null)) {
                this.onEndGetAllExamenBinoculaireDelegate = new EndOperationDelegate(this.OnEndGetAllExamenBinoculaire);
            }
            if ((this.onGetAllExamenBinoculaireCompletedDelegate == null)) {
                this.onGetAllExamenBinoculaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllExamenBinoculaireCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllExamenBinoculaireDelegate, null, this.onEndGetAllExamenBinoculaireDelegate, this.onGetAllExamenBinoculaireCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire> GetAllExamenBinoculairebycode(int code) {
            return base.Channel.GetAllExamenBinoculairebycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllExamenBinoculairebycode(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllExamenBinoculairebycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire> EndGetAllExamenBinoculairebycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllExamenBinoculairebycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllExamenBinoculairebycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginGetAllExamenBinoculairebycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllExamenBinoculairebycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.ExamenBinoculaire> retVal = this.EndGetAllExamenBinoculairebycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllExamenBinoculairebycodeCompleted(object state) {
            if ((this.GetAllExamenBinoculairebycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllExamenBinoculairebycodeCompleted(this, new GetAllExamenBinoculairebycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllExamenBinoculairebycodeAsync(int code) {
            this.GetAllExamenBinoculairebycodeAsync(code, null);
        }
        
        public void GetAllExamenBinoculairebycodeAsync(int code, object userState) {
            if ((this.onBeginGetAllExamenBinoculairebycodeDelegate == null)) {
                this.onBeginGetAllExamenBinoculairebycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllExamenBinoculairebycode);
            }
            if ((this.onEndGetAllExamenBinoculairebycodeDelegate == null)) {
                this.onEndGetAllExamenBinoculairebycodeDelegate = new EndOperationDelegate(this.OnEndGetAllExamenBinoculairebycode);
            }
            if ((this.onGetAllExamenBinoculairebycodeCompletedDelegate == null)) {
                this.onGetAllExamenBinoculairebycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllExamenBinoculairebycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllExamenBinoculairebycodeDelegate, new object[] {
                        code}, this.onEndGetAllExamenBinoculairebycodeDelegate, this.onGetAllExamenBinoculairebycodeCompletedDelegate, userState);
        }
        
        public void InsertExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire obj) {
            base.Channel.InsertExamenBinoculaire(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertExamenBinoculaire(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertExamenBinoculaire(System.IAsyncResult result) {
            base.Channel.EndInsertExamenBinoculaire(result);
        }
        
        private System.IAsyncResult OnBeginInsertExamenBinoculaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.ExamenBinoculaire obj = ((NewOptics.SVC.ExamenBinoculaire)(inValues[0]));
            return this.BeginInsertExamenBinoculaire(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertExamenBinoculaire(System.IAsyncResult result) {
            this.EndInsertExamenBinoculaire(result);
            return null;
        }
        
        private void OnInsertExamenBinoculaireCompleted(object state) {
            if ((this.InsertExamenBinoculaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertExamenBinoculaireCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertExamenBinoculaireAsync(NewOptics.SVC.ExamenBinoculaire obj) {
            this.InsertExamenBinoculaireAsync(obj, null);
        }
        
        public void InsertExamenBinoculaireAsync(NewOptics.SVC.ExamenBinoculaire obj, object userState) {
            if ((this.onBeginInsertExamenBinoculaireDelegate == null)) {
                this.onBeginInsertExamenBinoculaireDelegate = new BeginOperationDelegate(this.OnBeginInsertExamenBinoculaire);
            }
            if ((this.onEndInsertExamenBinoculaireDelegate == null)) {
                this.onEndInsertExamenBinoculaireDelegate = new EndOperationDelegate(this.OnEndInsertExamenBinoculaire);
            }
            if ((this.onInsertExamenBinoculaireCompletedDelegate == null)) {
                this.onInsertExamenBinoculaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertExamenBinoculaireCompleted);
            }
            base.InvokeAsync(this.onBeginInsertExamenBinoculaireDelegate, new object[] {
                        obj}, this.onEndInsertExamenBinoculaireDelegate, this.onInsertExamenBinoculaireCompletedDelegate, userState);
        }
        
        public void UpdateExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire obj) {
            base.Channel.UpdateExamenBinoculaire(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateExamenBinoculaire(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateExamenBinoculaire(System.IAsyncResult result) {
            base.Channel.EndUpdateExamenBinoculaire(result);
        }
        
        private System.IAsyncResult OnBeginUpdateExamenBinoculaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.ExamenBinoculaire obj = ((NewOptics.SVC.ExamenBinoculaire)(inValues[0]));
            return this.BeginUpdateExamenBinoculaire(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateExamenBinoculaire(System.IAsyncResult result) {
            this.EndUpdateExamenBinoculaire(result);
            return null;
        }
        
        private void OnUpdateExamenBinoculaireCompleted(object state) {
            if ((this.UpdateExamenBinoculaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateExamenBinoculaireCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateExamenBinoculaireAsync(NewOptics.SVC.ExamenBinoculaire obj) {
            this.UpdateExamenBinoculaireAsync(obj, null);
        }
        
        public void UpdateExamenBinoculaireAsync(NewOptics.SVC.ExamenBinoculaire obj, object userState) {
            if ((this.onBeginUpdateExamenBinoculaireDelegate == null)) {
                this.onBeginUpdateExamenBinoculaireDelegate = new BeginOperationDelegate(this.OnBeginUpdateExamenBinoculaire);
            }
            if ((this.onEndUpdateExamenBinoculaireDelegate == null)) {
                this.onEndUpdateExamenBinoculaireDelegate = new EndOperationDelegate(this.OnEndUpdateExamenBinoculaire);
            }
            if ((this.onUpdateExamenBinoculaireCompletedDelegate == null)) {
                this.onUpdateExamenBinoculaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateExamenBinoculaireCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateExamenBinoculaireDelegate, new object[] {
                        obj}, this.onEndUpdateExamenBinoculaireDelegate, this.onUpdateExamenBinoculaireCompletedDelegate, userState);
        }
        
        public void DeleteExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire obj) {
            base.Channel.DeleteExamenBinoculaire(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteExamenBinoculaire(NewOptics.SVC.ExamenBinoculaire obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteExamenBinoculaire(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteExamenBinoculaire(System.IAsyncResult result) {
            base.Channel.EndDeleteExamenBinoculaire(result);
        }
        
        private System.IAsyncResult OnBeginDeleteExamenBinoculaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.ExamenBinoculaire obj = ((NewOptics.SVC.ExamenBinoculaire)(inValues[0]));
            return this.BeginDeleteExamenBinoculaire(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteExamenBinoculaire(System.IAsyncResult result) {
            this.EndDeleteExamenBinoculaire(result);
            return null;
        }
        
        private void OnDeleteExamenBinoculaireCompleted(object state) {
            if ((this.DeleteExamenBinoculaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteExamenBinoculaireCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteExamenBinoculaireAsync(NewOptics.SVC.ExamenBinoculaire obj) {
            this.DeleteExamenBinoculaireAsync(obj, null);
        }
        
        public void DeleteExamenBinoculaireAsync(NewOptics.SVC.ExamenBinoculaire obj, object userState) {
            if ((this.onBeginDeleteExamenBinoculaireDelegate == null)) {
                this.onBeginDeleteExamenBinoculaireDelegate = new BeginOperationDelegate(this.OnBeginDeleteExamenBinoculaire);
            }
            if ((this.onEndDeleteExamenBinoculaireDelegate == null)) {
                this.onEndDeleteExamenBinoculaireDelegate = new EndOperationDelegate(this.OnEndDeleteExamenBinoculaire);
            }
            if ((this.onDeleteExamenBinoculaireCompletedDelegate == null)) {
                this.onDeleteExamenBinoculaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteExamenBinoculaireCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteExamenBinoculaireDelegate, new object[] {
                        obj}, this.onEndDeleteExamenBinoculaireDelegate, this.onDeleteExamenBinoculaireCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.examenopto> GetAllExamensOptométriques() {
            return base.Channel.GetAllExamensOptométriques();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllExamensOptométriques(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllExamensOptométriques(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.examenopto> EndGetAllExamensOptométriques(System.IAsyncResult result) {
            return base.Channel.EndGetAllExamensOptométriques(result);
        }
        
        private System.IAsyncResult OnBeginGetAllExamensOptométriques(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllExamensOptométriques(callback, asyncState);
        }
        
        private object[] OnEndGetAllExamensOptométriques(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.examenopto> retVal = this.EndGetAllExamensOptométriques(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllExamensOptométriquesCompleted(object state) {
            if ((this.GetAllExamensOptométriquesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllExamensOptométriquesCompleted(this, new GetAllExamensOptométriquesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllExamensOptométriquesAsync() {
            this.GetAllExamensOptométriquesAsync(null);
        }
        
        public void GetAllExamensOptométriquesAsync(object userState) {
            if ((this.onBeginGetAllExamensOptométriquesDelegate == null)) {
                this.onBeginGetAllExamensOptométriquesDelegate = new BeginOperationDelegate(this.OnBeginGetAllExamensOptométriques);
            }
            if ((this.onEndGetAllExamensOptométriquesDelegate == null)) {
                this.onEndGetAllExamensOptométriquesDelegate = new EndOperationDelegate(this.OnEndGetAllExamensOptométriques);
            }
            if ((this.onGetAllExamensOptométriquesCompletedDelegate == null)) {
                this.onGetAllExamensOptométriquesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllExamensOptométriquesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllExamensOptométriquesDelegate, null, this.onEndGetAllExamensOptométriquesDelegate, this.onGetAllExamensOptométriquesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.examenopto> GetAllExamensOptométriquesbycode(int code) {
            return base.Channel.GetAllExamensOptométriquesbycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllExamensOptométriquesbycode(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllExamensOptométriquesbycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.examenopto> EndGetAllExamensOptométriquesbycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllExamensOptométriquesbycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllExamensOptométriquesbycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginGetAllExamensOptométriquesbycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllExamensOptométriquesbycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.examenopto> retVal = this.EndGetAllExamensOptométriquesbycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllExamensOptométriquesbycodeCompleted(object state) {
            if ((this.GetAllExamensOptométriquesbycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllExamensOptométriquesbycodeCompleted(this, new GetAllExamensOptométriquesbycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllExamensOptométriquesbycodeAsync(int code) {
            this.GetAllExamensOptométriquesbycodeAsync(code, null);
        }
        
        public void GetAllExamensOptométriquesbycodeAsync(int code, object userState) {
            if ((this.onBeginGetAllExamensOptométriquesbycodeDelegate == null)) {
                this.onBeginGetAllExamensOptométriquesbycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllExamensOptométriquesbycode);
            }
            if ((this.onEndGetAllExamensOptométriquesbycodeDelegate == null)) {
                this.onEndGetAllExamensOptométriquesbycodeDelegate = new EndOperationDelegate(this.OnEndGetAllExamensOptométriquesbycode);
            }
            if ((this.onGetAllExamensOptométriquesbycodeCompletedDelegate == null)) {
                this.onGetAllExamensOptométriquesbycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllExamensOptométriquesbycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllExamensOptométriquesbycodeDelegate, new object[] {
                        code}, this.onEndGetAllExamensOptométriquesbycodeDelegate, this.onGetAllExamensOptométriquesbycodeCompletedDelegate, userState);
        }
        
        public void InsertExamensOptométriques(NewOptics.SVC.examenopto obj) {
            base.Channel.InsertExamensOptométriques(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertExamensOptométriques(NewOptics.SVC.examenopto obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertExamensOptométriques(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertExamensOptométriques(System.IAsyncResult result) {
            base.Channel.EndInsertExamensOptométriques(result);
        }
        
        private System.IAsyncResult OnBeginInsertExamensOptométriques(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.examenopto obj = ((NewOptics.SVC.examenopto)(inValues[0]));
            return this.BeginInsertExamensOptométriques(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertExamensOptométriques(System.IAsyncResult result) {
            this.EndInsertExamensOptométriques(result);
            return null;
        }
        
        private void OnInsertExamensOptométriquesCompleted(object state) {
            if ((this.InsertExamensOptométriquesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertExamensOptométriquesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertExamensOptométriquesAsync(NewOptics.SVC.examenopto obj) {
            this.InsertExamensOptométriquesAsync(obj, null);
        }
        
        public void InsertExamensOptométriquesAsync(NewOptics.SVC.examenopto obj, object userState) {
            if ((this.onBeginInsertExamensOptométriquesDelegate == null)) {
                this.onBeginInsertExamensOptométriquesDelegate = new BeginOperationDelegate(this.OnBeginInsertExamensOptométriques);
            }
            if ((this.onEndInsertExamensOptométriquesDelegate == null)) {
                this.onEndInsertExamensOptométriquesDelegate = new EndOperationDelegate(this.OnEndInsertExamensOptométriques);
            }
            if ((this.onInsertExamensOptométriquesCompletedDelegate == null)) {
                this.onInsertExamensOptométriquesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertExamensOptométriquesCompleted);
            }
            base.InvokeAsync(this.onBeginInsertExamensOptométriquesDelegate, new object[] {
                        obj}, this.onEndInsertExamensOptométriquesDelegate, this.onInsertExamensOptométriquesCompletedDelegate, userState);
        }
        
        public void UpdateExamensOptométriques(NewOptics.SVC.examenopto obj) {
            base.Channel.UpdateExamensOptométriques(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateExamensOptométriques(NewOptics.SVC.examenopto obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateExamensOptométriques(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateExamensOptométriques(System.IAsyncResult result) {
            base.Channel.EndUpdateExamensOptométriques(result);
        }
        
        private System.IAsyncResult OnBeginUpdateExamensOptométriques(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.examenopto obj = ((NewOptics.SVC.examenopto)(inValues[0]));
            return this.BeginUpdateExamensOptométriques(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateExamensOptométriques(System.IAsyncResult result) {
            this.EndUpdateExamensOptométriques(result);
            return null;
        }
        
        private void OnUpdateExamensOptométriquesCompleted(object state) {
            if ((this.UpdateExamensOptométriquesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateExamensOptométriquesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateExamensOptométriquesAsync(NewOptics.SVC.examenopto obj) {
            this.UpdateExamensOptométriquesAsync(obj, null);
        }
        
        public void UpdateExamensOptométriquesAsync(NewOptics.SVC.examenopto obj, object userState) {
            if ((this.onBeginUpdateExamensOptométriquesDelegate == null)) {
                this.onBeginUpdateExamensOptométriquesDelegate = new BeginOperationDelegate(this.OnBeginUpdateExamensOptométriques);
            }
            if ((this.onEndUpdateExamensOptométriquesDelegate == null)) {
                this.onEndUpdateExamensOptométriquesDelegate = new EndOperationDelegate(this.OnEndUpdateExamensOptométriques);
            }
            if ((this.onUpdateExamensOptométriquesCompletedDelegate == null)) {
                this.onUpdateExamensOptométriquesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateExamensOptométriquesCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateExamensOptométriquesDelegate, new object[] {
                        obj}, this.onEndUpdateExamensOptométriquesDelegate, this.onUpdateExamensOptométriquesCompletedDelegate, userState);
        }
        
        public void DeleteExamensOptométriques(NewOptics.SVC.examenopto obj) {
            base.Channel.DeleteExamensOptométriques(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteExamensOptométriques(NewOptics.SVC.examenopto obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteExamensOptométriques(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteExamensOptométriques(System.IAsyncResult result) {
            base.Channel.EndDeleteExamensOptométriques(result);
        }
        
        private System.IAsyncResult OnBeginDeleteExamensOptométriques(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.examenopto obj = ((NewOptics.SVC.examenopto)(inValues[0]));
            return this.BeginDeleteExamensOptométriques(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteExamensOptométriques(System.IAsyncResult result) {
            this.EndDeleteExamensOptométriques(result);
            return null;
        }
        
        private void OnDeleteExamensOptométriquesCompleted(object state) {
            if ((this.DeleteExamensOptométriquesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteExamensOptométriquesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteExamensOptométriquesAsync(NewOptics.SVC.examenopto obj) {
            this.DeleteExamensOptométriquesAsync(obj, null);
        }
        
        public void DeleteExamensOptométriquesAsync(NewOptics.SVC.examenopto obj, object userState) {
            if ((this.onBeginDeleteExamensOptométriquesDelegate == null)) {
                this.onBeginDeleteExamensOptométriquesDelegate = new BeginOperationDelegate(this.OnBeginDeleteExamensOptométriques);
            }
            if ((this.onEndDeleteExamensOptométriquesDelegate == null)) {
                this.onEndDeleteExamensOptométriquesDelegate = new EndOperationDelegate(this.OnEndDeleteExamensOptométriques);
            }
            if ((this.onDeleteExamensOptométriquesCompletedDelegate == null)) {
                this.onDeleteExamensOptométriquesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteExamensOptométriquesCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteExamensOptométriquesDelegate, new object[] {
                        obj}, this.onEndDeleteExamensOptométriquesDelegate, this.onDeleteExamensOptométriquesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.MontureSupplement> GetAllMontureSupplement() {
            return base.Channel.GetAllMontureSupplement();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMontureSupplement(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMontureSupplement(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.MontureSupplement> EndGetAllMontureSupplement(System.IAsyncResult result) {
            return base.Channel.EndGetAllMontureSupplement(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMontureSupplement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllMontureSupplement(callback, asyncState);
        }
        
        private object[] OnEndGetAllMontureSupplement(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.MontureSupplement> retVal = this.EndGetAllMontureSupplement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMontureSupplementCompleted(object state) {
            if ((this.GetAllMontureSupplementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMontureSupplementCompleted(this, new GetAllMontureSupplementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMontureSupplementAsync() {
            this.GetAllMontureSupplementAsync(null);
        }
        
        public void GetAllMontureSupplementAsync(object userState) {
            if ((this.onBeginGetAllMontureSupplementDelegate == null)) {
                this.onBeginGetAllMontureSupplementDelegate = new BeginOperationDelegate(this.OnBeginGetAllMontureSupplement);
            }
            if ((this.onEndGetAllMontureSupplementDelegate == null)) {
                this.onEndGetAllMontureSupplementDelegate = new EndOperationDelegate(this.OnEndGetAllMontureSupplement);
            }
            if ((this.onGetAllMontureSupplementCompletedDelegate == null)) {
                this.onGetAllMontureSupplementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMontureSupplementCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMontureSupplementDelegate, null, this.onEndGetAllMontureSupplementDelegate, this.onGetAllMontureSupplementCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.MontureSupplement> GetAllMontureSupplementbycle(string code) {
            return base.Channel.GetAllMontureSupplementbycle(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMontureSupplementbycle(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMontureSupplementbycle(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.MontureSupplement> EndGetAllMontureSupplementbycle(System.IAsyncResult result) {
            return base.Channel.EndGetAllMontureSupplementbycle(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMontureSupplementbycle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetAllMontureSupplementbycle(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllMontureSupplementbycle(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.MontureSupplement> retVal = this.EndGetAllMontureSupplementbycle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMontureSupplementbycleCompleted(object state) {
            if ((this.GetAllMontureSupplementbycleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMontureSupplementbycleCompleted(this, new GetAllMontureSupplementbycleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMontureSupplementbycleAsync(string code) {
            this.GetAllMontureSupplementbycleAsync(code, null);
        }
        
        public void GetAllMontureSupplementbycleAsync(string code, object userState) {
            if ((this.onBeginGetAllMontureSupplementbycleDelegate == null)) {
                this.onBeginGetAllMontureSupplementbycleDelegate = new BeginOperationDelegate(this.OnBeginGetAllMontureSupplementbycle);
            }
            if ((this.onEndGetAllMontureSupplementbycleDelegate == null)) {
                this.onEndGetAllMontureSupplementbycleDelegate = new EndOperationDelegate(this.OnEndGetAllMontureSupplementbycle);
            }
            if ((this.onGetAllMontureSupplementbycleCompletedDelegate == null)) {
                this.onGetAllMontureSupplementbycleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMontureSupplementbycleCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMontureSupplementbycleDelegate, new object[] {
                        code}, this.onEndGetAllMontureSupplementbycleDelegate, this.onGetAllMontureSupplementbycleCompletedDelegate, userState);
        }
        
        public void InsertMontureSupplement(NewOptics.SVC.MontureSupplement obj) {
            base.Channel.InsertMontureSupplement(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertMontureSupplement(NewOptics.SVC.MontureSupplement obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertMontureSupplement(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertMontureSupplement(System.IAsyncResult result) {
            base.Channel.EndInsertMontureSupplement(result);
        }
        
        private System.IAsyncResult OnBeginInsertMontureSupplement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.MontureSupplement obj = ((NewOptics.SVC.MontureSupplement)(inValues[0]));
            return this.BeginInsertMontureSupplement(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertMontureSupplement(System.IAsyncResult result) {
            this.EndInsertMontureSupplement(result);
            return null;
        }
        
        private void OnInsertMontureSupplementCompleted(object state) {
            if ((this.InsertMontureSupplementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertMontureSupplementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertMontureSupplementAsync(NewOptics.SVC.MontureSupplement obj) {
            this.InsertMontureSupplementAsync(obj, null);
        }
        
        public void InsertMontureSupplementAsync(NewOptics.SVC.MontureSupplement obj, object userState) {
            if ((this.onBeginInsertMontureSupplementDelegate == null)) {
                this.onBeginInsertMontureSupplementDelegate = new BeginOperationDelegate(this.OnBeginInsertMontureSupplement);
            }
            if ((this.onEndInsertMontureSupplementDelegate == null)) {
                this.onEndInsertMontureSupplementDelegate = new EndOperationDelegate(this.OnEndInsertMontureSupplement);
            }
            if ((this.onInsertMontureSupplementCompletedDelegate == null)) {
                this.onInsertMontureSupplementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertMontureSupplementCompleted);
            }
            base.InvokeAsync(this.onBeginInsertMontureSupplementDelegate, new object[] {
                        obj}, this.onEndInsertMontureSupplementDelegate, this.onInsertMontureSupplementCompletedDelegate, userState);
        }
        
        public void UpdateMontureSupplement(NewOptics.SVC.MontureSupplement obj) {
            base.Channel.UpdateMontureSupplement(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateMontureSupplement(NewOptics.SVC.MontureSupplement obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMontureSupplement(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateMontureSupplement(System.IAsyncResult result) {
            base.Channel.EndUpdateMontureSupplement(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMontureSupplement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.MontureSupplement obj = ((NewOptics.SVC.MontureSupplement)(inValues[0]));
            return this.BeginUpdateMontureSupplement(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateMontureSupplement(System.IAsyncResult result) {
            this.EndUpdateMontureSupplement(result);
            return null;
        }
        
        private void OnUpdateMontureSupplementCompleted(object state) {
            if ((this.UpdateMontureSupplementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMontureSupplementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMontureSupplementAsync(NewOptics.SVC.MontureSupplement obj) {
            this.UpdateMontureSupplementAsync(obj, null);
        }
        
        public void UpdateMontureSupplementAsync(NewOptics.SVC.MontureSupplement obj, object userState) {
            if ((this.onBeginUpdateMontureSupplementDelegate == null)) {
                this.onBeginUpdateMontureSupplementDelegate = new BeginOperationDelegate(this.OnBeginUpdateMontureSupplement);
            }
            if ((this.onEndUpdateMontureSupplementDelegate == null)) {
                this.onEndUpdateMontureSupplementDelegate = new EndOperationDelegate(this.OnEndUpdateMontureSupplement);
            }
            if ((this.onUpdateMontureSupplementCompletedDelegate == null)) {
                this.onUpdateMontureSupplementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMontureSupplementCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMontureSupplementDelegate, new object[] {
                        obj}, this.onEndUpdateMontureSupplementDelegate, this.onUpdateMontureSupplementCompletedDelegate, userState);
        }
        
        public void DeleteMontureSupplement(NewOptics.SVC.MontureSupplement obj) {
            base.Channel.DeleteMontureSupplement(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteMontureSupplement(NewOptics.SVC.MontureSupplement obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMontureSupplement(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteMontureSupplement(System.IAsyncResult result) {
            base.Channel.EndDeleteMontureSupplement(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMontureSupplement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.MontureSupplement obj = ((NewOptics.SVC.MontureSupplement)(inValues[0]));
            return this.BeginDeleteMontureSupplement(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteMontureSupplement(System.IAsyncResult result) {
            this.EndDeleteMontureSupplement(result);
            return null;
        }
        
        private void OnDeleteMontureSupplementCompleted(object state) {
            if ((this.DeleteMontureSupplementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMontureSupplementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMontureSupplementAsync(NewOptics.SVC.MontureSupplement obj) {
            this.DeleteMontureSupplementAsync(obj, null);
        }
        
        public void DeleteMontureSupplementAsync(NewOptics.SVC.MontureSupplement obj, object userState) {
            if ((this.onBeginDeleteMontureSupplementDelegate == null)) {
                this.onBeginDeleteMontureSupplementDelegate = new BeginOperationDelegate(this.OnBeginDeleteMontureSupplement);
            }
            if ((this.onEndDeleteMontureSupplementDelegate == null)) {
                this.onEndDeleteMontureSupplementDelegate = new EndOperationDelegate(this.OnEndDeleteMontureSupplement);
            }
            if ((this.onDeleteMontureSupplementCompletedDelegate == null)) {
                this.onDeleteMontureSupplementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMontureSupplementCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMontureSupplementDelegate, new object[] {
                        obj}, this.onEndDeleteMontureSupplementDelegate, this.onDeleteMontureSupplementCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Monture> GetAllMonture() {
            return base.Channel.GetAllMonture();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMonture(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMonture(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Monture> EndGetAllMonture(System.IAsyncResult result) {
            return base.Channel.EndGetAllMonture(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMonture(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllMonture(callback, asyncState);
        }
        
        private object[] OnEndGetAllMonture(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Monture> retVal = this.EndGetAllMonture(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMontureCompleted(object state) {
            if ((this.GetAllMontureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMontureCompleted(this, new GetAllMontureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMontureAsync() {
            this.GetAllMontureAsync(null);
        }
        
        public void GetAllMontureAsync(object userState) {
            if ((this.onBeginGetAllMontureDelegate == null)) {
                this.onBeginGetAllMontureDelegate = new BeginOperationDelegate(this.OnBeginGetAllMonture);
            }
            if ((this.onEndGetAllMontureDelegate == null)) {
                this.onEndGetAllMontureDelegate = new EndOperationDelegate(this.OnEndGetAllMonture);
            }
            if ((this.onGetAllMontureCompletedDelegate == null)) {
                this.onGetAllMontureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMontureCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMontureDelegate, null, this.onEndGetAllMontureDelegate, this.onGetAllMontureCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Monture> GetAllMontureDate(System.DateTime date1, System.DateTime date2) {
            return base.Channel.GetAllMontureDate(date1, date2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMontureDate(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMontureDate(date1, date2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Monture> EndGetAllMontureDate(System.IAsyncResult result) {
            return base.Channel.EndGetAllMontureDate(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMontureDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime date1 = ((System.DateTime)(inValues[0]));
            System.DateTime date2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllMontureDate(date1, date2, callback, asyncState);
        }
        
        private object[] OnEndGetAllMontureDate(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Monture> retVal = this.EndGetAllMontureDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMontureDateCompleted(object state) {
            if ((this.GetAllMontureDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMontureDateCompleted(this, new GetAllMontureDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMontureDateAsync(System.DateTime date1, System.DateTime date2) {
            this.GetAllMontureDateAsync(date1, date2, null);
        }
        
        public void GetAllMontureDateAsync(System.DateTime date1, System.DateTime date2, object userState) {
            if ((this.onBeginGetAllMontureDateDelegate == null)) {
                this.onBeginGetAllMontureDateDelegate = new BeginOperationDelegate(this.OnBeginGetAllMontureDate);
            }
            if ((this.onEndGetAllMontureDateDelegate == null)) {
                this.onEndGetAllMontureDateDelegate = new EndOperationDelegate(this.OnEndGetAllMontureDate);
            }
            if ((this.onGetAllMontureDateCompletedDelegate == null)) {
                this.onGetAllMontureDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMontureDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMontureDateDelegate, new object[] {
                        date1,
                        date2}, this.onEndGetAllMontureDateDelegate, this.onGetAllMontureDateCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Monture> GetAllMontureDateLivraison(System.DateTime date1, System.DateTime date2) {
            return base.Channel.GetAllMontureDateLivraison(date1, date2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMontureDateLivraison(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMontureDateLivraison(date1, date2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Monture> EndGetAllMontureDateLivraison(System.IAsyncResult result) {
            return base.Channel.EndGetAllMontureDateLivraison(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMontureDateLivraison(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime date1 = ((System.DateTime)(inValues[0]));
            System.DateTime date2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllMontureDateLivraison(date1, date2, callback, asyncState);
        }
        
        private object[] OnEndGetAllMontureDateLivraison(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Monture> retVal = this.EndGetAllMontureDateLivraison(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMontureDateLivraisonCompleted(object state) {
            if ((this.GetAllMontureDateLivraisonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMontureDateLivraisonCompleted(this, new GetAllMontureDateLivraisonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMontureDateLivraisonAsync(System.DateTime date1, System.DateTime date2) {
            this.GetAllMontureDateLivraisonAsync(date1, date2, null);
        }
        
        public void GetAllMontureDateLivraisonAsync(System.DateTime date1, System.DateTime date2, object userState) {
            if ((this.onBeginGetAllMontureDateLivraisonDelegate == null)) {
                this.onBeginGetAllMontureDateLivraisonDelegate = new BeginOperationDelegate(this.OnBeginGetAllMontureDateLivraison);
            }
            if ((this.onEndGetAllMontureDateLivraisonDelegate == null)) {
                this.onEndGetAllMontureDateLivraisonDelegate = new EndOperationDelegate(this.OnEndGetAllMontureDateLivraison);
            }
            if ((this.onGetAllMontureDateLivraisonCompletedDelegate == null)) {
                this.onGetAllMontureDateLivraisonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMontureDateLivraisonCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMontureDateLivraisonDelegate, new object[] {
                        date1,
                        date2}, this.onEndGetAllMontureDateLivraisonDelegate, this.onGetAllMontureDateLivraisonCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Monture> GetAllMonturebyDossier(string code) {
            return base.Channel.GetAllMonturebyDossier(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMonturebyDossier(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMonturebyDossier(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Monture> EndGetAllMonturebyDossier(System.IAsyncResult result) {
            return base.Channel.EndGetAllMonturebyDossier(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMonturebyDossier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetAllMonturebyDossier(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllMonturebyDossier(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Monture> retVal = this.EndGetAllMonturebyDossier(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMonturebyDossierCompleted(object state) {
            if ((this.GetAllMonturebyDossierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMonturebyDossierCompleted(this, new GetAllMonturebyDossierCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMonturebyDossierAsync(string code) {
            this.GetAllMonturebyDossierAsync(code, null);
        }
        
        public void GetAllMonturebyDossierAsync(string code, object userState) {
            if ((this.onBeginGetAllMonturebyDossierDelegate == null)) {
                this.onBeginGetAllMonturebyDossierDelegate = new BeginOperationDelegate(this.OnBeginGetAllMonturebyDossier);
            }
            if ((this.onEndGetAllMonturebyDossierDelegate == null)) {
                this.onEndGetAllMonturebyDossierDelegate = new EndOperationDelegate(this.OnEndGetAllMonturebyDossier);
            }
            if ((this.onGetAllMonturebyDossierCompletedDelegate == null)) {
                this.onGetAllMonturebyDossierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMonturebyDossierCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMonturebyDossierDelegate, new object[] {
                        code}, this.onEndGetAllMonturebyDossierDelegate, this.onGetAllMonturebyDossierCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Monture> GetAllMonturebycodebar(string code) {
            return base.Channel.GetAllMonturebycodebar(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMonturebycodebar(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMonturebycodebar(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Monture> EndGetAllMonturebycodebar(System.IAsyncResult result) {
            return base.Channel.EndGetAllMonturebycodebar(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMonturebycodebar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetAllMonturebycodebar(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllMonturebycodebar(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Monture> retVal = this.EndGetAllMonturebycodebar(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMonturebycodebarCompleted(object state) {
            if ((this.GetAllMonturebycodebarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMonturebycodebarCompleted(this, new GetAllMonturebycodebarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMonturebycodebarAsync(string code) {
            this.GetAllMonturebycodebarAsync(code, null);
        }
        
        public void GetAllMonturebycodebarAsync(string code, object userState) {
            if ((this.onBeginGetAllMonturebycodebarDelegate == null)) {
                this.onBeginGetAllMonturebycodebarDelegate = new BeginOperationDelegate(this.OnBeginGetAllMonturebycodebar);
            }
            if ((this.onEndGetAllMonturebycodebarDelegate == null)) {
                this.onEndGetAllMonturebycodebarDelegate = new EndOperationDelegate(this.OnEndGetAllMonturebycodebar);
            }
            if ((this.onGetAllMonturebycodebarCompletedDelegate == null)) {
                this.onGetAllMonturebycodebarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMonturebycodebarCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMonturebycodebarDelegate, new object[] {
                        code}, this.onEndGetAllMonturebycodebarDelegate, this.onGetAllMonturebycodebarCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Monture> GetAllMonturebycode(int code) {
            return base.Channel.GetAllMonturebycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMonturebycode(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMonturebycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Monture> EndGetAllMonturebycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllMonturebycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMonturebycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginGetAllMonturebycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllMonturebycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Monture> retVal = this.EndGetAllMonturebycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMonturebycodeCompleted(object state) {
            if ((this.GetAllMonturebycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMonturebycodeCompleted(this, new GetAllMonturebycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMonturebycodeAsync(int code) {
            this.GetAllMonturebycodeAsync(code, null);
        }
        
        public void GetAllMonturebycodeAsync(int code, object userState) {
            if ((this.onBeginGetAllMonturebycodeDelegate == null)) {
                this.onBeginGetAllMonturebycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllMonturebycode);
            }
            if ((this.onEndGetAllMonturebycodeDelegate == null)) {
                this.onEndGetAllMonturebycodeDelegate = new EndOperationDelegate(this.OnEndGetAllMonturebycode);
            }
            if ((this.onGetAllMonturebycodeCompletedDelegate == null)) {
                this.onGetAllMonturebycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMonturebycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMonturebycodeDelegate, new object[] {
                        code}, this.onEndGetAllMonturebycodeDelegate, this.onGetAllMonturebycodeCompletedDelegate, userState);
        }
        
        public void InsertMonture(NewOptics.SVC.Monture obj) {
            base.Channel.InsertMonture(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertMonture(NewOptics.SVC.Monture obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertMonture(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertMonture(System.IAsyncResult result) {
            base.Channel.EndInsertMonture(result);
        }
        
        private System.IAsyncResult OnBeginInsertMonture(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Monture obj = ((NewOptics.SVC.Monture)(inValues[0]));
            return this.BeginInsertMonture(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertMonture(System.IAsyncResult result) {
            this.EndInsertMonture(result);
            return null;
        }
        
        private void OnInsertMontureCompleted(object state) {
            if ((this.InsertMontureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertMontureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertMontureAsync(NewOptics.SVC.Monture obj) {
            this.InsertMontureAsync(obj, null);
        }
        
        public void InsertMontureAsync(NewOptics.SVC.Monture obj, object userState) {
            if ((this.onBeginInsertMontureDelegate == null)) {
                this.onBeginInsertMontureDelegate = new BeginOperationDelegate(this.OnBeginInsertMonture);
            }
            if ((this.onEndInsertMontureDelegate == null)) {
                this.onEndInsertMontureDelegate = new EndOperationDelegate(this.OnEndInsertMonture);
            }
            if ((this.onInsertMontureCompletedDelegate == null)) {
                this.onInsertMontureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertMontureCompleted);
            }
            base.InvokeAsync(this.onBeginInsertMontureDelegate, new object[] {
                        obj}, this.onEndInsertMontureDelegate, this.onInsertMontureCompletedDelegate, userState);
        }
        
        public void UpdateMonture(NewOptics.SVC.Monture obj) {
            base.Channel.UpdateMonture(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateMonture(NewOptics.SVC.Monture obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMonture(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateMonture(System.IAsyncResult result) {
            base.Channel.EndUpdateMonture(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMonture(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Monture obj = ((NewOptics.SVC.Monture)(inValues[0]));
            return this.BeginUpdateMonture(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateMonture(System.IAsyncResult result) {
            this.EndUpdateMonture(result);
            return null;
        }
        
        private void OnUpdateMontureCompleted(object state) {
            if ((this.UpdateMontureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMontureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMontureAsync(NewOptics.SVC.Monture obj) {
            this.UpdateMontureAsync(obj, null);
        }
        
        public void UpdateMontureAsync(NewOptics.SVC.Monture obj, object userState) {
            if ((this.onBeginUpdateMontureDelegate == null)) {
                this.onBeginUpdateMontureDelegate = new BeginOperationDelegate(this.OnBeginUpdateMonture);
            }
            if ((this.onEndUpdateMontureDelegate == null)) {
                this.onEndUpdateMontureDelegate = new EndOperationDelegate(this.OnEndUpdateMonture);
            }
            if ((this.onUpdateMontureCompletedDelegate == null)) {
                this.onUpdateMontureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMontureCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMontureDelegate, new object[] {
                        obj}, this.onEndUpdateMontureDelegate, this.onUpdateMontureCompletedDelegate, userState);
        }
        
        public void DeleteMonture(NewOptics.SVC.Monture obj) {
            base.Channel.DeleteMonture(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteMonture(NewOptics.SVC.Monture obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMonture(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteMonture(System.IAsyncResult result) {
            base.Channel.EndDeleteMonture(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMonture(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Monture obj = ((NewOptics.SVC.Monture)(inValues[0]));
            return this.BeginDeleteMonture(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteMonture(System.IAsyncResult result) {
            this.EndDeleteMonture(result);
            return null;
        }
        
        private void OnDeleteMontureCompleted(object state) {
            if ((this.DeleteMontureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMontureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMontureAsync(NewOptics.SVC.Monture obj) {
            this.DeleteMontureAsync(obj, null);
        }
        
        public void DeleteMontureAsync(NewOptics.SVC.Monture obj, object userState) {
            if ((this.onBeginDeleteMontureDelegate == null)) {
                this.onBeginDeleteMontureDelegate = new BeginOperationDelegate(this.OnBeginDeleteMonture);
            }
            if ((this.onEndDeleteMontureDelegate == null)) {
                this.onEndDeleteMontureDelegate = new EndOperationDelegate(this.OnEndDeleteMonture);
            }
            if ((this.onDeleteMontureCompletedDelegate == null)) {
                this.onDeleteMontureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMontureCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMontureDelegate, new object[] {
                        obj}, this.onEndDeleteMontureDelegate, this.onDeleteMontureCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> GetAllLentilleClient() {
            return base.Channel.GetAllLentilleClient();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllLentilleClient(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLentilleClient(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> EndGetAllLentilleClient(System.IAsyncResult result) {
            return base.Channel.EndGetAllLentilleClient(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLentilleClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllLentilleClient(callback, asyncState);
        }
        
        private object[] OnEndGetAllLentilleClient(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.LentilleClient> retVal = this.EndGetAllLentilleClient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLentilleClientCompleted(object state) {
            if ((this.GetAllLentilleClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLentilleClientCompleted(this, new GetAllLentilleClientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLentilleClientAsync() {
            this.GetAllLentilleClientAsync(null);
        }
        
        public void GetAllLentilleClientAsync(object userState) {
            if ((this.onBeginGetAllLentilleClientDelegate == null)) {
                this.onBeginGetAllLentilleClientDelegate = new BeginOperationDelegate(this.OnBeginGetAllLentilleClient);
            }
            if ((this.onEndGetAllLentilleClientDelegate == null)) {
                this.onEndGetAllLentilleClientDelegate = new EndOperationDelegate(this.OnEndGetAllLentilleClient);
            }
            if ((this.onGetAllLentilleClientCompletedDelegate == null)) {
                this.onGetAllLentilleClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLentilleClientCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLentilleClientDelegate, null, this.onEndGetAllLentilleClientDelegate, this.onGetAllLentilleClientCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> GetAllLentilleClientDate(System.DateTime date1, System.DateTime date2) {
            return base.Channel.GetAllLentilleClientDate(date1, date2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllLentilleClientDate(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLentilleClientDate(date1, date2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> EndGetAllLentilleClientDate(System.IAsyncResult result) {
            return base.Channel.EndGetAllLentilleClientDate(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLentilleClientDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime date1 = ((System.DateTime)(inValues[0]));
            System.DateTime date2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllLentilleClientDate(date1, date2, callback, asyncState);
        }
        
        private object[] OnEndGetAllLentilleClientDate(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.LentilleClient> retVal = this.EndGetAllLentilleClientDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLentilleClientDateCompleted(object state) {
            if ((this.GetAllLentilleClientDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLentilleClientDateCompleted(this, new GetAllLentilleClientDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLentilleClientDateAsync(System.DateTime date1, System.DateTime date2) {
            this.GetAllLentilleClientDateAsync(date1, date2, null);
        }
        
        public void GetAllLentilleClientDateAsync(System.DateTime date1, System.DateTime date2, object userState) {
            if ((this.onBeginGetAllLentilleClientDateDelegate == null)) {
                this.onBeginGetAllLentilleClientDateDelegate = new BeginOperationDelegate(this.OnBeginGetAllLentilleClientDate);
            }
            if ((this.onEndGetAllLentilleClientDateDelegate == null)) {
                this.onEndGetAllLentilleClientDateDelegate = new EndOperationDelegate(this.OnEndGetAllLentilleClientDate);
            }
            if ((this.onGetAllLentilleClientDateCompletedDelegate == null)) {
                this.onGetAllLentilleClientDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLentilleClientDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLentilleClientDateDelegate, new object[] {
                        date1,
                        date2}, this.onEndGetAllLentilleClientDateDelegate, this.onGetAllLentilleClientDateCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> GetAllLentilleClientDateLivraison(System.DateTime date1, System.DateTime date2) {
            return base.Channel.GetAllLentilleClientDateLivraison(date1, date2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllLentilleClientDateLivraison(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLentilleClientDateLivraison(date1, date2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> EndGetAllLentilleClientDateLivraison(System.IAsyncResult result) {
            return base.Channel.EndGetAllLentilleClientDateLivraison(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLentilleClientDateLivraison(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime date1 = ((System.DateTime)(inValues[0]));
            System.DateTime date2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllLentilleClientDateLivraison(date1, date2, callback, asyncState);
        }
        
        private object[] OnEndGetAllLentilleClientDateLivraison(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.LentilleClient> retVal = this.EndGetAllLentilleClientDateLivraison(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLentilleClientDateLivraisonCompleted(object state) {
            if ((this.GetAllLentilleClientDateLivraisonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLentilleClientDateLivraisonCompleted(this, new GetAllLentilleClientDateLivraisonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLentilleClientDateLivraisonAsync(System.DateTime date1, System.DateTime date2) {
            this.GetAllLentilleClientDateLivraisonAsync(date1, date2, null);
        }
        
        public void GetAllLentilleClientDateLivraisonAsync(System.DateTime date1, System.DateTime date2, object userState) {
            if ((this.onBeginGetAllLentilleClientDateLivraisonDelegate == null)) {
                this.onBeginGetAllLentilleClientDateLivraisonDelegate = new BeginOperationDelegate(this.OnBeginGetAllLentilleClientDateLivraison);
            }
            if ((this.onEndGetAllLentilleClientDateLivraisonDelegate == null)) {
                this.onEndGetAllLentilleClientDateLivraisonDelegate = new EndOperationDelegate(this.OnEndGetAllLentilleClientDateLivraison);
            }
            if ((this.onGetAllLentilleClientDateLivraisonCompletedDelegate == null)) {
                this.onGetAllLentilleClientDateLivraisonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLentilleClientDateLivraisonCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLentilleClientDateLivraisonDelegate, new object[] {
                        date1,
                        date2}, this.onEndGetAllLentilleClientDateLivraisonDelegate, this.onGetAllLentilleClientDateLivraisonCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> GetAllLentilleClientbycodebar(string code) {
            return base.Channel.GetAllLentilleClientbycodebar(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllLentilleClientbycodebar(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLentilleClientbycodebar(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> EndGetAllLentilleClientbycodebar(System.IAsyncResult result) {
            return base.Channel.EndGetAllLentilleClientbycodebar(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLentilleClientbycodebar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetAllLentilleClientbycodebar(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllLentilleClientbycodebar(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.LentilleClient> retVal = this.EndGetAllLentilleClientbycodebar(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLentilleClientbycodebarCompleted(object state) {
            if ((this.GetAllLentilleClientbycodebarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLentilleClientbycodebarCompleted(this, new GetAllLentilleClientbycodebarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLentilleClientbycodebarAsync(string code) {
            this.GetAllLentilleClientbycodebarAsync(code, null);
        }
        
        public void GetAllLentilleClientbycodebarAsync(string code, object userState) {
            if ((this.onBeginGetAllLentilleClientbycodebarDelegate == null)) {
                this.onBeginGetAllLentilleClientbycodebarDelegate = new BeginOperationDelegate(this.OnBeginGetAllLentilleClientbycodebar);
            }
            if ((this.onEndGetAllLentilleClientbycodebarDelegate == null)) {
                this.onEndGetAllLentilleClientbycodebarDelegate = new EndOperationDelegate(this.OnEndGetAllLentilleClientbycodebar);
            }
            if ((this.onGetAllLentilleClientbycodebarCompletedDelegate == null)) {
                this.onGetAllLentilleClientbycodebarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLentilleClientbycodebarCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLentilleClientbycodebarDelegate, new object[] {
                        code}, this.onEndGetAllLentilleClientbycodebarDelegate, this.onGetAllLentilleClientbycodebarCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> GetAllLentilleClientbyDossier(string code) {
            return base.Channel.GetAllLentilleClientbyDossier(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllLentilleClientbyDossier(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLentilleClientbyDossier(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> EndGetAllLentilleClientbyDossier(System.IAsyncResult result) {
            return base.Channel.EndGetAllLentilleClientbyDossier(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLentilleClientbyDossier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetAllLentilleClientbyDossier(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllLentilleClientbyDossier(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.LentilleClient> retVal = this.EndGetAllLentilleClientbyDossier(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLentilleClientbyDossierCompleted(object state) {
            if ((this.GetAllLentilleClientbyDossierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLentilleClientbyDossierCompleted(this, new GetAllLentilleClientbyDossierCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLentilleClientbyDossierAsync(string code) {
            this.GetAllLentilleClientbyDossierAsync(code, null);
        }
        
        public void GetAllLentilleClientbyDossierAsync(string code, object userState) {
            if ((this.onBeginGetAllLentilleClientbyDossierDelegate == null)) {
                this.onBeginGetAllLentilleClientbyDossierDelegate = new BeginOperationDelegate(this.OnBeginGetAllLentilleClientbyDossier);
            }
            if ((this.onEndGetAllLentilleClientbyDossierDelegate == null)) {
                this.onEndGetAllLentilleClientbyDossierDelegate = new EndOperationDelegate(this.OnEndGetAllLentilleClientbyDossier);
            }
            if ((this.onGetAllLentilleClientbyDossierCompletedDelegate == null)) {
                this.onGetAllLentilleClientbyDossierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLentilleClientbyDossierCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLentilleClientbyDossierDelegate, new object[] {
                        code}, this.onEndGetAllLentilleClientbyDossierDelegate, this.onGetAllLentilleClientbyDossierCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> GetAllLentilleClientbycode(int code) {
            return base.Channel.GetAllLentilleClientbycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllLentilleClientbycode(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLentilleClientbycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.LentilleClient> EndGetAllLentilleClientbycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllLentilleClientbycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLentilleClientbycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return this.BeginGetAllLentilleClientbycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllLentilleClientbycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.LentilleClient> retVal = this.EndGetAllLentilleClientbycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLentilleClientbycodeCompleted(object state) {
            if ((this.GetAllLentilleClientbycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLentilleClientbycodeCompleted(this, new GetAllLentilleClientbycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLentilleClientbycodeAsync(int code) {
            this.GetAllLentilleClientbycodeAsync(code, null);
        }
        
        public void GetAllLentilleClientbycodeAsync(int code, object userState) {
            if ((this.onBeginGetAllLentilleClientbycodeDelegate == null)) {
                this.onBeginGetAllLentilleClientbycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllLentilleClientbycode);
            }
            if ((this.onEndGetAllLentilleClientbycodeDelegate == null)) {
                this.onEndGetAllLentilleClientbycodeDelegate = new EndOperationDelegate(this.OnEndGetAllLentilleClientbycode);
            }
            if ((this.onGetAllLentilleClientbycodeCompletedDelegate == null)) {
                this.onGetAllLentilleClientbycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLentilleClientbycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLentilleClientbycodeDelegate, new object[] {
                        code}, this.onEndGetAllLentilleClientbycodeDelegate, this.onGetAllLentilleClientbycodeCompletedDelegate, userState);
        }
        
        public void InsertLentilleClient(NewOptics.SVC.LentilleClient obj) {
            base.Channel.InsertLentilleClient(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertLentilleClient(NewOptics.SVC.LentilleClient obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertLentilleClient(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertLentilleClient(System.IAsyncResult result) {
            base.Channel.EndInsertLentilleClient(result);
        }
        
        private System.IAsyncResult OnBeginInsertLentilleClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.LentilleClient obj = ((NewOptics.SVC.LentilleClient)(inValues[0]));
            return this.BeginInsertLentilleClient(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertLentilleClient(System.IAsyncResult result) {
            this.EndInsertLentilleClient(result);
            return null;
        }
        
        private void OnInsertLentilleClientCompleted(object state) {
            if ((this.InsertLentilleClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertLentilleClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertLentilleClientAsync(NewOptics.SVC.LentilleClient obj) {
            this.InsertLentilleClientAsync(obj, null);
        }
        
        public void InsertLentilleClientAsync(NewOptics.SVC.LentilleClient obj, object userState) {
            if ((this.onBeginInsertLentilleClientDelegate == null)) {
                this.onBeginInsertLentilleClientDelegate = new BeginOperationDelegate(this.OnBeginInsertLentilleClient);
            }
            if ((this.onEndInsertLentilleClientDelegate == null)) {
                this.onEndInsertLentilleClientDelegate = new EndOperationDelegate(this.OnEndInsertLentilleClient);
            }
            if ((this.onInsertLentilleClientCompletedDelegate == null)) {
                this.onInsertLentilleClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertLentilleClientCompleted);
            }
            base.InvokeAsync(this.onBeginInsertLentilleClientDelegate, new object[] {
                        obj}, this.onEndInsertLentilleClientDelegate, this.onInsertLentilleClientCompletedDelegate, userState);
        }
        
        public void UpdateLentilleClient(NewOptics.SVC.LentilleClient obj) {
            base.Channel.UpdateLentilleClient(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateLentilleClient(NewOptics.SVC.LentilleClient obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateLentilleClient(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateLentilleClient(System.IAsyncResult result) {
            base.Channel.EndUpdateLentilleClient(result);
        }
        
        private System.IAsyncResult OnBeginUpdateLentilleClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.LentilleClient obj = ((NewOptics.SVC.LentilleClient)(inValues[0]));
            return this.BeginUpdateLentilleClient(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateLentilleClient(System.IAsyncResult result) {
            this.EndUpdateLentilleClient(result);
            return null;
        }
        
        private void OnUpdateLentilleClientCompleted(object state) {
            if ((this.UpdateLentilleClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateLentilleClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateLentilleClientAsync(NewOptics.SVC.LentilleClient obj) {
            this.UpdateLentilleClientAsync(obj, null);
        }
        
        public void UpdateLentilleClientAsync(NewOptics.SVC.LentilleClient obj, object userState) {
            if ((this.onBeginUpdateLentilleClientDelegate == null)) {
                this.onBeginUpdateLentilleClientDelegate = new BeginOperationDelegate(this.OnBeginUpdateLentilleClient);
            }
            if ((this.onEndUpdateLentilleClientDelegate == null)) {
                this.onEndUpdateLentilleClientDelegate = new EndOperationDelegate(this.OnEndUpdateLentilleClient);
            }
            if ((this.onUpdateLentilleClientCompletedDelegate == null)) {
                this.onUpdateLentilleClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateLentilleClientCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateLentilleClientDelegate, new object[] {
                        obj}, this.onEndUpdateLentilleClientDelegate, this.onUpdateLentilleClientCompletedDelegate, userState);
        }
        
        public void DeleteLentilleClient(NewOptics.SVC.LentilleClient obj) {
            base.Channel.DeleteLentilleClient(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteLentilleClient(NewOptics.SVC.LentilleClient obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteLentilleClient(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteLentilleClient(System.IAsyncResult result) {
            base.Channel.EndDeleteLentilleClient(result);
        }
        
        private System.IAsyncResult OnBeginDeleteLentilleClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.LentilleClient obj = ((NewOptics.SVC.LentilleClient)(inValues[0]));
            return this.BeginDeleteLentilleClient(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteLentilleClient(System.IAsyncResult result) {
            this.EndDeleteLentilleClient(result);
            return null;
        }
        
        private void OnDeleteLentilleClientCompleted(object state) {
            if ((this.DeleteLentilleClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteLentilleClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteLentilleClientAsync(NewOptics.SVC.LentilleClient obj) {
            this.DeleteLentilleClientAsync(obj, null);
        }
        
        public void DeleteLentilleClientAsync(NewOptics.SVC.LentilleClient obj, object userState) {
            if ((this.onBeginDeleteLentilleClientDelegate == null)) {
                this.onBeginDeleteLentilleClientDelegate = new BeginOperationDelegate(this.OnBeginDeleteLentilleClient);
            }
            if ((this.onEndDeleteLentilleClientDelegate == null)) {
                this.onEndDeleteLentilleClientDelegate = new EndOperationDelegate(this.OnEndDeleteLentilleClient);
            }
            if ((this.onDeleteLentilleClientCompletedDelegate == null)) {
                this.onDeleteLentilleClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteLentilleClientCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteLentilleClientDelegate, new object[] {
                        obj}, this.onEndDeleteLentilleClientDelegate, this.onDeleteLentilleClientCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Lentille> GetAllLentille() {
            return base.Channel.GetAllLentille();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllLentille(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLentille(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Lentille> EndGetAllLentille(System.IAsyncResult result) {
            return base.Channel.EndGetAllLentille(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLentille(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllLentille(callback, asyncState);
        }
        
        private object[] OnEndGetAllLentille(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Lentille> retVal = this.EndGetAllLentille(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLentilleCompleted(object state) {
            if ((this.GetAllLentilleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLentilleCompleted(this, new GetAllLentilleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLentilleAsync() {
            this.GetAllLentilleAsync(null);
        }
        
        public void GetAllLentilleAsync(object userState) {
            if ((this.onBeginGetAllLentilleDelegate == null)) {
                this.onBeginGetAllLentilleDelegate = new BeginOperationDelegate(this.OnBeginGetAllLentille);
            }
            if ((this.onEndGetAllLentilleDelegate == null)) {
                this.onEndGetAllLentilleDelegate = new EndOperationDelegate(this.OnEndGetAllLentille);
            }
            if ((this.onGetAllLentilleCompletedDelegate == null)) {
                this.onGetAllLentilleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLentilleCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLentilleDelegate, null, this.onEndGetAllLentilleDelegate, this.onGetAllLentilleCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Lentille> GetAllLentillebycode(string code) {
            return base.Channel.GetAllLentillebycode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllLentillebycode(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLentillebycode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Lentille> EndGetAllLentillebycode(System.IAsyncResult result) {
            return base.Channel.EndGetAllLentillebycode(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLentillebycode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetAllLentillebycode(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllLentillebycode(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Lentille> retVal = this.EndGetAllLentillebycode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLentillebycodeCompleted(object state) {
            if ((this.GetAllLentillebycodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLentillebycodeCompleted(this, new GetAllLentillebycodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLentillebycodeAsync(string code) {
            this.GetAllLentillebycodeAsync(code, null);
        }
        
        public void GetAllLentillebycodeAsync(string code, object userState) {
            if ((this.onBeginGetAllLentillebycodeDelegate == null)) {
                this.onBeginGetAllLentillebycodeDelegate = new BeginOperationDelegate(this.OnBeginGetAllLentillebycode);
            }
            if ((this.onEndGetAllLentillebycodeDelegate == null)) {
                this.onEndGetAllLentillebycodeDelegate = new EndOperationDelegate(this.OnEndGetAllLentillebycode);
            }
            if ((this.onGetAllLentillebycodeCompletedDelegate == null)) {
                this.onGetAllLentillebycodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLentillebycodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLentillebycodeDelegate, new object[] {
                        code}, this.onEndGetAllLentillebycodeDelegate, this.onGetAllLentillebycodeCompletedDelegate, userState);
        }
        
        public void InsertLentille(NewOptics.SVC.Lentille obj) {
            base.Channel.InsertLentille(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertLentille(NewOptics.SVC.Lentille obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertLentille(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertLentille(System.IAsyncResult result) {
            base.Channel.EndInsertLentille(result);
        }
        
        private System.IAsyncResult OnBeginInsertLentille(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Lentille obj = ((NewOptics.SVC.Lentille)(inValues[0]));
            return this.BeginInsertLentille(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertLentille(System.IAsyncResult result) {
            this.EndInsertLentille(result);
            return null;
        }
        
        private void OnInsertLentilleCompleted(object state) {
            if ((this.InsertLentilleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertLentilleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertLentilleAsync(NewOptics.SVC.Lentille obj) {
            this.InsertLentilleAsync(obj, null);
        }
        
        public void InsertLentilleAsync(NewOptics.SVC.Lentille obj, object userState) {
            if ((this.onBeginInsertLentilleDelegate == null)) {
                this.onBeginInsertLentilleDelegate = new BeginOperationDelegate(this.OnBeginInsertLentille);
            }
            if ((this.onEndInsertLentilleDelegate == null)) {
                this.onEndInsertLentilleDelegate = new EndOperationDelegate(this.OnEndInsertLentille);
            }
            if ((this.onInsertLentilleCompletedDelegate == null)) {
                this.onInsertLentilleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertLentilleCompleted);
            }
            base.InvokeAsync(this.onBeginInsertLentilleDelegate, new object[] {
                        obj}, this.onEndInsertLentilleDelegate, this.onInsertLentilleCompletedDelegate, userState);
        }
        
        public void UpdateLentille(NewOptics.SVC.Lentille obj) {
            base.Channel.UpdateLentille(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateLentille(NewOptics.SVC.Lentille obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateLentille(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateLentille(System.IAsyncResult result) {
            base.Channel.EndUpdateLentille(result);
        }
        
        private System.IAsyncResult OnBeginUpdateLentille(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Lentille obj = ((NewOptics.SVC.Lentille)(inValues[0]));
            return this.BeginUpdateLentille(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateLentille(System.IAsyncResult result) {
            this.EndUpdateLentille(result);
            return null;
        }
        
        private void OnUpdateLentilleCompleted(object state) {
            if ((this.UpdateLentilleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateLentilleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateLentilleAsync(NewOptics.SVC.Lentille obj) {
            this.UpdateLentilleAsync(obj, null);
        }
        
        public void UpdateLentilleAsync(NewOptics.SVC.Lentille obj, object userState) {
            if ((this.onBeginUpdateLentilleDelegate == null)) {
                this.onBeginUpdateLentilleDelegate = new BeginOperationDelegate(this.OnBeginUpdateLentille);
            }
            if ((this.onEndUpdateLentilleDelegate == null)) {
                this.onEndUpdateLentilleDelegate = new EndOperationDelegate(this.OnEndUpdateLentille);
            }
            if ((this.onUpdateLentilleCompletedDelegate == null)) {
                this.onUpdateLentilleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateLentilleCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateLentilleDelegate, new object[] {
                        obj}, this.onEndUpdateLentilleDelegate, this.onUpdateLentilleCompletedDelegate, userState);
        }
        
        public void DeleteLentille(NewOptics.SVC.Lentille obj) {
            base.Channel.DeleteLentille(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteLentille(NewOptics.SVC.Lentille obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteLentille(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteLentille(System.IAsyncResult result) {
            base.Channel.EndDeleteLentille(result);
        }
        
        private System.IAsyncResult OnBeginDeleteLentille(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Lentille obj = ((NewOptics.SVC.Lentille)(inValues[0]));
            return this.BeginDeleteLentille(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteLentille(System.IAsyncResult result) {
            this.EndDeleteLentille(result);
            return null;
        }
        
        private void OnDeleteLentilleCompleted(object state) {
            if ((this.DeleteLentilleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteLentilleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteLentilleAsync(NewOptics.SVC.Lentille obj) {
            this.DeleteLentilleAsync(obj, null);
        }
        
        public void DeleteLentilleAsync(NewOptics.SVC.Lentille obj, object userState) {
            if ((this.onBeginDeleteLentilleDelegate == null)) {
                this.onBeginDeleteLentilleDelegate = new BeginOperationDelegate(this.OnBeginDeleteLentille);
            }
            if ((this.onEndDeleteLentilleDelegate == null)) {
                this.onEndDeleteLentilleDelegate = new EndOperationDelegate(this.OnEndDeleteLentille);
            }
            if ((this.onDeleteLentilleCompletedDelegate == null)) {
                this.onDeleteLentilleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteLentilleCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteLentilleDelegate, new object[] {
                        obj}, this.onEndDeleteLentilleDelegate, this.onDeleteLentilleCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Incompatibilite> GetAllIncompatibilite() {
            return base.Channel.GetAllIncompatibilite();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllIncompatibilite(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllIncompatibilite(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Incompatibilite> EndGetAllIncompatibilite(System.IAsyncResult result) {
            return base.Channel.EndGetAllIncompatibilite(result);
        }
        
        private System.IAsyncResult OnBeginGetAllIncompatibilite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllIncompatibilite(callback, asyncState);
        }
        
        private object[] OnEndGetAllIncompatibilite(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Incompatibilite> retVal = this.EndGetAllIncompatibilite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllIncompatibiliteCompleted(object state) {
            if ((this.GetAllIncompatibiliteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllIncompatibiliteCompleted(this, new GetAllIncompatibiliteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllIncompatibiliteAsync() {
            this.GetAllIncompatibiliteAsync(null);
        }
        
        public void GetAllIncompatibiliteAsync(object userState) {
            if ((this.onBeginGetAllIncompatibiliteDelegate == null)) {
                this.onBeginGetAllIncompatibiliteDelegate = new BeginOperationDelegate(this.OnBeginGetAllIncompatibilite);
            }
            if ((this.onEndGetAllIncompatibiliteDelegate == null)) {
                this.onEndGetAllIncompatibiliteDelegate = new EndOperationDelegate(this.OnEndGetAllIncompatibilite);
            }
            if ((this.onGetAllIncompatibiliteCompletedDelegate == null)) {
                this.onGetAllIncompatibiliteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllIncompatibiliteCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllIncompatibiliteDelegate, null, this.onEndGetAllIncompatibiliteDelegate, this.onGetAllIncompatibiliteCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NewOptics.SVC.Incompatibilite> GetAllIncompatibilitebySupplement(string code) {
            return base.Channel.GetAllIncompatibilitebySupplement(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllIncompatibilitebySupplement(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllIncompatibilitebySupplement(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NewOptics.SVC.Incompatibilite> EndGetAllIncompatibilitebySupplement(System.IAsyncResult result) {
            return base.Channel.EndGetAllIncompatibilitebySupplement(result);
        }
        
        private System.IAsyncResult OnBeginGetAllIncompatibilitebySupplement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetAllIncompatibilitebySupplement(code, callback, asyncState);
        }
        
        private object[] OnEndGetAllIncompatibilitebySupplement(System.IAsyncResult result) {
            System.Collections.Generic.List<NewOptics.SVC.Incompatibilite> retVal = this.EndGetAllIncompatibilitebySupplement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllIncompatibilitebySupplementCompleted(object state) {
            if ((this.GetAllIncompatibilitebySupplementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllIncompatibilitebySupplementCompleted(this, new GetAllIncompatibilitebySupplementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllIncompatibilitebySupplementAsync(string code) {
            this.GetAllIncompatibilitebySupplementAsync(code, null);
        }
        
        public void GetAllIncompatibilitebySupplementAsync(string code, object userState) {
            if ((this.onBeginGetAllIncompatibilitebySupplementDelegate == null)) {
                this.onBeginGetAllIncompatibilitebySupplementDelegate = new BeginOperationDelegate(this.OnBeginGetAllIncompatibilitebySupplement);
            }
            if ((this.onEndGetAllIncompatibilitebySupplementDelegate == null)) {
                this.onEndGetAllIncompatibilitebySupplementDelegate = new EndOperationDelegate(this.OnEndGetAllIncompatibilitebySupplement);
            }
            if ((this.onGetAllIncompatibilitebySupplementCompletedDelegate == null)) {
                this.onGetAllIncompatibilitebySupplementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllIncompatibilitebySupplementCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllIncompatibilitebySupplementDelegate, new object[] {
                        code}, this.onEndGetAllIncompatibilitebySupplementDelegate, this.onGetAllIncompatibilitebySupplementCompletedDelegate, userState);
        }
        
        public void InsertIncompatibilite(NewOptics.SVC.Incompatibilite obj) {
            base.Channel.InsertIncompatibilite(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertIncompatibilite(NewOptics.SVC.Incompatibilite obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertIncompatibilite(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertIncompatibilite(System.IAsyncResult result) {
            base.Channel.EndInsertIncompatibilite(result);
        }
        
        private System.IAsyncResult OnBeginInsertIncompatibilite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Incompatibilite obj = ((NewOptics.SVC.Incompatibilite)(inValues[0]));
            return this.BeginInsertIncompatibilite(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertIncompatibilite(System.IAsyncResult result) {
            this.EndInsertIncompatibilite(result);
            return null;
        }
        
        private void OnInsertIncompatibiliteCompleted(object state) {
            if ((this.InsertIncompatibiliteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertIncompatibiliteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertIncompatibiliteAsync(NewOptics.SVC.Incompatibilite obj) {
            this.InsertIncompatibiliteAsync(obj, null);
        }
        
        public void InsertIncompatibiliteAsync(NewOptics.SVC.Incompatibilite obj, object userState) {
            if ((this.onBeginInsertIncompatibiliteDelegate == null)) {
                this.onBeginInsertIncompatibiliteDelegate = new BeginOperationDelegate(this.OnBeginInsertIncompatibilite);
            }
            if ((this.onEndInsertIncompatibiliteDelegate == null)) {
                this.onEndInsertIncompatibiliteDelegate = new EndOperationDelegate(this.OnEndInsertIncompatibilite);
            }
            if ((this.onInsertIncompatibiliteCompletedDelegate == null)) {
                this.onInsertIncompatibiliteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertIncompatibiliteCompleted);
            }
            base.InvokeAsync(this.onBeginInsertIncompatibiliteDelegate, new object[] {
                        obj}, this.onEndInsertIncompatibiliteDelegate, this.onInsertIncompatibiliteCompletedDelegate, userState);
        }
        
        public void UpdateIncompatibilite(NewOptics.SVC.Incompatibilite obj) {
            base.Channel.UpdateIncompatibilite(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateIncompatibilite(NewOptics.SVC.Incompatibilite obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateIncompatibilite(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateIncompatibilite(System.IAsyncResult result) {
            base.Channel.EndUpdateIncompatibilite(result);
        }
        
        private System.IAsyncResult OnBeginUpdateIncompatibilite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Incompatibilite obj = ((NewOptics.SVC.Incompatibilite)(inValues[0]));
            return this.BeginUpdateIncompatibilite(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateIncompatibilite(System.IAsyncResult result) {
            this.EndUpdateIncompatibilite(result);
            return null;
        }
        
        private void OnUpdateIncompatibiliteCompleted(object state) {
            if ((this.UpdateIncompatibiliteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateIncompatibiliteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateIncompatibiliteAsync(NewOptics.SVC.Incompatibilite obj) {
            this.UpdateIncompatibiliteAsync(obj, null);
        }
        
        public void UpdateIncompatibiliteAsync(NewOptics.SVC.Incompatibilite obj, object userState) {
            if ((this.onBeginUpdateIncompatibiliteDelegate == null)) {
                this.onBeginUpdateIncompatibiliteDelegate = new BeginOperationDelegate(this.OnBeginUpdateIncompatibilite);
            }
            if ((this.onEndUpdateIncompatibiliteDelegate == null)) {
                this.onEndUpdateIncompatibiliteDelegate = new EndOperationDelegate(this.OnEndUpdateIncompatibilite);
            }
            if ((this.onUpdateIncompatibiliteCompletedDelegate == null)) {
                this.onUpdateIncompatibiliteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateIncompatibiliteCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateIncompatibiliteDelegate, new object[] {
                        obj}, this.onEndUpdateIncompatibiliteDelegate, this.onUpdateIncompatibiliteCompletedDelegate, userState);
        }
        
        public void DeleteIncompatibilite(NewOptics.SVC.Incompatibilite obj) {
            base.Channel.DeleteIncompatibilite(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteIncompatibilite(NewOptics.SVC.Incompatibilite obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteIncompatibilite(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteIncompatibilite(System.IAsyncResult result) {
            base.Channel.EndDeleteIncompatibilite(result);
        }
        
        private System.IAsyncResult OnBeginDeleteIncompatibilite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NewOptics.SVC.Incompatibilite obj = ((NewOptics.SVC.Incompatibilite)(inValues[0]));
            return this.BeginDeleteIncompatibilite(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteIncompatibilite(System.IAsyncResult result) {
            this.EndDeleteIncompatibilite(result);
            return null;
        }
        
        private void OnDeleteIncompatibiliteCompleted(object state) {
            if ((this.DeleteIncompatibiliteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteIncompatibiliteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteIncompatibiliteAsync(NewOptics.SVC.Incompatibilite obj) {
            this.DeleteIncompatibiliteAsync(obj, null);
        }
        
        public void DeleteIncompatibiliteAsync(NewOptics.SVC.Incompatibilite obj, object userState) {
            if ((this.onBeginDeleteIncompatibiliteDelegate == null)) {
                this.onBeginDeleteIncompatibiliteDelegate = new BeginOperationDelegate(this.OnBeginDeleteIncompatibilite);
            }
            if ((this.onEndDeleteIncompatibiliteDelegate == null)) {
                this.onEndDeleteIncompatibiliteDelegate = new EndOperationDelegate(this.OnEndDeleteIncompatibilite);
            }
            if ((this.onDeleteIncompatibiliteCompletedDelegate == null)) {
                this.onDeleteIncompatibiliteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteIncompatibiliteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteIncompatibiliteDelegate, new object[] {
                        obj}, this.onEndDeleteIncompatibiliteDelegate, this.onDeleteIncompatibiliteCompletedDelegate, userState);
        }
    }
}
