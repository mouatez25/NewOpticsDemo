<Window xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"  x:Class="NewOptics.Stock.AjouterAms"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
       
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NewOptics.Stock"
        mc:Ignorable="d"
        Title="Ajouter stockage/déstockage"  Height="400" Width="550"  Opacity="1"    WindowStyle="SingleBorderWindow"  Icon="/NewOptics;component/Dent6.ico" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" ResizeMode="NoResize"  WindowStartupLocation="CenterScreen"  BorderThickness="0"    FontSize="16" FontFamily="Times New Roman" AllowDrop="True"   >

    
    <Grid x:Name="GridTransaction">
        <Grid.RowDefinitions>
            <RowDefinition Height="75" />
            <RowDefinition Height="75*"  />
            <RowDefinition Height="75*"  />
            <RowDefinition Height="74*"  />
            <RowDefinition Height="75*"  />
            <RowDefinition Height="74*"  />
            <RowDefinition Height="75*"  />
                <RowDefinition Height="75*"  />
     
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>

        </Grid.ColumnDefinitions>
            <Label x:Name="f" Content="Créer une nouvelle écriture" BorderThickness="1" FontSize="16" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" FontWeight="Bold" Background="{x:Null}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Margin="10,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center" />
            <RadioButton x:Name="chdéstockage" GroupName="UserType" Grid.Row="0" Grid.Column="1" IsChecked="{Binding déstockage, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" FontFamily="Tahoma" FontSize="20" FontWeight="Normal" Margin="120,0,0,0" Foreground="#FF2D3F5D" BorderBrush="#FF2D3F5D"  >Déstockage</RadioButton>
            <RadioButton x:Name="chstockage" GroupName="UserType"  IsChecked="{Binding stockage, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" FontSize="20" FontFamily="Tahoma" FontWeight="Normal" Margin="20,0,0,0" Foreground="#FF2D3F5D" BorderBrush="#FF2D3F5D" >Stockage</RadioButton>
        <TextBlock Text="Code Produit :" FontWeight="Normal"  FontFamily="Tahoma" FontSize="14.667" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <TextBlock x:Name="txtcodeprod" Text="{Binding codeprod, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontWeight="Bold"  FontFamily="Times New Roman" FontSize="24" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Foreground="#FFFF008B" Grid.Column="1" />
            <TextBlock Text="Désignation Produit :" FontWeight="Normal"  FontFamily="Tahoma" FontSize="14.667" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <TextBlock x:Name="txtdesign" Text="{Binding design, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"   FontWeight="Bold"  FontFamily="Tahoma" FontSize="16" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="2" Grid.ColumnSpan="2" Foreground="#FFFF008B" Grid.Column="1" />
            <TextBlock Text="N° Facture :" FontWeight="Normal"  FontFamily="Tahoma" FontSize="14.667" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="3" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />

        <TextBlock x:Name="txtnfact" Text="{Binding nfact, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"   FontWeight="Bold"  FontFamily="Times New Roman" FontSize="24" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="3" Grid.Column="2" Foreground="#FFFF008B" />
        <TextBlock Text="Date de Saisie :" FontWeight="Normal"  FontFamily="Tahoma" FontSize="14.667" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="4" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <DatePicker x:Name="txtDate"  Margin="0" SelectedDate="{Binding dates,StringFormat={}\{0:dd/MM/yyyy\}}"   FontFamily="Tahoma" FontSize="16" Width="220" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="4" Grid.Column="1" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D"/>
        <TextBlock Text="Motif :" FontWeight="Normal"  FontFamily="Tahoma" FontSize="14.667" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="5" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <TextBox x:Name="txtObserv" Text="{Binding observ, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Row="5" VerticalAlignment="Center" Grid.Column="1" Width="220" FontWeight="Bold" FontSize="14" Foreground="#FF2D3F5D" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="Red" KeyDown="txtObserv_KeyDown" />
        <TextBlock Text="Quantité :" FontWeight="Normal"  FontFamily="Tahoma" FontSize="14.667" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="6" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <DatePicker x:Name="txtQuantité" Text="{Binding quantite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontFamily="Tahoma" Grid.Row="6" VerticalAlignment="Center" Grid.Column="1" Width="220" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="Red" KeyDown="txtQuantité_KeyDown"  />
        <Button x:Name="btnCreer" Content="" Grid.Row="7" HorizontalAlignment="Center" VerticalAlignment="Center" Width="40"  Foreground="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" FontFamily="Times New Roman" FontSize="16" Click="btnCreer_Click" Margin="0" ToolTip="Créer" Height="40" Grid.ColumnSpan="2" BorderBrush="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="/NewOptics;component/Images/acept-verifier-corriger-vert-ok-oui-icone-9668-128.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.BasedOn>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">

                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Button.Style>
            </Button>
        </Grid>
    

</Window>
