<Window xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"  x:Class="NewOptics.Stock.MonStock"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:sys="clr-namespace:System;assembly=mscorlib"
                             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 

        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
     xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"

        xmlns:local="clr-namespace:NewOptics.Stock"
                         xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
                        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        mc:Ignorable="d"
        Title="Autre manipulation du Stock"   Height="650" Width="1150" ResizeMode="CanResize"  Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"   WindowStyle="ThreeDBorderWindow"  Icon="/NewOptics;component/Dent6.ico" WindowStartupLocation="CenterScreen"  BorderThickness="0"  BorderBrush="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" ShowInTaskbar="True"  >


    <Grid>
        <Grid.Resources>
            <x:Array x:Key="source" Type="{x:Type sys:Int32}">
                <sys:Int32>1</sys:Int32>
                <sys:Int32>2</sys:Int32>
                <sys:Int32>3</sys:Int32>
            </x:Array>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="50px" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="0.25*"  />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>


        <DockPanel  Margin="0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" DockPanel.Dock="Right" Grid.Column="1">
            <Button x:Name="btnSupp" FontFamily="Times New Roman" Margin="20,0,0,0" Click="btnSupp_Click" Content="" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="Supprimer" Width="30" Height="30" >
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
                <Button.BorderBrush>
                    <ImageBrush/>
                </Button.BorderBrush>
                <Button.Background>
                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624817_delete.ico"/>
                </Button.Background>
            </Button>
            <Button x:Name="btnImprimer" Margin="20,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Click="btnImprimer_Click" VerticalAlignment="Center" FontFamily="Times New Roman" ToolTip="Imprimer" Width="30" Height="30">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
                <Button.Background>
                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                </Button.Background>
                <Button.BorderBrush>
                    <ImageBrush/>
                </Button.BorderBrush>
            </Button>
                <Button x:Name="btnFilter" Click="btnFilter_Click" HorizontalAlignment="Center" DockPanel.Dock="Right" Content="" VerticalAlignment="Center" FontFamily="Tahoma" ToolTip="Filtrer" Width="35" Height="35" BorderBrush="{x:Null}">
                <Button.Background>
                    <ImageBrush ImageSource="/NewOptics;component/Images/acept-verifier-corriger-vert-ok-oui-icone-9668-128.png"/>
                </Button.Background>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
                </Button>


            <DatePicker x:Name="DateSaisieFin" VerticalAlignment="Center" FontSize="14" FontFamily="Times New Roman" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0,0,10,0" HorizontalAlignment="Right" DockPanel.Dock="Right" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" Width="130" />
            <TextBlock  Text="au:" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="0,0,10,0" FontFamily="Tahoma" DockPanel.Dock="Right" HorizontalAlignment="Right" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
            <DatePicker x:Name="DateSaisieDébut" VerticalAlignment="Center" FontSize="14" FontFamily="Times New Roman" FontWeight="Bold" Foreground="#FF2D3F5D" Margin="0,0,10,0" HorizontalAlignment="Right" DockPanel.Dock="Right" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D" Width="130" />
            <TextBlock  Text="Du:" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="10,0" FontFamily="Tahoma" DockPanel.Dock="Right" HorizontalAlignment="Right" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
 
        </DockPanel>
        <DockPanel  Margin="20,0,0,0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" DockPanel.Dock="Right">
            <DockPanel.Background>
                <ImageBrush/>
            </DockPanel.Background>
            <ComboBox x:Name="FournisseurCombo" DisplayMemberPath="raison" ToolTip="appuyer sur la touche droite de la souris pour défiltrer"  DockPanel.Dock="Left" MinWidth="10" HorizontalAlignment="Right" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" Width="120"  MouseRightButtonUp="PatientDataGrid_MouseRightButtonUp" BorderBrush="#FF2D3F5D" SelectionChanged="FournisseurCombo_SelectionChanged" >
                
            </ComboBox>


            <Button x:Name="btnNew" FontFamily="Tahoma" Click="btnNew_Click" Content="AMS" FontSize="14" Foreground="#FF2D3F5D" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="Nouveau Stockage/Déstockage" Margin="10,0,0,0" MinHeight="25" />

            <CheckBox x:Name="chstockdisponible"  Content="Disponible" Margin="10,0,0,0" Checked="chstockdisponible_Checked" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontFamily="Tahoma" Unchecked="chstockdisponible_Unchecked" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
            <ComboBox x:Name="FamilleCombo" DisplayMemberPath="FamilleProduit1" ToolTip="appuyer sur la touche droite de la souris pour défiltrer"  DockPanel.Dock="Left" MinWidth="10" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FF2D3F5D" Width="120"   MouseRightButtonUp="PatientDataGrid_MouseRightButtonUp" BorderBrush="#FF2D3F5D"  Margin="10,0,0,0" SelectionChanged="FamilleCombo_SelectionChanged" >
                
            </ComboBox>
            <Button x:Name="btnFilterStock" HorizontalAlignment="Left"  Content="" FontFamily="Times New Roman" FontSize="12" ToolTip="Filtrer" Width="30" Margin="10,0,0,0" BorderBrush="{x:Null}" Height="30" Click="btnFilterStock_Click">
                <Button.Background>
                    <ImageBrush ImageSource="/NewOptics;component/Images/acept-verifier-corriger-vert-ok-oui-icone-9668-128.png"/>
                </Button.Background>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>

            </Button>
            <Button x:Name="btnImprimerStock" Margin="15,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Click="btnImprimerStock_Click" VerticalAlignment="Center" FontFamily="Times New Roman" ToolTip="Imprimer" Width="30" Height="30" MinHeight="35" MinWidth="35">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
                <Button.Background>
                    <ImageBrush ImageSource="/NewOptics;component/Administrateur/Images/1456624510_printer.ico"/>
                </Button.Background>
                <Button.BorderBrush>
                    <ImageBrush/>
                </Button.BorderBrush>
            </Button>

        </DockPanel>


        <DataGrid x:Name="PatientDataGrid"  Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="0" IsReadOnly="True" IsTextSearchCaseSensitive="True" FontFamily="Tahoma" GridLinesVisibility="Horizontal" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" MouseRightButtonUp="PatientDataGrid_MouseRightButtonUp">
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="MinWidth" Value="0"/>
                        <Setter Property="MinHeight" Value="25"/>
                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="10,4,4,7"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                        <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                        <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                        <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="Width" Value="8"/>
                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="Width" Value="8"/>
                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="SortDirection" Value="{x:Null}"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                        </MultiTrigger>
                                        <Trigger Property="SortDirection" Value="Ascending">
                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                        </Trigger>
                                        <Trigger Property="SortDirection" Value="Descending">
                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                            <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                        </Trigger>
                                        <Trigger Property="DisplayIndex" Value="0">
                                            <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                            <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                            <Setter Property="FontSize" Value="20"></Setter>
                            <Setter Property="Background" Value="#CC119EDA" />
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
                <DataGrid.Columns>

                <DataGridTextColumn Header="Code Produit"
					Binding="{Binding cp}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
              
                <DataGridTextColumn Header="Désignation"
					Binding="{Binding design}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="Quantite"
					Binding="{Binding quantite,StringFormat={}{0:0.00}}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="Prix Achat"
					Binding="{Binding previent}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="prixa"
					Binding="{Binding prixa}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="prixb"
					Binding="{Binding prixb}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="prixc"
					Binding="{Binding prixc}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="Péremption"
					Binding="{Binding perempt,StringFormat={}\{0:dd/MM/yyyy\}}" FontWeight="Normal" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="lot"
					Binding="{Binding lot}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="collisage"
					Binding="{Binding collisage}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="cf"
					Binding="{Binding cf}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="fournisseur"
					Binding="{Binding fourn}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="Facture"
					Binding="{Binding nfact}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="Date Facture"
					Binding="{Binding datef,StringFormat={}\{0:dd/MM/yyyy\}}" FontWeight="Normal" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />

                <DataGridTextColumn Header="Date Saisie"
					Binding="{Binding dates,StringFormat={}\{0:dd/MM/yyyy\}}" FontWeight="Normal" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="IdFamille"
					Binding="{Binding IdFamille}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                

            </DataGrid.Columns>
        </DataGrid>
        <GridSplitter HorizontalAlignment="Left" Grid.Column="1" MinWidth="10" Background="#FF2D3F5D" Grid.RowSpan="4" />
        <DataGrid x:Name="AMSDataGrid" Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="10,0,0,0" IsReadOnly="True" IsTextSearchCaseSensitive="True" FontFamily="Tahoma" GridLinesVisibility="Horizontal" Grid.Column="1" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" MouseRightButtonDown="AMSDataGrid_MouseRightButtonDown">
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="MinWidth" Value="0"/>
                        <Setter Property="MinHeight" Value="25"/>
                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="10,4,4,7"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                        <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                        <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                        <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="Width" Value="8"/>
                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="Width" Value="8"/>
                                                    <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                    <Setter Property="Cursor" Value="SizeWE"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="SortDirection" Value="{x:Null}"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                        </MultiTrigger>
                                        <Trigger Property="SortDirection" Value="Ascending">
                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                        </Trigger>
                                        <Trigger Property="SortDirection" Value="Descending">
                                            <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                            <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                            <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                        </Trigger>
                                        <Trigger Property="DisplayIndex" Value="0">
                                            <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                            <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                            <Setter Property="FontSize" Value="20"></Setter>
                            <Setter Property="Background" Value="#CC119EDA" />
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
                <DataGrid.Columns>
                <DataGridTextColumn Header="Id"
					Binding="{Binding Id}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="Date"
					Binding="{Binding dates,StringFormat={}\{0:dd/MM/yyyy\}}" FontWeight="Normal" Width="Auto" CanUserSort="True" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />

                <DataGridTextColumn Header="Motif déstockage"
					Binding="{Binding observ}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="Quantite"
					Binding="{Binding quantite}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="Prix Achat"
					Binding="{Binding previent}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
               

                <DataGridTextColumn Header="Code Produit"
					Binding="{Binding codeprod}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="Désignation"
					Binding="{Binding design}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="Code fournisseur"
					Binding="{Binding cf}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />
                <DataGridTextColumn Header="Facture"
					Binding="{Binding nfact}" Width="Auto" CanUserSort="True" FontWeight="Normal" FontFamily="Tahoma" IsReadOnly="True" MinWidth="50" FontSize="12" />




            </DataGrid.Columns>
        </DataGrid>

        <DockPanel x:Name="Footer" Grid.Row="2" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
            <Grid>
                <Grid.RowDefinitions>

                    <RowDefinition Height="1*" />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
               
                </Grid.ColumnDefinitions>
                <TextBox x:Name="txtFournisseur" IsEnabled="False"  IsReadOnly="True" HorizontalAlignment="Right" VerticalAlignment="Center" Width="100" DockPanel.Dock="Right" IsReadOnlyCaretVisible="True" IsInactiveSelectionHighlightEnabled="True" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="Red" BorderThickness="3" FontSize="16" FontFamily="Times New Roman" FontWeight="Bold" Margin="0,0,35,0" SelectionBrush="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <Label Content="Stock :" HorizontalAlignment="Right" Margin="0,0,150,0" FontFamily="Tahoma" FontWeight="Bold" VerticalAlignment="Center" FontSize="18" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                <TextBlock x:Name="label" Text="Trouver :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="10,12,0,10" RenderTransformOrigin="4.417,5.766" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                <TextBox x:Name="txtRecherche" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="90,0,0,0" Width="150"   Foreground="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" TextChanged="txtRecherche_TextChanged" />
                <Button x:Name="btnEdit" FontFamily="Tahoma" Click="btnEdit_Click" Content="Modifier tarif" FontSize="14" Foreground="#FF2D3F5D" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="Nouveau" Margin="10,0,0,0" Background="#FFFFDF72" MinHeight="25" />
 


            </Grid>
        </DockPanel>
        <DockPanel x:Name="Footeer"  Grid.Row="2" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Grid.Column="1" Margin="10,0,0,0">
            <Grid x:Name="tg" >
                <Grid.RowDefinitions>

                    <RowDefinition Height="1*" />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>

                </Grid.ColumnDefinitions>
                <TextBox x:Name="txtAMS" IsEnabled="False"  IsReadOnly="True" HorizontalAlignment="Right" VerticalAlignment="Center" Width="100" DockPanel.Dock="Right" IsReadOnlyCaretVisible="True" IsInactiveSelectionHighlightEnabled="True" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="Red" BorderThickness="3" FontSize="16" FontFamily="Times New Roman" FontWeight="Bold" SelectionBrush="#FF2D3F5D" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
            <Label Content="Sorties :" HorizontalAlignment="Right" Margin="0,0,120,0" FontFamily="Tahoma" FontWeight="Bold" VerticalAlignment="Center" FontSize="16" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
            <TextBlock x:Name="labels" Text="Motif:" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="16" Margin="20,0,0,0" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />
            <TextBox x:Name="txtRechercheMotif" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="70,0,0,0" Width="100"   BorderBrush="#FF2D3F5D" Foreground="#FF2D3F5D" TextChanged="txtRechercheMotif_TextChanged"   />
                <TextBlock x:Name="d" Text="Désignation:" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="16" Margin="180,0,0,0" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" FontWeight="Bold" />
                <TextBox x:Name="txtRechercheDesign" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="290,0,0,0" Width="100"   BorderBrush="#FF2D3F5D" Foreground="#FF2D3F5D" TextChanged="txtRechercheDesign_TextChanged"  />

            </Grid>
        </DockPanel>




    </Grid>
 
</Window>
