<Window x:Class="NewOptics.Tarif.ListVerreSup"
         xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
       
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NewOptics.Tarif"
        mc:Ignorable="d"
        Title="Selection du verre"  Height="300" Width="400"  Opacity="1"    WindowStyle="SingleBorderWindow"  Icon="/NewOptics;component/Dent6.ico" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" ResizeMode="NoResize"  WindowStartupLocation="CenterScreen"  BorderThickness="0"    FontSize="16" FontFamily="Times New Roman" AllowDrop="True"   >
    <Grid Grid.Column="0" x:Name="GridMonture" IsEnabled="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="0.5*"    />
            <RowDefinition  />
            <RowDefinition  />
            <RowDefinition  />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition/>
            <ColumnDefinition />
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Button Content="Tous" FontFamily="Tahoma" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Grid.ColumnSpan="2" Click="Button_Click_1" />
        <Button Content="Aucun" Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0" FontFamily="Tahoma" Click="Button_Click" />
       <CheckBox x:Name="chkobli" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Obligatoire" Grid.ColumnSpan="2" FontSize="12" FontFamily="Tahoma"/>
        <Grid Grid.Column="0"  IsEnabled="True" Grid.ColumnSpan="4" Margin="5,5,5,0">
            <Grid.RowDefinitions>
                <RowDefinition    />


            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition/>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition/>
                <ColumnDefinition />
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

        </Grid>
        <DataGrid x:Name="PatientDataGrid"  Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="5,5,5,0" IsReadOnly="True" IsTextSearchCaseSensitive="True" FontFamily="Tahoma" GridLinesVisibility="Horizontal" RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.ColumnSpan="4" FontSize="12" Grid.RowSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="MinHeight" Value="25"/>
                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="10,4,4,7"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="BorderThickness" Value="0,0,0,3"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                    <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                    <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                    <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                    <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="SortDirection" Value="{x:Null}"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                    </MultiTrigger>
                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                        <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                    </Trigger>
                                    <Trigger Property="DisplayIndex" Value="0">
                                        <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                            <Setter Property="BorderBrush" Value="#CC119EDA"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                            <Setter Property="FontSize" Value="20"></Setter>
                            <Setter Property="Background" Value="#CC119EDA" />
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.Columns>

                <DataGridTextColumn Header="Id"
					Binding="{Binding Id}" Width="Auto"  MinWidth="50" />

                <DataGridTextColumn Header="Désignation"
					Binding="{Binding Design}" Width="Auto"  MinWidth="50" />
                <DataGridTextColumn Header="Référence"
					Binding="{Binding Ref}" Width="Auto"  MinWidth="50"  />
                <DataGridTextColumn Header="Matière"
					Binding="{Binding Matière}" Width="Auto"  MinWidth="50"  />
                <DataGridTextColumn Header="Type de Verre"
					Binding="{Binding TypeVerre}" Width="Auto"  MinWidth="50" />
                <DataGridTextColumn Header="Diamètre"
					Binding="{Binding Diamètre}" Width="Auto"  MinWidth="50" />
                <DataGridTextColumn Header="Indice du verre"
					Binding="{Binding IndiceVerre}" Width="Auto" MinWidth="50"  />
                <DataGridTextColumn Header="Surface"
					Binding="{Binding Surface}"   MinWidth="50"  />
                <DataGridTextColumn Header="Teinte"
					Binding="{Binding Teinte}" Width="Auto" MinWidth="50"  />
                <DataGridTextColumn Header="Marque"
					Binding="{Binding Marque}" Width="Auto"  MinWidth="50"  />
                <DataGridTextColumn Header="Fournisseur"
					Binding="{Binding Fournisseur}" Width="Auto"  MinWidth="50" />





                <DataGridTemplateColumn  Width="Auto" Header="Teinté">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label>
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RowData.Row.VerreTeinté}" Value="True">
                                                <Setter Property="Content" Value="Verre Teinté" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RowData.Row.VerreTeinté}" Value="False">
                                                <Setter Property="Content" Value="" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="Auto" Header="Aphaque">

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                            <Label>
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RowData.Row.Aphaque}" Value="True">
                                             <Setter Property="Content" Value="Aphaque" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RowData.Row.Aphaque}" Value="False">
                                                <Setter Property="Content" Value="" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn  Width="Auto" Header="Photochromique">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label>
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RowData.Row.Photochromique}" Value="True">
                                                <Setter Property="Content" Value="Photochromique" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RowData.Row.Photochromique}" Value="False">
                                                <Setter Property="Content" Value="" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn  Width="Auto" Header="Limite de fabrication">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label>
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RowData.Row.LimiteConnu}" Value="True">
                                                <Setter Property="Content" Value="Connu" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RowData.Row.LimiteConnu}" Value="False">
                                                <Setter Property="Content" Value="" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn   Width="Auto" Header="Limite valeur">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="{Binding RowData.Row.LimiteFab0, Mode=OneWay}" />
                                <Label Content=" " />

                                <Label Content="{Binding RowData.Row.LimiteFab1, Mode=OneWay}" />
                            </StackPanel>


                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Grid x:Name="griddetail" Grid.Column="0"  IsEnabled="True" Grid.ColumnSpan="4" Margin="5" Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition    />

                <RowDefinition Height="0.65*"  />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition/>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition/>
                <ColumnDefinition />
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Label FontFamily="Tahoma" FontSize="12" Content="Recherche :" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.ColumnSpan="2" />
            <TextBox x:Name="txtDesign" IsEnabled="True"  FontFamily="Tahoma" VerticalAlignment="Center" Grid.Column="3" Foreground="#FF2D3F5D" FontSize="14" FontWeight="Bold" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#FF2D3F5D"  Grid.ColumnSpan="3" TextChanged="txtDesign_TextChanged" />
            <Button x:Name="btnselection" IsEnabled="True" MinHeight="30" Content="Valider" Background="#FF88FF98" Click="btnselection_Click" Grid.Row="1" Grid.ColumnSpan="4">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>

                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>

                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="btnAnnuler" Content="Annuler" MinHeight="30" Grid.Column="4" Grid.Row="1" Background="#FFFF9388" Click="btnAnnuler_Click" Grid.ColumnSpan="4">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>

                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>

                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>

            </Button>

        </Grid>



    </Grid>
</Window>
